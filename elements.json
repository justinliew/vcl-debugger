{
    "elements": [
        {
            "data": {
                "id": "1",
                "name": "sub set_backend",
                "parent": "0",
                "compound": false,
                "type": "start",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "0",
                "name": "sub set_backend",
                "compound": true,
                "type": "sub",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "2",
                "name": "if (!table.contains(media_backends, req.http.media:primary-backend) || !table.contains(media_backends, req.http.media:secondary-backend)) [...] ",
                "parent": "0",
                "compound": true,
                "type": "parent",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "3",
                "name": "if (!table.contains(media_backends, req.http.media:primary-backend) || !table.contains(media_backends, req.http.media:secondary-backend))",
                "parent": "2",
                "compound": false,
                "type": "conditional",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "4",
                "name": "error 404;",
                "parent": "2",
                "compound": false,
                "type": "terminal",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "5",
                "name": "if (req.http.media:is-shield == \"1\" && req.restarts == 0 && (req.http.media:selected-backend == \"primary\" || req.http.media:selected-backend == \"secondary\")) [...] ",
                "parent": "2",
                "compound": true,
                "type": "parent",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "6",
                "name": "if (req.http.media:is-shield == \"1\" && req.restarts == 0 && (req.http.media:selected-backend == \"primary\" || req.http.media:selected-backend == \"secondary\"))",
                "parent": "5",
                "compound": false,
                "type": "conditional",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "7",
                "name": "if (req.http.media:selected-backend == \"primary\") [...] ",
                "parent": "5",
                "compound": true,
                "type": "parent",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "8",
                "name": "if (req.http.media:selected-backend == \"primary\")",
                "parent": "7",
                "compound": false,
                "type": "conditional",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "9",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:primary-backend, F_vs_cmaf_pushb_uk_primary_443);",
                "parent": "7",
                "compound": false,
                "root": "0"
            }
        },
        {
            "data": {
                "id": "10",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:secondary-backend, F_vs_cmaf_pushb_uk_backup_443);",
                "parent": "7",
                "compound": false,
                "root": "0"
            }
        },
        {
            "data": {
                "id": "11",
                "name": "if (!req.backend.healthy || (req.http.media:restarted == \"1\" && req.http.media:secondary-backend-health == \"1\")) [...] ",
                "parent": "5",
                "compound": true,
                "type": "parent",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "12",
                "name": "if (!req.backend.healthy || (req.http.media:restarted == \"1\" && req.http.media:secondary-backend-health == \"1\"))",
                "parent": "11",
                "compound": false,
                "type": "conditional",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "13",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:secondary-backend, F_vs_cmaf_pushb_uk_backup_443);\nset req.http.media:selected-backend = \"secondary\";\n# This _should_ be the same as we set above, but just in case it's somehow changed in the time it's taken to run the above VCL, set it again here\nset req.http.media:secondary-backend-health = req.backend.healthy;",
                "parent": "11",
                "compound": false,
                "root": "0"
            }
        },
        {
            "data": {
                "id": "14",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:secondary-backend, F_vs_cmaf_pushb_uk_backup_443);\nset req.http.media:secondary-backend-health = req.backend.healthy;\n# Now we can set the primary backend\nset req.backend = table.lookup_backend(media_backends, req.http.media:primary-backend, F_vs_cmaf_pushb_uk_primary_443);\nset req.http.media:selected-backend = \"primary\";\nset req.http.media:primary-backend-health = req.backend.healthy;\n\n# If the current (primary) backend is unhealthy, or we're on a restart (and the secondary is healthy), select the secondary instead",
                "parent": "5",
                "compound": false,
                "root": "0"
            }
        },
        {
            "data": {
                "id": "15",
                "name": "set req.http.media:discriminator = std.tolower(regsub(req.http.host, \"(\\.|-)(stage|live)\\..*\", \"\"));\n#We have to use these because it's not possible to pass two concatenated strings (discriminator + primary/backup) into the functions below\nset req.http.media:primary-backend = req.http.media:discriminator \"-primary\";\nset req.http.media:secondary-backend = req.http.media:discriminator \"-backup\";\n\n#If either the primary or secondary backend are missing, bail out and return a 404, else we might end up sending the request to an incorrect default origin",
                "parent": "0",
                "compound": false,
                "root": "0"
            }
        },
        {
            "data": {
                "id": "16",
                "name": "set req.http.x-log:selected-shield = \"\";\n#Choose a shield POP (if applicable)\ncall select_media_shield_pop;",
                "parent": "0",
                "compound": false,
                "root": "0"
            }
        },
        {
            "data": {
                "id": "17",
                "name": "end",
                "parent": "0",
                "compound": false,
                "type": "terminal",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "18",
                "source": "3",
                "target": "4",
                "name": "true",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "19",
                "source": "8",
                "target": "9",
                "name": "true",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "20",
                "source": "8",
                "target": "10",
                "name": "false",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "21",
                "source": "6",
                "target": "8",
                "name": "true",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "22",
                "source": "12",
                "target": "13",
                "name": "true",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "23",
                "source": "14",
                "target": "12",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "24",
                "source": "6",
                "target": "14",
                "name": "false",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "25",
                "source": "3",
                "target": "6",
                "name": "false",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "26",
                "source": "15",
                "target": "3",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "27",
                "source": "9",
                "target": "16",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "28",
                "source": "10",
                "target": "16",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "29",
                "source": "13",
                "target": "16",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "30",
                "source": "12",
                "target": "16",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "31",
                "source": "1",
                "target": "15",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "32",
                "source": "16",
                "target": "17",
                "type": "edge",
                "root": "0"
            }
        },
        {
            "data": {
                "id": "34",
                "name": "sub select_media_shield_pop",
                "parent": "33",
                "compound": false,
                "type": "start",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "33",
                "name": "sub select_media_shield_pop",
                "compound": true,
                "type": "sub",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "35",
                "name": "if (server.datacenter == \"LCY\") [...] ",
                "parent": "33",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "36",
                "name": "if (server.datacenter == \"LCY\")",
                "parent": "35",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "37",
                "name": "set var.primary-shield-pop = \"LHR\";\nset var.secondary-shield-pop = \"LCY\";",
                "parent": "35",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "38",
                "name": "set var.primary-shield-pop = \"LCY\";\nset var.secondary-shield-pop = \"LHR\";",
                "parent": "35",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "39",
                "name": "declare local var.shield-pop STRING;\n#We have to use this annoying additional variable because it doesn't appear to be possible to pass two concatenated strings into srd.strstr :-(\ndeclare local var.shield-pop-hyphen STRING;\n#We have to use this so that we can decide which way round to put the primary/backup depending on which POP we're in\ndeclare local var.primary-shield-pop STRING;\ndeclare local var.secondary-shield-pop STRING;\n\n#This ensures we _always_ go to another POP (as a shield) for the primary request. This means that if the shield POP returns a successful response (after any necessary restarts), we can cache it against the primary origin cache key here, to avoid repeatedly checking the primary origin if something is 404'ing\n#If the shield designations change, be sure to update the 4xx logic in vcl_fetch as well.",
                "parent": "33",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "40",
                "name": "if (fastly.ff.visits_this_service == 0 && req.http.x-vcl-version-mismatch != \"1\" && req.http.Fastly-No-Shield != \"1\") [...] ",
                "parent": "33",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "41",
                "name": "if (fastly.ff.visits_this_service == 0 && req.http.x-vcl-version-mismatch != \"1\" && req.http.Fastly-No-Shield != \"1\")",
                "parent": "40",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "42",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "40",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "43",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "42",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "44",
                "name": "if (!req.backend.healthy) [...] ",
                "parent": "42",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "45",
                "name": "if (!req.backend.healthy)",
                "parent": "44",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "46",
                "name": "set req.http.media:secondary-backend-shield-health = \"0\";",
                "parent": "44",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "47",
                "name": "set req.http.media:secondary-backend-shield-health = \"1\";",
                "parent": "44",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "48",
                "name": "set req.backend = table.lookup_backend(media_shield_backends, var.shield-pop, ssl_shield_london_uk);\nset req.http.media:secondary-backend-shield = req.backend;",
                "parent": "42",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "49",
                "name": "if (req.http.media:selected-backend == \"secondary\") [...] ",
                "parent": "42",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "50",
                "name": "if (req.http.media:selected-backend == \"secondary\")",
                "parent": "49",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "51",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:secondary-backend, F_vs_cmaf_pushb_uk_backup_443);",
                "parent": "49",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "52",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:primary-backend, F_vs_cmaf_pushb_uk_primary_443);",
                "parent": "49",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "53",
                "name": "#Reset the backend to whatever it was to begin with, else it'll end up staying on the seconary shield for end-user requests that land on the primary shield POP (because the bit below won't set the backend to anything)",
                "parent": "42",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "54",
                "name": "set var.shield-pop = var.secondary-shield-pop;\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "40",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "55",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "40",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "56",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "55",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "57",
                "name": "if (!req.backend.healthy) [...] ",
                "parent": "55",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "58",
                "name": "if (!req.backend.healthy)",
                "parent": "57",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "59",
                "name": "set req.http.media:primary-backend-shield-health = \"0\";",
                "parent": "57",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "60",
                "name": "set req.http.media:primary-backend-shield-health = \"1\";",
                "parent": "57",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "61",
                "name": "set req.backend = table.lookup_backend(media_shield_backends, var.shield-pop, ssl_shield_london_city_uk);\nset req.http.media:selected-shield = \"primary\";\nset req.http.media:primary-backend-shield = req.backend;",
                "parent": "55",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "62",
                "name": "#Now set to the PRIMARY shield POP, so that we can check its health. We'll also stick with this backend if the \"secondary\" logic that follows doesn't kick in.\nset var.shield-pop = var.primary-shield-pop;\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "40",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "63",
                "name": "if ((req.http.media:selected-backend == \"secondary\" && (req.http.media:secondary-backend-shield-health != \"0\" || req.http.media:primary-backend-health != \"1\")) || req.http.media:primary-backend-shield-health == \"0\") [...] ",
                "parent": "40",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "64",
                "name": "if ((req.http.media:selected-backend == \"secondary\" && (req.http.media:secondary-backend-shield-health != \"0\" || req.http.media:primary-backend-health != \"1\")) || req.http.media:primary-backend-shield-health == \"0\")",
                "parent": "63",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "65",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "63",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "66",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "65",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "67",
                "name": "set req.backend = table.lookup_backend(media_shield_backends, var.shield-pop, ssl_shield_london_uk);\nset req.http.media:selected-shield = \"secondary\";",
                "parent": "65",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "68",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:secondary-backend, F_vs_cmaf_pushb_uk_backup_443);\nset req.http.media:selected-shield = \"\";",
                "parent": "65",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "69",
                "name": "set req.http.media:selected-backend = \"secondary\";\nset var.shield-pop = var.secondary-shield-pop;\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "63",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "70",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "63",
                "compound": true,
                "type": "parent",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "71",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "70",
                "compound": false,
                "type": "conditional",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "72",
                "name": "set req.backend = table.lookup_backend(media_shield_backends, var.shield-pop, ssl_shield_london_city_uk);\nset req.http.media:selected-shield = \"primary\";",
                "parent": "70",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "73",
                "name": "set req.backend = table.lookup_backend(media_backends, req.http.media:primary-backend, F_vs_cmaf_pushb_uk_primary_443);\nset req.http.media:selected-shield = \"\";",
                "parent": "70",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "74",
                "name": "set req.http.media:selected-backend = \"primary\";\nset var.shield-pop = var.primary-shield-pop;\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "63",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "75",
                "name": "#If we previously chose the secondary media backend and the secondary shield is healthy;\n#OR we previously chose the secondary media backend and the primary media backend is unhealthy, even if the secondary shield backend is not healthy (this allows us to stick with the secondary shield even if it's sick, if the primary media backend was sick, to provide more useful log data about what failed);\n#OR the primary shield backend is unhealthy, switch to the SECONDARY shield POP",
                "parent": "40",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "76",
                "name": "#Unset these in case they're already set; we'll use them to record what the shield backends are (if any) and what their health is\nunset req.http.media:primary-backend-shield;\nunset req.http.media:secondary-backend-shield;\nunset req.http.media:primary-backend-shield-health;\nunset req.http.media:secondary-backend-shield-health;\n\n#Only choose a shield backend if we're on an edge node (so as to avoid potential request loops between different shields POPs), and if there were no version mismatches or other reasons we set Fastly-No-Shield",
                "parent": "33",
                "compound": false,
                "root": "33"
            }
        },
        {
            "data": {
                "id": "77",
                "name": "end",
                "parent": "33",
                "compound": false,
                "type": "terminal",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "78",
                "source": "36",
                "target": "37",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "79",
                "source": "36",
                "target": "38",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "80",
                "source": "39",
                "target": "36",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "81",
                "source": "45",
                "target": "46",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "82",
                "source": "45",
                "target": "47",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "83",
                "source": "48",
                "target": "45",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "84",
                "source": "50",
                "target": "51",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "85",
                "source": "50",
                "target": "52",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "86",
                "source": "53",
                "target": "50",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "87",
                "source": "46",
                "target": "53",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "88",
                "source": "47",
                "target": "53",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "89",
                "source": "43",
                "target": "48",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "90",
                "source": "54",
                "target": "43",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "91",
                "source": "58",
                "target": "59",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "92",
                "source": "58",
                "target": "60",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "93",
                "source": "61",
                "target": "58",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "94",
                "source": "56",
                "target": "61",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "95",
                "source": "62",
                "target": "56",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "96",
                "source": "51",
                "target": "62",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "97",
                "source": "52",
                "target": "62",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "98",
                "source": "43",
                "target": "62",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "99",
                "source": "66",
                "target": "67",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "100",
                "source": "66",
                "target": "68",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "101",
                "source": "69",
                "target": "66",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "102",
                "source": "64",
                "target": "69",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "103",
                "source": "71",
                "target": "72",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "104",
                "source": "71",
                "target": "73",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "105",
                "source": "74",
                "target": "71",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "106",
                "source": "64",
                "target": "74",
                "name": "false",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "107",
                "source": "75",
                "target": "64",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "108",
                "source": "59",
                "target": "75",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "109",
                "source": "60",
                "target": "75",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "110",
                "source": "56",
                "target": "75",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "111",
                "source": "41",
                "target": "54",
                "name": "true",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "112",
                "source": "76",
                "target": "41",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "113",
                "source": "37",
                "target": "76",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "114",
                "source": "38",
                "target": "76",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "115",
                "source": "34",
                "target": "39",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "116",
                "source": "67",
                "target": "77",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "117",
                "source": "68",
                "target": "77",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "118",
                "source": "72",
                "target": "77",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "119",
                "source": "73",
                "target": "77",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "120",
                "source": "41",
                "target": "77",
                "type": "edge",
                "root": "33"
            }
        },
        {
            "data": {
                "id": "122",
                "name": "sub set_origin_headers",
                "parent": "121",
                "compound": false,
                "type": "start",
                "root": "121"
            }
        },
        {
            "data": {
                "id": "121",
                "name": "sub set_origin_headers",
                "compound": true,
                "type": "sub",
                "root": "121"
            }
        },
        {
            "data": {
                "id": "123",
                "name": "set bereq.http.X-AUTH-FASTLY = req.http.X-BBC-Fastly-PSK-save-for-later;",
                "parent": "121",
                "compound": false,
                "root": "121"
            }
        },
        {
            "data": {
                "id": "124",
                "name": "end",
                "parent": "121",
                "compound": false,
                "type": "terminal",
                "root": "121"
            }
        },
        {
            "data": {
                "id": "125",
                "source": "122",
                "target": "123",
                "type": "edge",
                "root": "121"
            }
        },
        {
            "data": {
                "id": "126",
                "source": "123",
                "target": "124",
                "type": "edge",
                "root": "121"
            }
        },
        {
            "data": {
                "id": "128",
                "name": "sub set_geo_backend",
                "parent": "127",
                "compound": false,
                "type": "start",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "127",
                "name": "sub set_geo_backend",
                "compound": true,
                "type": "sub",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "129",
                "name": "if (server.region ~ \"(?i)^(North-America|US-East|US-Central|US-West)$\") [...] ",
                "parent": "127",
                "compound": true,
                "type": "parent",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "130",
                "name": "if (server.region ~ \"(?i)^(North-America|US-East|US-Central|US-West)$\")",
                "parent": "129",
                "compound": false,
                "type": "conditional",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "131",
                "name": "set req.http.geo:fastly-edge-region-group=\"Global\";\nset req.http.geo:primary-region=\"us_east\";\nset req.http.geo:secondary-region=\"london\";",
                "parent": "129",
                "compound": false,
                "root": "127"
            }
        },
        {
            "data": {
                "id": "132",
                "name": "set req.http.geo:primary-region=\"london\";\nset req.http.geo:secondary-region=\"us_east\";",
                "parent": "129",
                "compound": false,
                "root": "127"
            }
        },
        {
            "data": {
                "id": "133",
                "name": "if (!req.backend.healthy || (req.http.geo:restarted == \"1\" && req.http.geo:secondary-region-health == \"1\" && req.http.x-vcl-version-mismatch != \"1\")) [...] ",
                "parent": "127",
                "compound": true,
                "type": "parent",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "134",
                "name": "if (!req.backend.healthy || (req.http.geo:restarted == \"1\" && req.http.geo:secondary-region-health == \"1\" && req.http.x-vcl-version-mismatch != \"1\"))",
                "parent": "133",
                "compound": false,
                "type": "conditional",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "135",
                "name": "set req.backend = table.lookup_backend(geo_backends, req.http.geo:secondary-region, F_geo_us_east_443);\nset req.http.geo:selected-backend = \"secondary\";\n# This _should_ be the same as we set above, but just in case it's somehow changed in the time it's taken to run the above VCL, set it again here\nset req.http.geo:secondary-region-health = req.backend.healthy;",
                "parent": "133",
                "compound": false,
                "root": "127"
            }
        },
        {
            "data": {
                "id": "136",
                "name": "##### Now map to origins (including backup origins for restarts) #####\n\n# This is a bit untidy, but we have to select the secondary backend first in order to check its status, so that we can populate req.http.geo:secondary-region-health (otherwise we don't touch the secondary backend unless the primary is unhealthy)\nset req.backend = table.lookup_backend(geo_backends, req.http.geo:secondary-region, F_geo_us_east_443);\nset req.http.geo:secondary-region-health = req.backend.healthy;\n# Now we can set the primary backend\nset req.backend = table.lookup_backend(geo_backends, req.http.geo:primary-region, F_geo_london_443);\nset req.http.geo:selected-backend = \"primary\";\nset req.http.geo:primary-region-health = req.backend.healthy;\n\n# If the current (primary) backend is unhealthy, or we're on a restart (and the secondary is healthy), select the secondary instead (unless this restart was due to a VCL version mismatch)",
                "parent": "127",
                "compound": false,
                "root": "127"
            }
        },
        {
            "data": {
                "id": "137",
                "name": "#Choose a shield POP (if applicable)\ncall select_shield_pop;\n\n#Set the path equal to the client IP, as that's what the GeoIP API requires\nset req.url = \"/\" req.http.X-BBC-Edge-Client-IP;\n#Remove the range header, as this may cause a 416 error if the client supplied one (particularly if served from cache by Fastly). We'll set it back later.\nunset req.http.range;\n#Remove the \"if-modified-since\" / \"if-none-match\" etc headers to avoid confusing 304s / 412s etc from Fastly's cache, and to prevent the possibility of upstream confusion on geoip\nunset req.http.if-modified-since;\nunset req.http.if-none-match;\nunset req.http.if-match;\nunset req.http.if-unmodified-since;",
                "parent": "127",
                "compound": false,
                "root": "127"
            }
        },
        {
            "data": {
                "id": "138",
                "name": "end",
                "parent": "127",
                "compound": false,
                "type": "terminal",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "139",
                "source": "130",
                "target": "131",
                "name": "true",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "140",
                "source": "130",
                "target": "132",
                "name": "false",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "141",
                "source": "134",
                "target": "135",
                "name": "true",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "142",
                "source": "136",
                "target": "134",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "143",
                "source": "131",
                "target": "136",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "144",
                "source": "132",
                "target": "136",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "145",
                "source": "135",
                "target": "137",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "146",
                "source": "134",
                "target": "137",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "147",
                "source": "128",
                "target": "130",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "148",
                "source": "137",
                "target": "138",
                "type": "edge",
                "root": "127"
            }
        },
        {
            "data": {
                "id": "150",
                "name": "sub select_shield_pop",
                "parent": "149",
                "compound": false,
                "type": "start",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "149",
                "name": "sub select_shield_pop",
                "compound": true,
                "type": "sub",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "151",
                "name": "if (fastly.ff.visits_this_service == 0 && req.http.x-vcl-version-mismatch != \"1\" && req.http.Fastly-No-Shield != \"1\") [...] ",
                "parent": "149",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "152",
                "name": "if (fastly.ff.visits_this_service == 0 && req.http.x-vcl-version-mismatch != \"1\" && req.http.Fastly-No-Shield != \"1\")",
                "parent": "151",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "153",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "151",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "154",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "153",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "155",
                "name": "if (!req.backend.healthy) [...] ",
                "parent": "153",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "156",
                "name": "if (!req.backend.healthy)",
                "parent": "155",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "157",
                "name": "set req.http.geo:secondary-region-shield-health = \"0\";",
                "parent": "155",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "158",
                "name": "set req.http.geo:secondary-region-shield-health = \"1\";",
                "parent": "155",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "159",
                "name": "set req.backend = table.lookup_backend(shield_backends, var.shield-pop, F_geo_us_east_443);\nset req.http.geo:secondary-region-shield = req.backend;",
                "parent": "153",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "160",
                "name": "if (req.http.geo:selected-backend == \"secondary\") [...] ",
                "parent": "153",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "161",
                "name": "if (req.http.geo:selected-backend == \"secondary\")",
                "parent": "160",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "162",
                "name": "set req.backend = table.lookup_backend(geo_backends, req.http.geo:secondary-region, F_geo_us_east_443);",
                "parent": "160",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "163",
                "name": "set req.backend = table.lookup_backend(geo_backends, req.http.geo:primary-region, F_geo_london_443);",
                "parent": "160",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "164",
                "name": "#Reset the backend to whatever it was to begin with, else it'll end up staying on the seconary shield for end-user requests that land on the primary shield POP (because the bit below won't set the backend to anything)",
                "parent": "153",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "165",
                "name": "set var.shield-pop = table.lookup(shield_pops, req.http.geo:secondary-region);\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "151",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "166",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "151",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "167",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "166",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "168",
                "name": "if (!req.backend.healthy) [...] ",
                "parent": "166",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "169",
                "name": "if (!req.backend.healthy)",
                "parent": "168",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "170",
                "name": "set req.http.geo:primary-region-shield-health = \"0\";",
                "parent": "168",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "171",
                "name": "set req.http.geo:primary-region-shield-health = \"1\";",
                "parent": "168",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "172",
                "name": "set req.backend = table.lookup_backend(shield_backends, var.shield-pop, F_geo_london_443);\nset req.http.geo:primary-region-shield = req.backend;",
                "parent": "166",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "173",
                "name": "#Now set to the PRIMARY shield POP, so that we can check its health. We'll also stick with this backend if the \"secondary\" logic that follows doesn't kick in.\nset var.shield-pop = table.lookup(shield_pops, req.http.geo:primary-region);\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "151",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "174",
                "name": "if ((req.http.geo:selected-backend == \"secondary\" && (req.http.geo:secondary-region-shield-health == \"1\" || req.http.geo:primary-region-health != \"1\")) || req.http.geo:primary-region-shield-health == \"0\") [...] ",
                "parent": "151",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "175",
                "name": "if ((req.http.geo:selected-backend == \"secondary\" && (req.http.geo:secondary-region-shield-health == \"1\" || req.http.geo:primary-region-health != \"1\")) || req.http.geo:primary-region-shield-health == \"0\")",
                "parent": "174",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "176",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "174",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "177",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "176",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "178",
                "name": "set req.backend = table.lookup_backend(shield_backends, var.shield-pop, F_geo_us_east_443);",
                "parent": "176",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "179",
                "name": "set req.backend = table.lookup_backend(geo_backends, req.http.geo:secondary-region, F_geo_us_east_443);",
                "parent": "176",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "180",
                "name": "set req.http.geo:selected-backend = \"secondary\";\nset var.shield-pop = table.lookup(shield_pops, req.http.geo:secondary-region);\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "174",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "181",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen)) [...] ",
                "parent": "174",
                "compound": true,
                "type": "parent",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "182",
                "name": "if (std.strlen(var.shield-pop)>0 && server.datacenter != var.shield-pop && !std.strstr(req.http.Fastly-FF, var.shield-pop-hyphen))",
                "parent": "181",
                "compound": false,
                "type": "conditional",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "183",
                "name": "set req.backend = table.lookup_backend(shield_backends, var.shield-pop, F_geo_london_443);",
                "parent": "181",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "184",
                "name": "set req.backend = table.lookup_backend(geo_backends, req.http.geo:primary-region, F_geo_london_443);",
                "parent": "181",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "185",
                "name": "set req.http.geo:selected-backend = \"primary\";\nset var.shield-pop = table.lookup(shield_pops, req.http.geo:primary-region);\nset var.shield-pop-hyphen = \"-\" var.shield-pop;\n#Only do this if we're not currently on the Shield POP",
                "parent": "174",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "186",
                "name": "#If we previously chose the secondary geoip region and the secondary shield is healthy;\n#OR we previously chose the secondary geoip region and the primary geoip region is unhealthy, even if the secondary shield region is not healthy (this allows us to stick with the secondary shield even if it's sick, if the primary geoip backend was sick, to provide more useful log data about what failed);\n#OR the primary shield backend is unhealthy, switch to the SECONDARY shield POP",
                "parent": "151",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "187",
                "name": "declare local var.shield-pop STRING;\n#We have to use this annoying additional variable because it doesn't appear to be possible to pass two concatenated strings into srd.strstr :-(\ndeclare local var.shield-pop-hyphen STRING;\n\n#Unset these in case they're already set; we'll use them to record what the shield regions are (if any) and what their health is\nunset req.http.geo:primary-region-shield;\nunset req.http.geo:secondary-region-shield;\nunset req.http.geo:primary-region-shield-health;\nunset req.http.geo:secondary-region-shield-health;\n\n#Only choose a shield backend if we're on an edge node (so as to avoid potential request loops between different shields POPs), and if there were no version mismatches or other reasons we set Fastly-No-Shield",
                "parent": "149",
                "compound": false,
                "root": "149"
            }
        },
        {
            "data": {
                "id": "188",
                "name": "end",
                "parent": "149",
                "compound": false,
                "type": "terminal",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "189",
                "source": "156",
                "target": "157",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "190",
                "source": "156",
                "target": "158",
                "name": "false",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "191",
                "source": "159",
                "target": "156",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "192",
                "source": "161",
                "target": "162",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "193",
                "source": "161",
                "target": "163",
                "name": "false",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "194",
                "source": "164",
                "target": "161",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "195",
                "source": "157",
                "target": "164",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "196",
                "source": "158",
                "target": "164",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "197",
                "source": "154",
                "target": "159",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "198",
                "source": "165",
                "target": "154",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "199",
                "source": "169",
                "target": "170",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "200",
                "source": "169",
                "target": "171",
                "name": "false",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "201",
                "source": "172",
                "target": "169",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "202",
                "source": "167",
                "target": "172",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "203",
                "source": "173",
                "target": "167",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "204",
                "source": "162",
                "target": "173",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "205",
                "source": "163",
                "target": "173",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "206",
                "source": "154",
                "target": "173",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "207",
                "source": "177",
                "target": "178",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "208",
                "source": "177",
                "target": "179",
                "name": "false",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "209",
                "source": "180",
                "target": "177",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "210",
                "source": "175",
                "target": "180",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "211",
                "source": "182",
                "target": "183",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "212",
                "source": "182",
                "target": "184",
                "name": "false",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "213",
                "source": "185",
                "target": "182",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "214",
                "source": "175",
                "target": "185",
                "name": "false",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "215",
                "source": "186",
                "target": "175",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "216",
                "source": "170",
                "target": "186",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "217",
                "source": "171",
                "target": "186",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "218",
                "source": "167",
                "target": "186",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "219",
                "source": "152",
                "target": "165",
                "name": "true",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "220",
                "source": "187",
                "target": "152",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "221",
                "source": "150",
                "target": "187",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "222",
                "source": "178",
                "target": "188",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "223",
                "source": "179",
                "target": "188",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "224",
                "source": "183",
                "target": "188",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "225",
                "source": "184",
                "target": "188",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "226",
                "source": "152",
                "target": "188",
                "type": "edge",
                "root": "149"
            }
        },
        {
            "data": {
                "id": "228",
                "name": "sub set_geoip_origin_headers",
                "parent": "227",
                "compound": false,
                "type": "start",
                "root": "227"
            }
        },
        {
            "data": {
                "id": "227",
                "name": "sub set_geoip_origin_headers",
                "compound": true,
                "type": "sub",
                "root": "227"
            }
        },
        {
            "data": {
                "id": "229",
                "name": "unset bereq.http.user-agent;\nset bereq.http.user-agent = \"Fastly Media Edge Node \" server.hostname;\nunset bereq.http.referer;\nunset bereq.http.cookie;",
                "parent": "227",
                "compound": false,
                "root": "227"
            }
        },
        {
            "data": {
                "id": "230",
                "name": "end",
                "parent": "227",
                "compound": false,
                "type": "terminal",
                "root": "227"
            }
        },
        {
            "data": {
                "id": "231",
                "source": "228",
                "target": "229",
                "type": "edge",
                "root": "227"
            }
        },
        {
            "data": {
                "id": "232",
                "source": "229",
                "target": "230",
                "type": "edge",
                "root": "227"
            }
        },
        {
            "data": {
                "id": "234",
                "name": "sub vcl_deliver",
                "parent": "233",
                "compound": false,
                "type": "start",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "233",
                "name": "sub vcl_deliver",
                "compound": true,
                "type": "sub",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "235",
                "name": "if (resp.status >= 900) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "236",
                "name": "if (resp.status >= 900)",
                "parent": "235",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "237",
                "name": "set req.http.geo:done = \"1\";",
                "parent": "235",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "238",
                "name": "if(resp.status == 621) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "239",
                "name": "if(resp.status == 621)",
                "parent": "238",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "240",
                "name": "if (fastly.ff.visits_this_service == 0) [...] ",
                "parent": "238",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "241",
                "name": "if (fastly.ff.visits_this_service == 0)",
                "parent": "240",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "242",
                "name": "set req.http.x-vcl-version-mismatch = \"1\";\nrestart;",
                "parent": "240",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "243",
                "name": "return(deliver);",
                "parent": "240",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "244",
                "name": "if (resp.status == 601) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "245",
                "name": "if (resp.status == 601)",
                "parent": "244",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "246",
                "name": "set resp.status = 500;\nset resp.http.X-Served-By = server.identity;\nset resp.response = \"GeoIP Backend Unhealthy\";\nreturn(deliver);",
                "parent": "244",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "247",
                "name": "# If we're coming here from the synthetic, go straight to deliver, to avoid restarting the request",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "248",
                "name": "if (resp.status == 603) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "249",
                "name": "if (resp.status == 603)",
                "parent": "248",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "250",
                "name": "set resp.status = 500;\nset resp.http.X-Served-By = server.identity;\nset resp.response = \"Media Backend Unhealthy\";\nreturn(deliver);",
                "parent": "248",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "251",
                "name": "# If we're coming here from the synthetic, go straight to deliver, to avoid restarting the request",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "252",
                "name": "if (fastly.ff.visits_this_service > 0) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "253",
                "name": "if (fastly.ff.visits_this_service > 0)",
                "parent": "252",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "254",
                "name": "if ((!resp.http.x-log:backend-name || resp.http.x-log:backend-name==\"\") && !resp.http.backend-name) [...] ",
                "parent": "252",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "255",
                "name": "if ((!resp.http.x-log:backend-name || resp.http.x-log:backend-name==\"\") && !resp.http.backend-name)",
                "parent": "254",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "256",
                "name": "",
                "parent": "254",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "257",
                "name": "if ((!resp.http.geo:selected-backend || resp.http.geo:selected-backend==\"\") && !resp.http.geo-selected-backend) [...] ",
                "parent": "252",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "258",
                "name": "if ((!resp.http.geo:selected-backend || resp.http.geo:selected-backend==\"\") && !resp.http.geo-selected-backend)",
                "parent": "257",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "259",
                "name": "",
                "parent": "257",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "260",
                "name": "{set resp.http.x-log:backend-name = req.http.x-log:backend-name;}",
                "parent": "252",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "261",
                "name": "if (!resp.http.media:selected-backend || resp.http.media:selected-backend==\"\") [...] ",
                "parent": "252",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "262",
                "name": "if (!resp.http.media:selected-backend || resp.http.media:selected-backend==\"\")",
                "parent": "261",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "263",
                "name": "",
                "parent": "261",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "264",
                "name": "{set resp.http.geo:selected-backend = req.http.geo:selected-backend;}",
                "parent": "252",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "265",
                "name": "{set resp.http.media:selected-backend = req.http.media:selected-backend;}\n\n#Pass back the original status code (prior to any restart)\nset resp.http.x-log:geo-original-status-code = req.http.x-log:geo-original-status-code;\nset resp.http.x-log:geo-original-status-msg = req.http.x-log:geo-original-status-msg;\nset resp.http.x-log:original-status-code = req.http.x-log:original-status-code;\nset resp.http.x-log:original-status-msg = req.http.x-log:original-status-msg;",
                "parent": "252",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "266",
                "name": "#Set these to be passed back to the edge if we're on a shield",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "267",
                "name": "if (fastly.ff.visits_this_service == 0) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "268",
                "name": "if (fastly.ff.visits_this_service == 0)",
                "parent": "267",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "269",
                "name": "if (!resp.http.x-log:backend-ip || resp.http.x-log:backend-ip==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "270",
                "name": "if (!resp.http.x-log:backend-ip || resp.http.x-log:backend-ip==\"\")",
                "parent": "269",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "271",
                "name": "",
                "parent": "269",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "272",
                "name": "if (!resp.http.x-log:backend-src-ip || resp.http.x-log:backend-src-ip==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "273",
                "name": "if (!resp.http.x-log:backend-src-ip || resp.http.x-log:backend-src-ip==\"\")",
                "parent": "272",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "274",
                "name": "",
                "parent": "272",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "275",
                "name": "{set resp.http.x-log:backend-ip = resp.http.backend-ip;}\nset req.http.x-log:backend-ip = resp.http.x-log:backend-ip;\nunset resp.http.x-log:backend-ip;\nunset resp.http.backend-ip;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "276",
                "name": "if (!resp.http.x-log:backend-requests || resp.http.x-log:backend-requests==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "277",
                "name": "if (!resp.http.x-log:backend-requests || resp.http.x-log:backend-requests==\"\")",
                "parent": "276",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "278",
                "name": "",
                "parent": "276",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "279",
                "name": "{set resp.http.x-log:backend-src-ip = resp.http.backend-src_ip;}\nset req.http.x-log:backend-src-ip = resp.http.x-log:backend-src-ip;\nunset resp.http.x-log:backend-src-ip;\nunset resp.http.backend-src_ip;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "280",
                "name": "if (!resp.http.x-log:backend-cwnd || resp.http.x-log:backend-cwnd==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "281",
                "name": "if (!resp.http.x-log:backend-cwnd || resp.http.x-log:backend-cwnd==\"\")",
                "parent": "280",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "282",
                "name": "",
                "parent": "280",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "283",
                "name": "{set resp.http.x-log:backend-requests = resp.http.backend-requests;}\nset req.http.x-log:backend-requests = resp.http.x-log:backend-requests;\nunset resp.http.x-log:backend-requests;\nunset resp.http.backend-requests;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "284",
                "name": "if (!resp.http.x-log:backend-vary || resp.http.x-log:backend-vary==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "285",
                "name": "if (!resp.http.x-log:backend-vary || resp.http.x-log:backend-vary==\"\")",
                "parent": "284",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "286",
                "name": "",
                "parent": "284",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "287",
                "name": "{set resp.http.x-log:backend-cwnd = resp.http.backend-cwnd;}\nset req.http.x-log:backend-cwnd = resp.http.x-log:backend-cwnd;\nunset resp.http.x-log:backend-cwnd;\nunset resp.http.backend-cwnd;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "288",
                "name": "if (!resp.http.x-log:backend-cache-control || resp.http.x-log:backend-cache-control==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "289",
                "name": "if (!resp.http.x-log:backend-cache-control || resp.http.x-log:backend-cache-control==\"\")",
                "parent": "288",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "290",
                "name": "",
                "parent": "288",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "291",
                "name": "{set resp.http.x-log:backend-vary = resp.http.backend-vary;}\nset req.http.x-log:backend-vary = resp.http.x-log:backend-vary;\nunset resp.http.x-log:backend-vary;\nunset resp.http.backend-vary;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "292",
                "name": "if (!resp.http.x-log:backend-status-msg || resp.http.x-log:backend-status-msg==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "293",
                "name": "if (!resp.http.x-log:backend-status-msg || resp.http.x-log:backend-status-msg==\"\")",
                "parent": "292",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "294",
                "name": "",
                "parent": "292",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "295",
                "name": "{set resp.http.x-log:backend-cache-control = resp.http.backend-cache-control;}\nset req.http.x-log:backend-cache-control = resp.http.x-log:backend-cache-control;\nunset resp.http.x-log:backend-cache-control;\nunset resp.http.backend-cache-control;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "296",
                "name": "if (!resp.http.x-log:backend-status-code || resp.http.x-log:backend-status-code==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "297",
                "name": "if (!resp.http.x-log:backend-status-code || resp.http.x-log:backend-status-code==\"\")",
                "parent": "296",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "298",
                "name": "",
                "parent": "296",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "299",
                "name": "{set resp.http.x-log:backend-status-msg = resp.http.backend-status-msg;}\nset req.http.x-log:backend-status-msg = resp.http.x-log:backend-status-msg;\nunset resp.http.x-log:backend-status-msg;\nunset resp.http.backend-status-msg;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "300",
                "name": "if (!resp.http.x-log:origin-host-header || resp.http.x-log:origin-host-header==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "301",
                "name": "if (!resp.http.x-log:origin-host-header || resp.http.x-log:origin-host-header==\"\")",
                "parent": "300",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "302",
                "name": "",
                "parent": "300",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "303",
                "name": "{set resp.http.x-log:backend-status-code = resp.http.backend-status-code;}\nset req.http.x-log:backend-status-code = resp.http.x-log:backend-status-code;\nunset resp.http.x-log:backend-status-code;\nunset resp.http.backend-status-code;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "304",
                "name": "if (!resp.http.x-log:backend-name || resp.http.x-log:backend-name==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "305",
                "name": "if (!resp.http.x-log:backend-name || resp.http.x-log:backend-name==\"\")",
                "parent": "304",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "306",
                "name": "",
                "parent": "304",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "307",
                "name": "{set resp.http.x-log:origin-host-header = resp.http.origin-host-header;}\nset req.http.x-log:origin-host-header = resp.http.x-log:origin-host-header;\nunset resp.http.x-log:origin-host-header;\nunset resp.http.origin-host-header;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "308",
                "name": "if (resp.http.x-log:backend-name && resp.http.x-log:backend-name!=\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "309",
                "name": "if (resp.http.x-log:backend-name && resp.http.x-log:backend-name!=\"\")",
                "parent": "308",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "310",
                "name": "",
                "parent": "308",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "311",
                "name": "{set resp.http.x-log:backend-name = resp.http.backend-name;}",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "312",
                "name": "if (!resp.http.geo:selected-backend || resp.http.geo:selected-backend==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "313",
                "name": "if (!resp.http.geo:selected-backend || resp.http.geo:selected-backend==\"\")",
                "parent": "312",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "314",
                "name": "",
                "parent": "312",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "315",
                "name": "{set req.http.x-log:backend-name = resp.http.x-log:backend-name;}\nunset resp.http.x-log:backend-name;\nunset resp.http.backend-name;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "316",
                "name": "if (resp.http.geo:selected-backend && resp.http.geo:selected-backend!=\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "317",
                "name": "if (resp.http.geo:selected-backend && resp.http.geo:selected-backend!=\"\")",
                "parent": "316",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "318",
                "name": "",
                "parent": "316",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "319",
                "name": "{set resp.http.geo:selected-backend = resp.http.selected-backend;}",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "320",
                "name": "if (!resp.http.media:selected-backend || resp.http.media:selected-backend==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "321",
                "name": "if (!resp.http.media:selected-backend || resp.http.media:selected-backend==\"\")",
                "parent": "320",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "322",
                "name": "",
                "parent": "320",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "323",
                "name": "{set req.http.geo:selected-backend = resp.http.geo:selected-backend;}\nunset resp.http.geo:selected-backend;\nunset resp.http.selected-backend;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "324",
                "name": "if (resp.http.media:selected-backend && resp.http.media:selected-backend!=\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "325",
                "name": "if (resp.http.media:selected-backend && resp.http.media:selected-backend!=\"\")",
                "parent": "324",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "326",
                "name": "",
                "parent": "324",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "327",
                "name": "{set resp.http.media:selected-backend = resp.http.selected-backend;}",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "328",
                "name": "if (!req.http.x-log:req-headers-count || req.http.x-log:req-headers-count==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "329",
                "name": "if (!req.http.x-log:req-headers-count || req.http.x-log:req-headers-count==\"\")",
                "parent": "328",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "330",
                "name": "set req.http.x-log:req-headers-count = resp.http.x-log:req-headers-count;",
                "parent": "328",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "331",
                "name": "{set req.http.media:selected-backend = resp.http.media:selected-backend;}\nunset resp.http.media:selected-backend;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "332",
                "name": "if (resp.http.x-log:geo-original-status-code && resp.http.x-log:geo-original-status-code!=\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "333",
                "name": "if (resp.http.x-log:geo-original-status-code && resp.http.x-log:geo-original-status-code!=\"\")",
                "parent": "332",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "334",
                "name": "",
                "parent": "332",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "335",
                "name": "unset resp.http.x-log:req-headers-count;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "336",
                "name": "if (resp.http.x-log:geo-original-status-msg && resp.http.x-log:geo-original-status-msg!=\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "337",
                "name": "if (resp.http.x-log:geo-original-status-msg && resp.http.x-log:geo-original-status-msg!=\"\")",
                "parent": "336",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "338",
                "name": "",
                "parent": "336",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "339",
                "name": "{set req.http.x-log:geo-original-status-code = resp.http.x-log:geo-original-status-code;}\nunset resp.http.x-log:geo-original-status-code;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "340",
                "name": "if (!req.http.x-log:original-status-code || req.http.x-log:original-status-code==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "341",
                "name": "if (!req.http.x-log:original-status-code || req.http.x-log:original-status-code==\"\")",
                "parent": "340",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "342",
                "name": "",
                "parent": "340",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "343",
                "name": "{set req.http.x-log:geo-original-status-msg = resp.http.x-log:geo-original-status-msg;}\nunset resp.http.x-log:geo-original-status-msg;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "344",
                "name": "if (!req.http.x-log:original-status-msg || req.http.x-log:original-status-msg==\"\") [...] ",
                "parent": "267",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "345",
                "name": "if (!req.http.x-log:original-status-msg || req.http.x-log:original-status-msg==\"\")",
                "parent": "344",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "346",
                "name": "",
                "parent": "344",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "347",
                "name": "{set req.http.x-log:original-status-code = resp.http.x-log:original-status-code;}\nunset resp.http.x-log:original-status-code;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "348",
                "name": "{set req.http.x-log:original-status-msg = resp.http.x-log:original-status-msg;}\nunset resp.http.x-log:original-status-msg;",
                "parent": "267",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "349",
                "name": "#Only set the \"final\" logging headers if we're on the edge POP",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "350",
                "name": "if (req.http.media:options == \"1\") [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "351",
                "name": "if (req.http.media:options == \"1\")",
                "parent": "350",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "352",
                "name": "set req.request = \"OPTIONS\";",
                "parent": "350",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "353",
                "name": "#Set this back for logging purposes",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "354",
                "name": "if (resp.status >= 400 && resp.status < 600) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "355",
                "name": "if (resp.status >= 400 && resp.status < 600)",
                "parent": "354",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "356",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "354",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "357",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "356",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "358",
                "name": "if (req.restarts < 1 && fastly.ff.visits_this_service == 0) [...] ",
                "parent": "356",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "359",
                "name": "if (req.restarts < 1 && fastly.ff.visits_this_service == 0)",
                "parent": "358",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "360",
                "name": "if (!req.http.x-log:geo-original-status-code || req.http.x-log:geo-original-status-code==\"\") [...] ",
                "parent": "358",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "361",
                "name": "if (!req.http.x-log:geo-original-status-code || req.http.x-log:geo-original-status-code==\"\")",
                "parent": "360",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "362",
                "name": "set req.http.x-log:geo-original-status-code = resp.status;",
                "parent": "360",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "363",
                "name": "if (!req.http.x-log:geo-original-status-msg || req.http.x-log:geo-original-status-msg==\"\") [...] ",
                "parent": "358",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "364",
                "name": "if (!req.http.x-log:geo-original-status-msg || req.http.x-log:geo-original-status-msg==\"\")",
                "parent": "363",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "365",
                "name": "set req.http.x-log:geo-original-status-msg = resp.response;",
                "parent": "363",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "366",
                "name": "restart;",
                "parent": "358",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "367",
                "name": "if ( [...] ",
                "parent": "356",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "368",
                "name": "if (",
                "parent": "367",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "369",
                "name": "if (!req.http.x-log:original-status-code || req.http.x-log:original-status-code==\"\") [...] ",
                "parent": "367",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "370",
                "name": "if (!req.http.x-log:original-status-code || req.http.x-log:original-status-code==\"\")",
                "parent": "369",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "371",
                "name": "set req.http.x-log:original-status-code = resp.status;",
                "parent": "369",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "372",
                "name": "if (!req.http.x-log:original-status-msg || req.http.x-log:original-status-msg==\"\") [...] ",
                "parent": "367",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "373",
                "name": "if (!req.http.x-log:original-status-msg || req.http.x-log:original-status-msg==\"\")",
                "parent": "372",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "374",
                "name": "set req.http.x-log:original-status-msg = resp.response;",
                "parent": "372",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "375",
                "name": "restart;",
                "parent": "367",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "376",
                "name": "/* handle 5XX (or any other unwanted status code) - this part (in vcl_deliver) is intended to deal with errors that weren't already caught in vcl_fetch - ie, this will catch origin connect timeouts etc that went through vcl_error */",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "377",
                "name": "if (resp.status == 604) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "378",
                "name": "if (resp.status == 604)",
                "parent": "377",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "379",
                "name": "set resp.status = 403;\nset resp.response = \"Forbidden\";",
                "parent": "377",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "380",
                "name": "# If we're coming here from geo enforcement, rewrite the response status to 403 (we're using 604 to avoid being caught by the retry logic above)",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "381",
                "name": "if (resp.status == 605) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "382",
                "name": "if (resp.status == 605)",
                "parent": "381",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "383",
                "name": "set resp.status = 403;\nset resp.response = \"Forbidden\";",
                "parent": "381",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "384",
                "name": "# If we're coming here from request filtering, rewrite the response status to 403 (we're using 605 to avoid being caught by the retry logic above)",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "385",
                "name": "if (resp.status == 606) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "386",
                "name": "if (resp.status == 606)",
                "parent": "385",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "387",
                "name": "set resp.status = 404;\nset resp.response = \"Not Found\";",
                "parent": "385",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "388",
                "name": "# If we're coming here from request filtering, rewrite the response status to 404 (we're using 606 to avoid being caught by the retry logic above)",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "389",
                "name": "if (resp.status == 607) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "390",
                "name": "if (resp.status == 607)",
                "parent": "389",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "391",
                "name": "set resp.status = 410;\nset resp.response = \"Gone\";",
                "parent": "389",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "392",
                "name": "# If we're coming here from request filtering, rewrite the response status to 410 (we're using 607 to avoid being caught by the retry logic above)",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "393",
                "name": "if (req.http.geo:done == \"1\") [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "394",
                "name": "if (req.http.geo:done == \"1\")",
                "parent": "393",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "395",
                "name": "if (resp.http.Fastly-Debug-Path ~ \"^\\(F ([^ ]+)[^)]*\\)(?: \\(D ([^ ]+)[^)]*\\))?(?: \\(F ([^ ]+)[^)]*\\))?\") [...] ",
                "parent": "393",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "396",
                "name": "if (resp.http.Fastly-Debug-Path ~ \"^\\(F ([^ ]+)[^)]*\\)(?: \\(D ([^ ]+)[^)]*\\))?(?: \\(F ([^ ]+)[^)]*\\))?\")",
                "parent": "395",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "397",
                "name": "set req.http.x-log:fetch-node = re.group.1;\nset req.http.x-log:shield-deliver-node = re.group.2;\nset req.http.x-log:shield-fetch-node = re.group.3;",
                "parent": "395",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "398",
                "name": "#Header to indicate cache status (hit / miss etc)\nset resp.http.X-Fastly-Cache-Status = fastly_info.state;\n#Saving this into a variable for subsequent logging, because the boilerplate fastly deliver below will clear the response header\ndeclare local var.surrogate-key STRING;\nset var.surrogate-key = resp.http.surrogate-key;",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "399",
                "name": "if (req.http.Fastly-Debug || req.http.Fastly-FF) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "400",
                "name": "if (req.http.Fastly-Debug || req.http.Fastly-FF)",
                "parent": "399",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "401",
                "name": "set resp.http.Fastly-Debug-Path = \"(D \" server.identity \" \" now.sec \") \"\nif(resp.http.Fastly-Debug-Path, resp.http.Fastly-Debug-Path, \"\");\n\nset resp.http.Fastly-Debug-TTL = if(obj.hits > 0, \"(H \", \"(M \")\nserver.identity\nif(req.http.Fastly-Tmp-Obj-TTL && req.http.Fastly-Tmp-Obj-Grace, \" \" req.http.Fastly-Tmp-Obj-TTL \" \" req.http.Fastly-Tmp-Obj-Grace \" \", \" - - \")\nif(resp.http.Age, resp.http.Age, \"-\")\n\") \"\nif(resp.http.Fastly-Debug-TTL, resp.http.Fastly-Debug-TTL, \"\");\n\nset resp.http.Fastly-Debug-Digest = digest.hash_sha256(req.digest);",
                "parent": "399",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "402",
                "name": "unset resp.http.Fastly-Debug-Path;\nunset resp.http.Fastly-Debug-TTL;\nunset resp.http.Fastly-Debug-Digest;",
                "parent": "399",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "403",
                "name": "#--FASTLY DELIVER BEGIN\n\n# record the journey of the object, expose it only if req.http.Fastly-Debug.",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "404",
                "name": "if(!resp.http.X-Served-By) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "405",
                "name": "if(!resp.http.X-Served-By)",
                "parent": "404",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "406",
                "name": "set resp.http.X-Served-By  = server.identity;",
                "parent": "404",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "407",
                "name": "set resp.http.X-Served-By = resp.http.X-Served-By \", \" server.identity;",
                "parent": "404",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "408",
                "name": "if(!resp.http.X-Cache-Hits) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "409",
                "name": "if(!resp.http.X-Cache-Hits)",
                "parent": "408",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "410",
                "name": "set resp.http.X-Cache-Hits = obj.hits;",
                "parent": "408",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "411",
                "name": "set resp.http.X-Cache-Hits = resp.http.X-Cache-Hits \", \" obj.hits;",
                "parent": "408",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "412",
                "name": "set resp.http.X-Cache = if(resp.http.X-Cache, resp.http.X-Cache \", \",\"\") if(fastly_info.state ~ \"HIT(?:-|\\z)\", \"HIT\", \"MISS\");",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "413",
                "name": "# add or append X-Served-By/X-Cache(-Hits)",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "414",
                "name": "if (req.http.X-Timer) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "415",
                "name": "if (req.http.X-Timer)",
                "parent": "414",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "416",
                "name": "set resp.http.X-Timer = req.http.X-Timer \",VE\" time.elapsed.msec;",
                "parent": "414",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "417",
                "name": "if (resp.http.Vary ~ \"^\\s*$\") [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "418",
                "name": "if (resp.http.Vary ~ \"^\\s*$\")",
                "parent": "417",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "419",
                "name": "unset resp.http.Vary;",
                "parent": "417",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "420",
                "name": "set resp.http.Vary = regsub(resp.http.Vary, \"Fastly-Vary-String, \", \"\");",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "421",
                "name": "# VARY FIXUP\n{\n# remove before sending to client",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "422",
                "name": "if (!req.http.Fastly-FF && !req.http.Fastly-Debug) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "423",
                "name": "if (!req.http.Fastly-FF && !req.http.Fastly-Debug)",
                "parent": "422",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "424",
                "name": "unset resp.http.Surrogate-Key;\nunset resp.http.Surrogate-Control;",
                "parent": "422",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "425",
                "name": "unset resp.http.X-Varnish;\n\n\n# Pop the surrogate headers into the request object so we can reference them later\nset req.http.Surrogate-Key = resp.http.Surrogate-Key;\nset req.http.Surrogate-Control = resp.http.Surrogate-Control;\n\n# If we are not forwarding or debugging unset the surrogate headers so they are not present in the response",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "426",
                "name": "if(resp.status == 550) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "427",
                "name": "if(resp.status == 550)",
                "parent": "426",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "428",
                "name": "return(deliver);",
                "parent": "426",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "429",
                "name": "if (resp.status == 900 ) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "430",
                "name": "if (resp.status == 900 )",
                "parent": "429",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "431",
                "name": "set resp.status = 403;\nset resp.response = \"Forbidden Edge 2\";",
                "parent": "429",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "432",
                "name": "#default response conditions\n\n\n# Request Condition: User Agent block list Prio: 3",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "433",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "434",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "433",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "435",
                "name": "if (req.http.fastly-debug) [...] ",
                "parent": "433",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "436",
                "name": "if (req.http.fastly-debug)",
                "parent": "435",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "437",
                "name": "set req.http.geo:fastly-debug-path = resp.http.fastly-debug-path;\nset req.http.geo:fastly-debug-ttl = resp.http.fastly-debug-ttl;\nset req.http.geo:fastly-debug-digest = resp.http.fastly-debug-digest;",
                "parent": "435",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "438",
                "name": "set req.http.X-Country = resp.http.X-Country;\nset req.http.X-BBC-Edge-Country = resp.http.X-Country;\nset req.http.X-Ip_is_uk_combined = resp.http.X-Ip_is_uk_combined;\nset req.http.X-Ip_is_eu_combined = resp.http.X-Ip_is_eu_combined;\nset req.http.X-BBC-Edge-IsUK = resp.http.X-Ip_is_uk_combined;\nset req.http.X-Ip_is_advertise_combined = resp.http.X-Ip_is_advertise_combined;\nset req.http.X-Ip_Asn = resp.http.X-Ip_Asn;\nset req.http.X-Ip_asn-name = resp.http.X-Ip_asn-name;\nset req.http.X-Ip_carrier = resp.http.X-Ip_carrier;\nset req.http.geo:done = \"1\";\nset req.http.X-BBC-Edge-Cache = \"1\";\n#Used to store the cache-status of the pre-flight, so we can add it as a response header later\nset req.http.geo:cache = resp.http.X-Cache;\nset req.http.geo:cache-status = resp.http.X-Fastly-Cache-Status;\n#If fastly-debug was set, save the debug response headers so we can add them to the final response later",
                "parent": "433",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "439",
                "name": "if (fastly.ff.visits_this_service == 0) [...] ",
                "parent": "433",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "440",
                "name": "if (fastly.ff.visits_this_service == 0)",
                "parent": "439",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "441",
                "name": "log \"syslog \" req.service_id \" geo-logs-s3 :: \" {\"\"\"} time.start.sec {\"\" \"\"} req.http.x-log:backend-name {\"\" \"\"} cstr_escape(req.http.x-log:origin-host-header) {\"\" \"\"} req.url {\"\" \"\"} resp.status {\"\" \"\"} time.start.msec {\"\" \"\"} time.elapsed.usec {\"\" \"\"} resp.http.X-Cache {\"\" \"\"} resp.http.Cache-Control {\"\" \"\"} resp.response {\"\" \"\"} client.ip {\"\" \"\"} req.http.X-Country {\"\" \"\"} req.http.X-Ip_is_uk_combined {\"\" \"\"} req.http.X-Ip_is_advertise_combined {\"\" \"\"} server.hostname {\"\" \"\"} server.datacenter {\"\" \"\"} client.as.number {\"\" \"\"} client.as.name {\"\" \"\"} req.http.X-BBC-Request-ID {\"\" \"\"} var.surrogate-key {\"\" \"\"} req.http.x-log:backend-ip {\"\" \"\"} req.http.x-log:backend-src-ip {\"\" \"\"} req.http.x-log:backend-requests {\"\" \"\"} req.http.x-log:backend-cwnd {\"\" \"\"} req.restarts {\"\" \"\"} req.http.geo:selected-backend {\"\" \"\"} req.http.geo:fastly-edge-region-group {\"\" \"\"} req.http.x-vcl-version-mismatch {\"\" \"\"} req.http.x-log:req-headers-count {\"\" \"\"} req.vcl.version {\"\" \"\"} req.http.x-log:geo-original-status-code {\"\" \"\"} req.http.x-log:geo-original-status-msg {\"\"\"};\nlog \"syslog \" req.service_id \" geo-logs-gcs :: \" {\"\"\"} time.start.sec {\"\" \"\"} req.http.x-log:backend-name {\"\" \"\"} cstr_escape(req.http.x-log:origin-host-header) {\"\" \"\"} req.url {\"\" \"\"} resp.status {\"\" \"\"} time.start.msec {\"\" \"\"} time.elapsed.usec {\"\" \"\"} resp.http.X-Cache {\"\" \"\"} resp.http.Cache-Control {\"\" \"\"} resp.response {\"\" \"\"} client.ip {\"\" \"\"} req.http.X-Country {\"\" \"\"} req.http.X-Ip_is_uk_combined {\"\" \"\"} req.http.X-Ip_is_advertise_combined {\"\" \"\"} server.hostname {\"\" \"\"} server.datacenter {\"\" \"\"} client.as.number {\"\" \"\"} client.as.name {\"\" \"\"} req.http.X-BBC-Request-ID {\"\" \"\"} var.surrogate-key {\"\" \"\"} req.http.x-log:backend-ip {\"\" \"\"} req.http.x-log:backend-src-ip {\"\" \"\"} req.http.x-log:backend-requests {\"\" \"\"} req.http.x-log:backend-cwnd {\"\" \"\"} req.restarts {\"\" \"\"} req.http.geo:selected-backend {\"\" \"\"} req.http.geo:fastly-edge-region-group {\"\" \"\"} req.http.x-vcl-version-mismatch {\"\" \"\"} req.http.x-log:req-headers-count {\"\" \"\"} req.vcl.version {\"\" \"\"} req.http.x-log:geo-original-status-code {\"\" \"\"} req.http.x-log:geo-original-status-msg {\"\"\"};",
                "parent": "439",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "442",
                "name": "//Only write the geoip log line if we're on the edge POP, to avoid getting an additional log line from the shield",
                "parent": "433",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "443",
                "name": "if (fastly.ff.visits_this_service == 0) [...] ",
                "parent": "433",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "444",
                "name": "if (fastly.ff.visits_this_service == 0)",
                "parent": "443",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "445",
                "name": "restart;",
                "parent": "443",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "446",
                "name": "//Only restart (to go back to the main page) if we're not running on a shield node",
                "parent": "433",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "447",
                "name": "#--FASTLY DELIVER END\n\n//If we're still on the geoip lookup, set various geo headers, then restart to do the main request",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "448",
                "name": "if (req.http.fastly-debug && fastly.ff.visits_this_service == 0) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "449",
                "name": "if (req.http.fastly-debug && fastly.ff.visits_this_service == 0)",
                "parent": "448",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "450",
                "name": "set resp.http.X-Fastly-Pre-Flight-Cache = req.http.geo:cache;\nset resp.http.X-Fastly-Pre-Flight-Cache-Status = req.http.geo:cache-status;\nset resp.http.X-Fastly-Pre-Flight-debug-path = req.http.geo:fastly-debug-path;\nset resp.http.X-Fastly-Pre-Flight-debug-ttl = req.http.geo:fastly-debug-ttl;\nset resp.http.X-Fastly-Pre-Flight-debug-digest = req.http.geo:fastly-debug-digest;",
                "parent": "448",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "451",
                "name": "#Diagnostic headers to add if we're at the edge\n#Unlike web delivery, we'll hide the cache status headers unless specifically asked for them, to save bandwidth - these are slightly less useful for media anyway",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "452",
                "name": "if (fastly_info.state == \"HIT-STALE\") [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "453",
                "name": "if (fastly_info.state == \"HIT-STALE\")",
                "parent": "452",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "454",
                "name": "set resp.http.Warning = \"111 Revalidation failed\";\nset resp.http.Edge-Control = \"bypass-cache\";",
                "parent": "452",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "455",
                "name": "set resp.http.X-BBC-Request-ID = req.http.X-BBC-Request-ID;\nset resp.http.Access-Control-Allow-Origin = \"*\";\nset resp.http.Access-Control-Allow-Methods = \"GET,HEAD,OPTIONS\";\nset resp.http.Access-Control-Allow-Headers = \"Origin,Range,Accept-Encoding,Referer\";\nset resp.http.Access-Control-Expose-Headers = \"Server,Range,Content-Length,Content-Range,Content-Type,Last-Modified,Date,Cache-Control,ETag,X-Served-By,X-BBC-Request-ID\";",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "456",
                "name": "if (!req.http.Fastly-FF && client.requests == 1) [...] ",
                "parent": "233",
                "compound": true,
                "type": "parent",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "457",
                "name": "if (!req.http.Fastly-FF && client.requests == 1)",
                "parent": "456",
                "compound": false,
                "type": "conditional",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "458",
                "name": "set client.socket.congestion_algorithm = \"bbr\";\n#Increase initial congestion window (the default is 10)\nset client.socket.cwnd = 30;",
                "parent": "456",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "459",
                "name": "# TCP tuning for client requests",
                "parent": "233",
                "compound": false,
                "root": "233"
            }
        },
        {
            "data": {
                "id": "460",
                "name": "return(deliver);",
                "parent": "233",
                "compound": false,
                "type": "terminal",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "461",
                "source": "236",
                "target": "237",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "462",
                "source": "241",
                "target": "242",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "463",
                "source": "241",
                "target": "243",
                "name": "false",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "464",
                "source": "239",
                "target": "241",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "465",
                "source": "237",
                "target": "239",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "466",
                "source": "236",
                "target": "239",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "467",
                "source": "245",
                "target": "246",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "468",
                "source": "247",
                "target": "245",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "469",
                "source": "239",
                "target": "247",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "470",
                "source": "249",
                "target": "250",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "471",
                "source": "251",
                "target": "249",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "472",
                "source": "245",
                "target": "251",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "473",
                "source": "255",
                "target": "256",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "474",
                "source": "258",
                "target": "259",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "475",
                "source": "260",
                "target": "258",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "476",
                "source": "255",
                "target": "260",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "477",
                "source": "262",
                "target": "263",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "478",
                "source": "264",
                "target": "262",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "479",
                "source": "258",
                "target": "264",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "480",
                "source": "262",
                "target": "265",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "481",
                "source": "253",
                "target": "255",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "482",
                "source": "266",
                "target": "253",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "483",
                "source": "249",
                "target": "266",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "484",
                "source": "270",
                "target": "271",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "485",
                "source": "273",
                "target": "274",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "486",
                "source": "275",
                "target": "273",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "487",
                "source": "270",
                "target": "275",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "488",
                "source": "277",
                "target": "278",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "489",
                "source": "279",
                "target": "277",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "490",
                "source": "273",
                "target": "279",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "491",
                "source": "281",
                "target": "282",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "492",
                "source": "283",
                "target": "281",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "493",
                "source": "277",
                "target": "283",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "494",
                "source": "285",
                "target": "286",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "495",
                "source": "287",
                "target": "285",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "496",
                "source": "281",
                "target": "287",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "497",
                "source": "289",
                "target": "290",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "498",
                "source": "291",
                "target": "289",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "499",
                "source": "285",
                "target": "291",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "500",
                "source": "293",
                "target": "294",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "501",
                "source": "295",
                "target": "293",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "502",
                "source": "289",
                "target": "295",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "503",
                "source": "297",
                "target": "298",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "504",
                "source": "299",
                "target": "297",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "505",
                "source": "293",
                "target": "299",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "506",
                "source": "301",
                "target": "302",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "507",
                "source": "303",
                "target": "301",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "508",
                "source": "297",
                "target": "303",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "509",
                "source": "305",
                "target": "306",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "510",
                "source": "307",
                "target": "305",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "511",
                "source": "301",
                "target": "307",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "512",
                "source": "309",
                "target": "310",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "513",
                "source": "311",
                "target": "309",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "514",
                "source": "305",
                "target": "311",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "515",
                "source": "313",
                "target": "314",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "516",
                "source": "315",
                "target": "313",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "517",
                "source": "309",
                "target": "315",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "518",
                "source": "317",
                "target": "318",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "519",
                "source": "319",
                "target": "317",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "520",
                "source": "313",
                "target": "319",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "521",
                "source": "321",
                "target": "322",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "522",
                "source": "323",
                "target": "321",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "523",
                "source": "317",
                "target": "323",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "524",
                "source": "325",
                "target": "326",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "525",
                "source": "327",
                "target": "325",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "526",
                "source": "321",
                "target": "327",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "527",
                "source": "329",
                "target": "330",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "528",
                "source": "331",
                "target": "329",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "529",
                "source": "325",
                "target": "331",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "530",
                "source": "333",
                "target": "334",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "531",
                "source": "335",
                "target": "333",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "532",
                "source": "330",
                "target": "335",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "533",
                "source": "329",
                "target": "335",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "534",
                "source": "337",
                "target": "338",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "535",
                "source": "339",
                "target": "337",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "536",
                "source": "333",
                "target": "339",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "537",
                "source": "341",
                "target": "342",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "538",
                "source": "343",
                "target": "341",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "539",
                "source": "337",
                "target": "343",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "540",
                "source": "345",
                "target": "346",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "541",
                "source": "347",
                "target": "345",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "542",
                "source": "341",
                "target": "347",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "543",
                "source": "345",
                "target": "348",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "544",
                "source": "268",
                "target": "270",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "545",
                "source": "349",
                "target": "268",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "546",
                "source": "265",
                "target": "349",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "547",
                "source": "253",
                "target": "349",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "548",
                "source": "351",
                "target": "352",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "549",
                "source": "353",
                "target": "351",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "550",
                "source": "348",
                "target": "353",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "551",
                "source": "268",
                "target": "353",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "552",
                "source": "361",
                "target": "362",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "553",
                "source": "364",
                "target": "365",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "554",
                "source": "362",
                "target": "364",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "555",
                "source": "361",
                "target": "364",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "556",
                "source": "365",
                "target": "366",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "557",
                "source": "364",
                "target": "366",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "558",
                "source": "359",
                "target": "361",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "559",
                "source": "357",
                "target": "359",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "560",
                "source": "370",
                "target": "371",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "561",
                "source": "373",
                "target": "374",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "562",
                "source": "371",
                "target": "373",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "563",
                "source": "370",
                "target": "373",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "564",
                "source": "374",
                "target": "375",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "565",
                "source": "373",
                "target": "375",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "566",
                "source": "368",
                "target": "370",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "567",
                "source": "357",
                "target": "368",
                "name": "false",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "568",
                "source": "355",
                "target": "357",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "569",
                "source": "376",
                "target": "355",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "570",
                "source": "352",
                "target": "376",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "571",
                "source": "351",
                "target": "376",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "572",
                "source": "378",
                "target": "379",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "573",
                "source": "380",
                "target": "378",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "574",
                "source": "359",
                "target": "380",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "575",
                "source": "368",
                "target": "380",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "576",
                "source": "355",
                "target": "380",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "577",
                "source": "382",
                "target": "383",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "578",
                "source": "384",
                "target": "382",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "579",
                "source": "379",
                "target": "384",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "580",
                "source": "378",
                "target": "384",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "581",
                "source": "386",
                "target": "387",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "582",
                "source": "388",
                "target": "386",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "583",
                "source": "383",
                "target": "388",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "584",
                "source": "382",
                "target": "388",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "585",
                "source": "390",
                "target": "391",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "586",
                "source": "392",
                "target": "390",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "587",
                "source": "387",
                "target": "392",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "588",
                "source": "386",
                "target": "392",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "589",
                "source": "396",
                "target": "397",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "590",
                "source": "394",
                "target": "396",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "591",
                "source": "398",
                "target": "394",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "592",
                "source": "391",
                "target": "398",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "593",
                "source": "390",
                "target": "398",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "594",
                "source": "400",
                "target": "401",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "595",
                "source": "400",
                "target": "402",
                "name": "false",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "596",
                "source": "403",
                "target": "400",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "597",
                "source": "397",
                "target": "403",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "598",
                "source": "396",
                "target": "403",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "599",
                "source": "394",
                "target": "403",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "600",
                "source": "405",
                "target": "406",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "601",
                "source": "405",
                "target": "407",
                "name": "false",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "602",
                "source": "409",
                "target": "410",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "603",
                "source": "409",
                "target": "411",
                "name": "false",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "604",
                "source": "412",
                "target": "409",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "605",
                "source": "406",
                "target": "412",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "606",
                "source": "407",
                "target": "412",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "607",
                "source": "413",
                "target": "405",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "608",
                "source": "401",
                "target": "413",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "609",
                "source": "402",
                "target": "413",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "610",
                "source": "415",
                "target": "416",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "611",
                "source": "410",
                "target": "415",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "612",
                "source": "411",
                "target": "415",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "613",
                "source": "418",
                "target": "419",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "614",
                "source": "420",
                "target": "418",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "615",
                "source": "421",
                "target": "420",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "616",
                "source": "416",
                "target": "421",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "617",
                "source": "415",
                "target": "421",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "618",
                "source": "423",
                "target": "424",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "619",
                "source": "425",
                "target": "423",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "620",
                "source": "419",
                "target": "425",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "621",
                "source": "418",
                "target": "425",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "622",
                "source": "427",
                "target": "428",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "623",
                "source": "424",
                "target": "427",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "624",
                "source": "423",
                "target": "427",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "625",
                "source": "430",
                "target": "431",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "626",
                "source": "432",
                "target": "430",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "627",
                "source": "427",
                "target": "432",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "628",
                "source": "436",
                "target": "437",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "629",
                "source": "438",
                "target": "436",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "630",
                "source": "440",
                "target": "441",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "631",
                "source": "442",
                "target": "440",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "632",
                "source": "437",
                "target": "442",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "633",
                "source": "436",
                "target": "442",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "634",
                "source": "444",
                "target": "445",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "635",
                "source": "446",
                "target": "444",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "636",
                "source": "441",
                "target": "446",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "637",
                "source": "440",
                "target": "446",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "638",
                "source": "434",
                "target": "438",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "639",
                "source": "447",
                "target": "434",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "640",
                "source": "431",
                "target": "447",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "641",
                "source": "430",
                "target": "447",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "642",
                "source": "449",
                "target": "450",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "643",
                "source": "451",
                "target": "449",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "644",
                "source": "444",
                "target": "451",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "645",
                "source": "434",
                "target": "451",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "646",
                "source": "453",
                "target": "454",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "647",
                "source": "455",
                "target": "453",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "648",
                "source": "450",
                "target": "455",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "649",
                "source": "449",
                "target": "455",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "650",
                "source": "457",
                "target": "458",
                "name": "true",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "651",
                "source": "459",
                "target": "457",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "652",
                "source": "454",
                "target": "459",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "653",
                "source": "453",
                "target": "459",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "654",
                "source": "458",
                "target": "460",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "655",
                "source": "457",
                "target": "460",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "656",
                "source": "234",
                "target": "236",
                "type": "edge",
                "root": "233"
            }
        },
        {
            "data": {
                "id": "658",
                "name": "sub vcl_error",
                "parent": "657",
                "compound": false,
                "type": "start",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "657",
                "name": "sub vcl_error",
                "compound": true,
                "type": "sub",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "659",
                "name": "if (obj.status == 801) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "660",
                "name": "if (obj.status == 801)",
                "parent": "659",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "661",
                "name": "set obj.status = 301;\nset obj.response = \"Moved Permanently\";\nset obj.http.Location = \"https://\" req.http.host req.url;\nsynthetic {\"\"};\nreturn (deliver);",
                "parent": "659",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "662",
                "name": "if (obj.status == 900 ) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "663",
                "name": "if (obj.status == 900 )",
                "parent": "662",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "664",
                "name": "return(deliver);",
                "parent": "662",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "665",
                "name": "# Response Condition: User Agent block list Prio: 3",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "666",
                "name": "if (req.http.Fastly-Restart-On-Error) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "667",
                "name": "if (req.http.Fastly-Restart-On-Error)",
                "parent": "666",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "668",
                "name": "if (obj.status == 503 && req.restarts == 0) [...] ",
                "parent": "666",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "669",
                "name": "if (obj.status == 503 && req.restarts == 0)",
                "parent": "668",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "670",
                "name": "restart;",
                "parent": "668",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "671",
                "name": "if (obj.status == 550) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "672",
                "name": "if (obj.status == 550)",
                "parent": "671",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "673",
                "name": "return(deliver);",
                "parent": "671",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "674",
                "name": "if(obj.status == 621) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "675",
                "name": "if(obj.status == 621)",
                "parent": "674",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "676",
                "name": "return(deliver);",
                "parent": "674",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "677",
                "name": "#--FASTLY ERROR END\n\n\n\n//This status code is used to signal a VCL version mismatch between edge and fetch nodes",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "678",
                "name": "if(obj.status == 604) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "679",
                "name": "if(obj.status == 604)",
                "parent": "678",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "680",
                "name": "return(deliver);",
                "parent": "678",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "681",
                "name": "//This status code is used for geo enforcement. Go straight to deliver, where it'll be rewritten to 403.",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "682",
                "name": "if(obj.status == 605) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "683",
                "name": "if(obj.status == 605)",
                "parent": "682",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "684",
                "name": "return(deliver);",
                "parent": "682",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "685",
                "name": "//This status code is used for request filtering. Go straight to deliver, where it'll be rewritten to 403.",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "686",
                "name": "if (obj.status == 601) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "687",
                "name": "if (obj.status == 601)",
                "parent": "686",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "688",
                "name": "if (req.http.geo:primary-region-health != \"1\" || req.http.geo:primary-region-shield-health == \"0\") [...] ",
                "parent": "686",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "689",
                "name": "if (req.http.geo:primary-region-health != \"1\" || req.http.geo:primary-region-shield-health == \"0\")",
                "parent": "688",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "690",
                "name": "set obj.status = 601;",
                "parent": "688",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "691",
                "name": "set obj.status = 200;\nset obj.response = \"OK\";",
                "parent": "688",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "692",
                "name": "set obj.http.Content-Type = \"text/plain\";\nset obj.http.cache-control = \"no-cache, no-store, max-age=0, must-revalidate\";\nset obj.http.x-fastly-bbc-geo-primary-region = req.http.geo:primary-region \", health-status=\" req.http.geo:primary-region-health;\nset obj.http.x-fastly-bbc-geo-primary-region-shield = req.http.geo:primary-region-shield \", health-status=\" req.http.geo:primary-region-shield-health;\nset obj.http.x-fastly-bbc-geo-secondary-region = req.http.geo:secondary-region \", health-status=\" req.http.geo:secondary-region-health;\nset obj.http.x-fastly-bbc-geo-secondary-region-shield = req.http.geo:secondary-region-shield \", health-status=\" req.http.geo:secondary-region-shield-health;\nset obj.http.x-robots-tag = \"noindex\";\nsynthetic {\"Primary GeoIP region: \"} req.http.geo:primary-region {\", health status: \"} req.http.geo:primary-region-health {\"\nPrimary GeoIP region shield, if any: \"} req.http.geo:primary-region-shield {\", health status: \"} req.http.geo:primary-region-shield-health {\"\nSecondary GeoIP region: \"} req.http.geo:secondary-region {\", health status: \"} req.http.geo:secondary-region-health {\"\nSecondary GeoIP region shield, if any: \"} req.http.geo:secondary-region-shield {\", health status: \"} req.http.geo:secondary-region-shield-health {\"\n\"};\nreturn(deliver);",
                "parent": "686",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "693",
                "name": "//This status code indicates that we want to generate a synthetic response showing the status of the primary and secondary GeoIP backends",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "694",
                "name": "if (obj.status == 603) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "695",
                "name": "if (obj.status == 603)",
                "parent": "694",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "696",
                "name": "if (req.http.media:primary-backend-health != \"1\" || req.http.media:primary-backend-shield-health == \"0\") [...] ",
                "parent": "694",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "697",
                "name": "if (req.http.media:primary-backend-health != \"1\" || req.http.media:primary-backend-shield-health == \"0\")",
                "parent": "696",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "698",
                "name": "set obj.status = 603;",
                "parent": "696",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "699",
                "name": "set obj.status = 200;\nset obj.response = \"OK\";",
                "parent": "696",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "700",
                "name": "set obj.http.Content-Type = \"text/plain\";\nset obj.http.cache-control = \"no-cache, no-store, max-age=0, must-revalidate\";\nset obj.http.x-fastly-bbc-media-primary-backend = req.http.media:primary-backend \", health-status=\" req.http.media:primary-backend-health;\nset obj.http.x-fastly-bbc-media-primary-backend-shield = req.http.media:primary-backend-shield \", health-status=\" req.http.media:primary-backend-shield-health;\nset obj.http.x-fastly-bbc-media-secondary-backend = req.http.media:secondary-backend \", health-status=\" req.http.media:secondary-backend-health;\nset obj.http.x-fastly-bbc-media-secondary-backend-shield = req.http.media:secondary-backend-shield \", health-status=\" req.http.media:secondary-backend-shield-health;\nset obj.http.x-robots-tag = \"noindex\";\nsynthetic {\"Primary media backend: \"} req.http.media:primary-backend {\", health status: \"} req.http.media:primary-backend-health {\"\nPrimary media backend shield, if any: \"} req.http.media:primary-backend-shield {\", health status: \"} req.http.media:primary-backend-shield-health {\"\nSecondary media backend: \"} req.http.media:secondary-backend {\", health status: \"} req.http.media:secondary-backend-health {\"\nSecondary media backend shield, if any: \"} req.http.media:secondary-backend-shield {\", health status: \"} req.http.media:secondary-backend-shield-health {\"\n\"};\nreturn(deliver);",
                "parent": "694",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "701",
                "name": "//This status code indicates that we want to generate a synthetic response showing the status of the primary and secondary media backends",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "702",
                "name": "if (obj.status == 602) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "703",
                "name": "if (obj.status == 602)",
                "parent": "702",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "704",
                "name": "set obj.status = 200;\nset obj.response = \"OK\";\nsynthetic client.ip;\n\nreturn(deliver);",
                "parent": "702",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "705",
                "name": "if (obj.status >= 500 && obj.status < 600) [...] ",
                "parent": "657",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "706",
                "name": "if (obj.status >= 500 && obj.status < 600)",
                "parent": "705",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "707",
                "name": "if (stale.exists) [...] ",
                "parent": "705",
                "compound": true,
                "type": "parent",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "708",
                "name": "if (stale.exists)",
                "parent": "707",
                "compound": false,
                "type": "conditional",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "709",
                "name": "return(deliver_stale);",
                "parent": "707",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "710",
                "name": "/* otherwise, return a synthetic */\n\n/* optional, rewrite status code */\n/* set obj.status = 200; */\n/* set obj.response = \"OK\"; */\n\n/* include your HTML response here */\nset obj.http.Content-Type  = \"text/plain\";\n#set obj.http.Cache-Control = \"private, max-age=0\";\nsynthetic {\"Error - 503\"};\nreturn(deliver);",
                "parent": "705",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "711",
                "name": "/* handle 503s */",
                "parent": "657",
                "compound": false,
                "root": "657"
            }
        },
        {
            "data": {
                "id": "712",
                "name": "end",
                "parent": "657",
                "compound": false,
                "type": "terminal",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "713",
                "source": "660",
                "target": "661",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "714",
                "source": "663",
                "target": "664",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "715",
                "source": "665",
                "target": "663",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "716",
                "source": "660",
                "target": "665",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "717",
                "source": "669",
                "target": "670",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "718",
                "source": "667",
                "target": "669",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "719",
                "source": "663",
                "target": "667",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "720",
                "source": "672",
                "target": "673",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "721",
                "source": "669",
                "target": "672",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "722",
                "source": "667",
                "target": "672",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "723",
                "source": "675",
                "target": "676",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "724",
                "source": "677",
                "target": "675",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "725",
                "source": "672",
                "target": "677",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "726",
                "source": "679",
                "target": "680",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "727",
                "source": "681",
                "target": "679",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "728",
                "source": "675",
                "target": "681",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "729",
                "source": "683",
                "target": "684",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "730",
                "source": "685",
                "target": "683",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "731",
                "source": "679",
                "target": "685",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "732",
                "source": "689",
                "target": "690",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "733",
                "source": "689",
                "target": "691",
                "name": "false",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "734",
                "source": "690",
                "target": "692",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "735",
                "source": "691",
                "target": "692",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "736",
                "source": "687",
                "target": "689",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "737",
                "source": "693",
                "target": "687",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "738",
                "source": "683",
                "target": "693",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "739",
                "source": "697",
                "target": "698",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "740",
                "source": "697",
                "target": "699",
                "name": "false",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "741",
                "source": "698",
                "target": "700",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "742",
                "source": "699",
                "target": "700",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "743",
                "source": "695",
                "target": "697",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "744",
                "source": "701",
                "target": "695",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "745",
                "source": "687",
                "target": "701",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "746",
                "source": "703",
                "target": "704",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "747",
                "source": "695",
                "target": "703",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "748",
                "source": "708",
                "target": "709",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "749",
                "source": "708",
                "target": "710",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "750",
                "source": "706",
                "target": "708",
                "name": "true",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "751",
                "source": "711",
                "target": "706",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "752",
                "source": "703",
                "target": "711",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "753",
                "source": "658",
                "target": "660",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "754",
                "source": "706",
                "target": "712",
                "type": "edge",
                "root": "657"
            }
        },
        {
            "data": {
                "id": "756",
                "name": "sub vcl_fetch",
                "parent": "755",
                "compound": false,
                "type": "start",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "755",
                "name": "sub vcl_fetch",
                "compound": true,
                "type": "sub",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "757",
                "name": "if (req.backend.is_origin) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "758",
                "name": "if (req.backend.is_origin)",
                "parent": "757",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "759",
                "name": "set beresp.http.x-log:backend-ip = beresp.backend.ip;\nset beresp.http.x-log:backend-src-ip = beresp.backend.src_ip;\nset beresp.http.x-log:backend-requests = beresp.backend.requests;\nset beresp.http.x-log:backend-cwnd = backend.socket.cwnd;\nset beresp.http.x-log:backend-vary = beresp.http.vary;\nset beresp.http.x-log:backend-cache-control = beresp.http.cache-control;\nset beresp.http.x-log:backend-status-msg = beresp.response;\nset beresp.http.x-log:backend-status-code = beresp.status;\nset beresp.http.x-log:origin-host-header = bereq.http.host;\nset beresp.http.x-log:backend-name = req.backend;\nset beresp.http.geo:selected-backend = req.http.geo:selected-backend;\nset beresp.http.media:selected-backend = req.http.media:selected-backend;\nset beresp.http.x-log:req-headers-count = req.http.x-log:req-headers-count;",
                "parent": "757",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "760",
                "name": "if (beresp.http.geo:selected-backend == \"secondary\" || req.http.geo:selected-backend == \"secondary\") [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "761",
                "name": "if (beresp.http.geo:selected-backend == \"secondary\" || req.http.geo:selected-backend == \"secondary\")",
                "parent": "760",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "762",
                "name": "set beresp.http.geo:selected-backend = \"secondary\";",
                "parent": "760",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "763",
                "name": "set beresp.http.geo:selected-backend = \"primary\";",
                "parent": "760",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "764",
                "name": "#The \"geo:selected-backend\" header is a bit more complicated, as we have to consider which the edge POP selected and which the shield POP selected. If either used the secondary, we'll log \"secondary\"  (which could be pri-sec, sec-pri or sec-sec), otherwise we'll log \"primary\"",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "765",
                "name": "if (beresp.http.media:selected-backend == \"secondary\" || req.http.media:selected-backend == \"secondary\") [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "766",
                "name": "if (beresp.http.media:selected-backend == \"secondary\" || req.http.media:selected-backend == \"secondary\")",
                "parent": "765",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "767",
                "name": "set beresp.http.media:selected-backend = \"secondary\";",
                "parent": "765",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "768",
                "name": "set beresp.http.media:selected-backend = \"primary\";",
                "parent": "765",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "769",
                "name": "#Same goes for the \"media:selected-backend\" header",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "770",
                "name": "if (!beresp.http.req-svc-chain) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "771",
                "name": "if (!beresp.http.req-svc-chain)",
                "parent": "770",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "772",
                "name": "set beresp.http.req-svc-chain = bereq.http.req-svc-chain;",
                "parent": "770",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "773",
                "name": "if (beresp.status >= 500 && beresp.status < 600) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "774",
                "name": "if (beresp.status >= 500 && beresp.status < 600)",
                "parent": "773",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "775",
                "name": "if (stale.exists) [...] ",
                "parent": "773",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "776",
                "name": "if (stale.exists)",
                "parent": "775",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "777",
                "name": "return(deliver_stale);",
                "parent": "775",
                "compound": false,
                "type": "terminal",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "778",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "773",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "779",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "778",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "780",
                "name": "if (req.restarts < 1 && fastly.ff.visits_this_service == 0) [...] ",
                "parent": "778",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "781",
                "name": "if (req.restarts < 1 && fastly.ff.visits_this_service == 0)",
                "parent": "780",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "782",
                "name": "",
                "parent": "780",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "783",
                "name": "//Restart logic a failed geoip request - we allow 1 retry for a failed geoip request. If the second fails, we don't restart here, we wait for the restart in vcl_deliver (after logging etc).",
                "parent": "773",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "784",
                "name": "/* handle 5XX (or any other unwanted status code) - this part (in vcl_fetch) will only be run when the error was returned from the orign, not, eg, when we failed to connect to the origin */",
                "parent": "755",
                "compound": false,
                "type": "terminal",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "785",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "786",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "785",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "787",
                "name": "if (beresp.http.Surrogate-Key) [...] ",
                "parent": "785",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "788",
                "name": "if (beresp.http.Surrogate-Key)",
                "parent": "787",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "789",
                "name": "if (!beresp.http.Surrogate-Key ~ \"\\bgeoip-all\\b\") [...] ",
                "parent": "787",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "790",
                "name": "if (!beresp.http.Surrogate-Key ~ \"\\bgeoip-all\\b\")",
                "parent": "789",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "791",
                "name": "set beresp.http.Surrogate-Key = beresp.http.Surrogate-Key \" geoip-all\";",
                "parent": "789",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "792",
                "name": "if (!beresp.http.Surrogate-Key ~ \"\\bgeoip-ip-\") [...] ",
                "parent": "787",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "793",
                "name": "if (!beresp.http.Surrogate-Key ~ \"\\bgeoip-ip-\")",
                "parent": "792",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "794",
                "name": "set beresp.http.Surrogate-Key = beresp.http.Surrogate-Key \" geoip-ip-\" req.http.X-BBC-Edge-Client-IP;",
                "parent": "792",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "795",
                "name": "//We can't have anything dynamic in a regex string, so this has to be a partial-match :-(",
                "parent": "787",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "796",
                "name": "if (!beresp.http.Surrogate-Key ~ \"\\bgeoip-country-\") [...] ",
                "parent": "787",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "797",
                "name": "if (!beresp.http.Surrogate-Key ~ \"\\bgeoip-country-\")",
                "parent": "796",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "798",
                "name": "set beresp.http.Surrogate-Key = beresp.http.Surrogate-Key \" geoip-country-\" beresp.http.X-Country;",
                "parent": "796",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "799",
                "name": "//We can't have anything dynamic in a regex string, so this has to be a partial-match :-(",
                "parent": "787",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "800",
                "name": "set beresp.http.Surrogate-Key = \"geoip-all geoip-ip-\" req.http.X-BBC-Edge-Client-IP \" geoip-country-\" beresp.http.X-Country;",
                "parent": "787",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "801",
                "name": "set beresp.http.Surrogate-Key = \"media-all \" + req.http.host + req.url + \" \" + req.http.host + \" \" + req.url;",
                "parent": "785",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "802",
                "name": "//No longer doing restarts in vcl_fetch (but in vcl_deliver instead). This is to allow errors to be \"cached\" per backend, to facilitate fast failover to the secondary without causing serial de-queuing.\n\n// Set GeoIP surrogate-key (has to be done here to ensure it gets stored in the cache)",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "803",
                "name": "if(beresp.status == 200 || beresp.status == 206) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "804",
                "name": "if(beresp.status == 200 || beresp.status == 206)",
                "parent": "803",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "805",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "803",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "806",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "805",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "807",
                "name": "set beresp.stale_while_revalidate = 3600s;\nset beresp.stale_if_error = 3600s;",
                "parent": "805",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "808",
                "name": "set beresp.stale_while_revalidate = 0s;\nset beresp.stale_if_error = 0s;",
                "parent": "805",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "809",
                "name": "set beresp.stale_while_revalidate = 0s;\nset beresp.stale_if_error = 0s;",
                "parent": "803",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "810",
                "name": "/* set stale_if_error and stale_while_revalidate (customize these values) */\n// Stale is OK for 200s and 206s from the geoip backend",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "811",
                "name": "if (req.http.Fastly-Vary-String) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "812",
                "name": "if (req.http.Fastly-Vary-String)",
                "parent": "811",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "813",
                "name": "if (beresp.http.Vary) [...] ",
                "parent": "811",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "814",
                "name": "if (beresp.http.Vary)",
                "parent": "813",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "815",
                "name": "set beresp.http.Vary = \"Fastly-Vary-String, \"  beresp.http.Vary;",
                "parent": "813",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "816",
                "name": "set beresp.http.Vary = \"Fastly-Vary-String, \";",
                "parent": "813",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "817",
                "name": "#--FASTLY FETCH BEGIN\n\n\n\n# record which cache ran vcl_fetch for this object and when\nset beresp.http.Fastly-Debug-Path = \"(F \" server.identity \" \" now.sec \") \" if(beresp.http.Fastly-Debug-Path, beresp.http.Fastly-Debug-Path, \"\");\n\n# generic mechanism to vary on something",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "818",
                "name": "if ((beresp.status == 200 || beresp.status == 404) && (beresp.http.content-type ~ \"^(?:application/f4m|application/dash\\+xml|application/javascript|application/json|application/vnd\\.apple\\.mpegurl|application/vnd\\.ms-fontobject|application/x-font-opentype|application/x-font-truetype|application/x-font-ttf|application/x-javascript|application/x-mpegurl|application/xml|font/eot|font/opentype|font/otf|image/svg\\+xml|image/vnd\\.microsoft\\.icon|text/css|text/html|text/javascript|text/plain|text/xml)\\s*(?:$|;)\" || req.url ~ \"\\.(?:css|eot|html|ico|js|json|otf|ttf|txt|m3u8|m3u|mpd)(?:$|\\?)\" ) ) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "819",
                "name": "if ((beresp.status == 200 || beresp.status == 404) && (beresp.http.content-type ~ \"^(?:application/f4m|application/dash\\+xml|application/javascript|application/json|application/vnd\\.apple\\.mpegurl|application/vnd\\.ms-fontobject|application/x-font-opentype|application/x-font-truetype|application/x-font-ttf|application/x-javascript|application/x-mpegurl|application/xml|font/eot|font/opentype|font/otf|image/svg\\+xml|image/vnd\\.microsoft\\.icon|text/css|text/html|text/javascript|text/plain|text/xml)\\s*(?:$|;)\" || req.url ~ \"\\.(?:css|eot|html|ico|js|json|otf|ttf|txt|m3u8|m3u|mpd)(?:$|\\?)\" ) )",
                "parent": "818",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "820",
                "name": "if (!beresp.http.Vary ~ \"Accept-Encoding\") [...] ",
                "parent": "818",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "821",
                "name": "if (!beresp.http.Vary ~ \"Accept-Encoding\")",
                "parent": "820",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "822",
                "name": "if (beresp.http.Vary) [...] ",
                "parent": "820",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "823",
                "name": "if (beresp.http.Vary)",
                "parent": "822",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "824",
                "name": "set beresp.http.Vary = beresp.http.Vary \", Accept-Encoding\";",
                "parent": "822",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "825",
                "name": "set beresp.http.Vary = \"Accept-Encoding\";",
                "parent": "822",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "826",
                "name": "if (req.http.Accept-Encoding == \"gzip\") [...] ",
                "parent": "818",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "827",
                "name": "if (req.http.Accept-Encoding == \"gzip\")",
                "parent": "826",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "828",
                "name": "set beresp.gzip = true;",
                "parent": "826",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "829",
                "name": "# priority: 0\n\n\n\n\n# Gzip auto gzip",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "830",
                "name": "if(req.restarts > 0 ) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "831",
                "name": "if(req.restarts > 0 )",
                "parent": "830",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "832",
                "name": "set beresp.http.Fastly-Restarts = req.restarts;",
                "parent": "830",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "833",
                "name": "#--FASTLY FETCH END",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "834",
                "name": "if (req.http.X-Fastly-Cache-Reason) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "835",
                "name": "if (req.http.X-Fastly-Cache-Reason)",
                "parent": "834",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "836",
                "name": "set beresp.http.X-Fastly-Cache-Reason = req.http.X-Fastly-Cache-Reason;",
                "parent": "834",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "837",
                "name": "/* Add any status passed through from vcl_recv */",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "838",
                "name": "if (req.http.geo:done == \"1\") [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "839",
                "name": "if (req.http.geo:done == \"1\")",
                "parent": "838",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "840",
                "name": "if (beresp.status >= 100 && beresp.status < 600) [...] ",
                "parent": "838",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "841",
                "name": "if (beresp.status >= 100 && beresp.status < 600)",
                "parent": "840",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "842",
                "name": "set beresp.cacheable = true;",
                "parent": "840",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "843",
                "name": "set beresp.cacheable = false;",
                "parent": "840",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "844",
                "name": "#We start by marking _all_ valid status codes as \"cacheable\" in the general sense (even if that's for 0 seconds).\n#IMPORTANT: Anything not marked as cacheable here will result in serial request de-queuing\n#IMPORTANT: Anything that _is_ marked as cacheable here but subsequently results in \"pass\" being called will result in a hit-for-pass marker being added with a minimum TTL of 120s, which will result in _all_ requests being passed to the origin for the duration of the TTL\n#Only do this for media requests - we don't want any non-standard caching for the geoip requests",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "845",
                "name": "if (!beresp.cacheable) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "846",
                "name": "if (!beresp.cacheable)",
                "parent": "845",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "847",
                "name": "set beresp.http.X-Fastly-Cache-Reason = \"STATUS\";\nset beresp.ttl = 0s;\nreturn (pass);",
                "parent": "845",
                "compound": false,
                "type": "terminal",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "848",
                "name": "if (beresp.http.Surrogate-Control) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "849",
                "name": "if (beresp.http.Surrogate-Control)",
                "parent": "848",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "850",
                "name": "if (beresp.http.Surrogate-Control ~ \"no-cache|private|no-store|max-age=0|s-maxage=0\") [...] ",
                "parent": "848",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "851",
                "name": "if (beresp.http.Surrogate-Control ~ \"no-cache|private|no-store|max-age=0|s-maxage=0\")",
                "parent": "850",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "852",
                "name": "if (beresp.status >= 200 && beresp.status < 400) [...] ",
                "parent": "850",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "853",
                "name": "if (beresp.status >= 200 && beresp.status < 400)",
                "parent": "852",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "854",
                "name": "set beresp.http.X-Fastly-Cache-Reason = \"SURROGATE\";\n#120s is the minimum time we can \"cache\" a hit-for-pass marker for\nset beresp.ttl = 120s;\nreturn (pass);",
                "parent": "852",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "855",
                "name": "set beresp.ttl = 0s;",
                "parent": "852",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "856",
                "name": "else if (beresp.http.Cache-Control ~ \"no-cache|private|no-store|max-age=0|s-maxage=0\") [...] ",
                "parent": "848",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "857",
                "name": "else if (beresp.http.Cache-Control ~ \"no-cache|private|no-store|max-age=0|s-maxage=0\")",
                "parent": "856",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "858",
                "name": "if (beresp.status >= 200 && beresp.status < 400) [...] ",
                "parent": "856",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "859",
                "name": "if (beresp.status >= 200 && beresp.status < 400)",
                "parent": "858",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "860",
                "name": "set beresp.http.X-Fastly-Cache-Reason = \"CACHE-CONTROL\";\n#120s is the minimum time we can \"cache\" a hit-for-pass marker for\nset beresp.ttl = 120s;\nreturn (pass);",
                "parent": "858",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "861",
                "name": "set beresp.ttl = 0s;",
                "parent": "858",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "862",
                "name": "if (!beresp.http.Expires && ((!beresp.http.Cache-Control && !beresp.http.Surrogate-Control) || (beresp.http.Cache-Control !~ \"\\b(s-maxage|max-age)=[0-9]+\\b\" && beresp.http.Surrogate-Control !~ \"\\bmax-age=[0-9]+\\b\"))) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "863",
                "name": "if (!beresp.http.Expires && ((!beresp.http.Cache-Control && !beresp.http.Surrogate-Control) || (beresp.http.Cache-Control !~ \"\\b(s-maxage|max-age)=[0-9]+\\b\" && beresp.http.Surrogate-Control !~ \"\\bmax-age=[0-9]+\\b\")))",
                "parent": "862",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "864",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "862",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "865",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "864",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "866",
                "name": "if (beresp.status == 200 || beresp.status == 206) [...] ",
                "parent": "864",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "867",
                "name": "if (beresp.status == 200 || beresp.status == 206)",
                "parent": "866",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "868",
                "name": "set beresp.ttl = 3600s;",
                "parent": "866",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "869",
                "name": "set beresp.ttl = 1s;",
                "parent": "866",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "870",
                "name": "if(beresp.status == 200 || beresp.status == 206) [...] ",
                "parent": "864",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "871",
                "name": "if(beresp.status == 200 || beresp.status == 206)",
                "parent": "870",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "872",
                "name": "if (req.http.media:file_type == \"manifest\") [...] ",
                "parent": "870",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "873",
                "name": "if (req.http.media:file_type == \"manifest\")",
                "parent": "872",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "874",
                "name": "set beresp.ttl = 2s;",
                "parent": "872",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "875",
                "name": "set beresp.ttl = 7200s;",
                "parent": "872",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "876",
                "name": "elseif(beresp.status >= 200 && beresp.status < 500) [...] ",
                "parent": "870",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "877",
                "name": "elseif(beresp.status >= 200 && beresp.status < 500)",
                "parent": "876",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "878",
                "name": "if (req.http.media:selected-backend == \"primary\") [...] ",
                "parent": "876",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "879",
                "name": "if (req.http.media:selected-backend == \"primary\")",
                "parent": "878",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "880",
                "name": "set beresp.stale_while_revalidate = 1s;",
                "parent": "878",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "881",
                "name": "set beresp.ttl = 1s;\n#Try to avoid latency by serving stale for an extra second while we're retrying the primary (as will happen if an edge POP has to do a failover)",
                "parent": "876",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "882",
                "name": "if (req.http.media:selected-backend == \"primary\") [...] ",
                "parent": "876",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "883",
                "name": "if (req.http.media:selected-backend == \"primary\")",
                "parent": "882",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "884",
                "name": "set beresp.stale_while_revalidate = 1s;",
                "parent": "882",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "885",
                "name": "set beresp.ttl = 0s;\n#Try to avoid latency by serving stale for an extra second while we're retrying the primary (as will happen if an edge POP has to do a failover)",
                "parent": "876",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "886",
                "name": "// No backend cache-control, surrogate-control or expires, or one or more of cache-control / surrogate-control exist but neither of them contain a valid max-age\n// NOTE that below will only apply to \"cacheable\" responses (including hit-for-pass), as any non-cacheable responses will have resulted in return(pass) being called above.",
                "parent": "755",
                "compound": false,
                "type": "terminal",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "887",
                "name": "if (req.http.media:file_type == \"segment\" && req.backend.is_origin) [...] ",
                "parent": "755",
                "compound": true,
                "type": "parent",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "888",
                "name": "if (req.http.media:file_type == \"segment\" && req.backend.is_origin)",
                "parent": "887",
                "compound": false,
                "type": "conditional",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "889",
                "name": "set beresp.do_stream = true;",
                "parent": "887",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "890",
                "name": "#Streaming miss for segments (https://docs.fastly.com/en/guides/streaming-miss)\n#Only do this for the main origin, not for for requests to shields. This is to allow the edge POP first byte timeout to expire if the response is slow / stalls, triggering a failing over and improving the chances of getting a faster response.",
                "parent": "755",
                "compound": false,
                "root": "755"
            }
        },
        {
            "data": {
                "id": "891",
                "name": "return(deliver);",
                "parent": "755",
                "compound": false,
                "type": "terminal",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "892",
                "source": "758",
                "target": "759",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "893",
                "source": "761",
                "target": "762",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "894",
                "source": "761",
                "target": "763",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "895",
                "source": "764",
                "target": "761",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "896",
                "source": "759",
                "target": "764",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "897",
                "source": "758",
                "target": "764",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "898",
                "source": "766",
                "target": "767",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "899",
                "source": "766",
                "target": "768",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "900",
                "source": "769",
                "target": "766",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "901",
                "source": "762",
                "target": "769",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "902",
                "source": "763",
                "target": "769",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "903",
                "source": "771",
                "target": "772",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "904",
                "source": "767",
                "target": "771",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "905",
                "source": "768",
                "target": "771",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "906",
                "source": "776",
                "target": "777",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "907",
                "source": "781",
                "target": "782",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "908",
                "source": "779",
                "target": "781",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "909",
                "source": "783",
                "target": "779",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "910",
                "source": "776",
                "target": "783",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "911",
                "source": "774",
                "target": "776",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "912",
                "source": "772",
                "target": "784",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "913",
                "source": "771",
                "target": "784",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "914",
                "source": "790",
                "target": "791",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "915",
                "source": "793",
                "target": "794",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "916",
                "source": "795",
                "target": "793",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "917",
                "source": "791",
                "target": "795",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "918",
                "source": "790",
                "target": "795",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "919",
                "source": "797",
                "target": "798",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "920",
                "source": "799",
                "target": "797",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "921",
                "source": "794",
                "target": "799",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "922",
                "source": "793",
                "target": "799",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "923",
                "source": "788",
                "target": "790",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "924",
                "source": "788",
                "target": "800",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "925",
                "source": "786",
                "target": "788",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "926",
                "source": "786",
                "target": "801",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "927",
                "source": "802",
                "target": "786",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "928",
                "source": "781",
                "target": "802",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "929",
                "source": "779",
                "target": "802",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "930",
                "source": "774",
                "target": "802",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "931",
                "source": "806",
                "target": "807",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "932",
                "source": "806",
                "target": "808",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "933",
                "source": "804",
                "target": "806",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "934",
                "source": "804",
                "target": "809",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "935",
                "source": "810",
                "target": "804",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "936",
                "source": "798",
                "target": "810",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "937",
                "source": "797",
                "target": "810",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "938",
                "source": "800",
                "target": "810",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "939",
                "source": "801",
                "target": "810",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "940",
                "source": "814",
                "target": "815",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "941",
                "source": "814",
                "target": "816",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "942",
                "source": "812",
                "target": "814",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "943",
                "source": "817",
                "target": "812",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "944",
                "source": "807",
                "target": "817",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "945",
                "source": "808",
                "target": "817",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "946",
                "source": "809",
                "target": "817",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "947",
                "source": "823",
                "target": "824",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "948",
                "source": "823",
                "target": "825",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "949",
                "source": "821",
                "target": "823",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "950",
                "source": "827",
                "target": "828",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "951",
                "source": "824",
                "target": "827",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "952",
                "source": "825",
                "target": "827",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "953",
                "source": "821",
                "target": "827",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "954",
                "source": "819",
                "target": "821",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "955",
                "source": "829",
                "target": "819",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "956",
                "source": "815",
                "target": "829",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "957",
                "source": "816",
                "target": "829",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "958",
                "source": "812",
                "target": "829",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "959",
                "source": "831",
                "target": "832",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "960",
                "source": "833",
                "target": "831",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "961",
                "source": "828",
                "target": "833",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "962",
                "source": "827",
                "target": "833",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "963",
                "source": "819",
                "target": "833",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "964",
                "source": "835",
                "target": "836",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "965",
                "source": "837",
                "target": "835",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "966",
                "source": "832",
                "target": "837",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "967",
                "source": "831",
                "target": "837",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "968",
                "source": "841",
                "target": "842",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "969",
                "source": "841",
                "target": "843",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "970",
                "source": "839",
                "target": "841",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "971",
                "source": "844",
                "target": "839",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "972",
                "source": "836",
                "target": "844",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "973",
                "source": "835",
                "target": "844",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "974",
                "source": "846",
                "target": "847",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "975",
                "source": "842",
                "target": "846",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "976",
                "source": "843",
                "target": "846",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "977",
                "source": "839",
                "target": "846",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "978",
                "source": "853",
                "target": "854",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "979",
                "source": "853",
                "target": "855",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "980",
                "source": "851",
                "target": "853",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "981",
                "source": "849",
                "target": "851",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "982",
                "source": "859",
                "target": "860",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "983",
                "source": "859",
                "target": "861",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "984",
                "source": "857",
                "target": "859",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "985",
                "source": "849",
                "target": "857",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "986",
                "source": "846",
                "target": "849",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "987",
                "source": "867",
                "target": "868",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "988",
                "source": "867",
                "target": "869",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "989",
                "source": "865",
                "target": "867",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "990",
                "source": "873",
                "target": "874",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "991",
                "source": "873",
                "target": "875",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "992",
                "source": "871",
                "target": "873",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "993",
                "source": "879",
                "target": "880",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "994",
                "source": "881",
                "target": "879",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "995",
                "source": "877",
                "target": "881",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "996",
                "source": "883",
                "target": "884",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "997",
                "source": "885",
                "target": "883",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "998",
                "source": "877",
                "target": "885",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "999",
                "source": "871",
                "target": "877",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1000",
                "source": "865",
                "target": "871",
                "name": "false",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1001",
                "source": "863",
                "target": "865",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1002",
                "source": "854",
                "target": "886",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1003",
                "source": "855",
                "target": "886",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1004",
                "source": "851",
                "target": "886",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1005",
                "source": "860",
                "target": "886",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1006",
                "source": "861",
                "target": "886",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1007",
                "source": "857",
                "target": "886",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1008",
                "source": "888",
                "target": "889",
                "name": "true",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1009",
                "source": "890",
                "target": "888",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1010",
                "source": "868",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1011",
                "source": "869",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1012",
                "source": "874",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1013",
                "source": "875",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1014",
                "source": "880",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1015",
                "source": "879",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1016",
                "source": "884",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1017",
                "source": "883",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1018",
                "source": "863",
                "target": "890",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1019",
                "source": "889",
                "target": "891",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1020",
                "source": "888",
                "target": "891",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1021",
                "source": "756",
                "target": "758",
                "type": "edge",
                "root": "755"
            }
        },
        {
            "data": {
                "id": "1023",
                "name": "sub vcl_hash",
                "parent": "1022",
                "compound": false,
                "type": "start",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1022",
                "name": "sub vcl_hash",
                "compound": true,
                "type": "sub",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1024",
                "name": "if(req.restarts > 0 && (req.http.x-vcl-version-mismatch == \"1\")) [...] ",
                "parent": "1022",
                "compound": true,
                "type": "parent",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1025",
                "name": "if(req.restarts > 0 && (req.http.x-vcl-version-mismatch == \"1\"))",
                "parent": "1024",
                "compound": false,
                "type": "conditional",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1026",
                "name": "unset req.http.Fastly-Force-Shield;\nset req.http.Fastly-No-Shield = \"1\";",
                "parent": "1024",
                "compound": false,
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1027",
                "name": "set req.hash += req.vcl.generation;\n#--FASTLY HASH END\n//Re-do this here because sometimes (Fastly-initiated, as opposed to VCL-initiated) restarts can pass control back to vcl_hash\n//Making sure clustering is enabled when appropriate, otherwise this can be disabled by a client request header, and is also disabled by default after a restart.\nset req.http.Fastly-Force-Shield = \"1\";\nunset req.http.Fastly-No-Shield;\n\n//If there was a VCL version mismatch between edge and fetch nodes, turn clustering off to avoid Bad Things happening",
                "parent": "1022",
                "compound": false,
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1028",
                "name": "if (req.http.geo:done != \"0\") [...] ",
                "parent": "1022",
                "compound": true,
                "type": "parent",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1029",
                "name": "if (req.http.geo:done != \"0\")",
                "parent": "1028",
                "compound": false,
                "type": "conditional",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1030",
                "name": "set req.hash += req.http.media:selected-backend;\n#This ensures shield requests can't be collapsed onto non-shield requests (which risks a wait-loop between POPs).\nset req.hash += req.http.media:is-shield;\n#Give OPTIONS requests their own cache key\nset req.hash += req.http.media:options;",
                "parent": "1028",
                "compound": false,
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1031",
                "name": "#Include geo:done in the cache key, to ensure the pre-flight responses can't end up being cached as responses against the main origin\nset req.hash += req.http.geo:done;",
                "parent": "1022",
                "compound": false,
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1032",
                "name": "if (req.http.geo:done != \"0\") [...] ",
                "parent": "1022",
                "compound": true,
                "type": "parent",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1033",
                "name": "if (req.http.geo:done != \"0\")",
                "parent": "1032",
                "compound": false,
                "type": "conditional",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1034",
                "name": "set req.hash += req.http.host;",
                "parent": "1032",
                "compound": false,
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1035",
                "name": "#The rest of this (minus the geo:done condition) is what would be run by the default VCL if we didn't specify a vcl_hash function. It's not strictly necesssary, but if we were to add a call to return(hash) in future without setting these, then things would go wrong (see support case 330620).",
                "parent": "1022",
                "compound": false,
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1036",
                "name": "set req.hash += req.url;\nreturn(hash);",
                "parent": "1022",
                "compound": false,
                "type": "terminal",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1037",
                "source": "1025",
                "target": "1026",
                "name": "true",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1038",
                "source": "1027",
                "target": "1025",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1039",
                "source": "1029",
                "target": "1030",
                "name": "true",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1040",
                "source": "1031",
                "target": "1029",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1041",
                "source": "1026",
                "target": "1031",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1042",
                "source": "1025",
                "target": "1031",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1043",
                "source": "1033",
                "target": "1034",
                "name": "true",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1044",
                "source": "1035",
                "target": "1033",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1045",
                "source": "1030",
                "target": "1035",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1046",
                "source": "1029",
                "target": "1035",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1047",
                "source": "1034",
                "target": "1036",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1048",
                "source": "1033",
                "target": "1036",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1049",
                "source": "1023",
                "target": "1027",
                "type": "edge",
                "root": "1022"
            }
        },
        {
            "data": {
                "id": "1051",
                "name": "sub vcl_hit",
                "parent": "1050",
                "compound": false,
                "type": "start",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1050",
                "name": "sub vcl_hit",
                "compound": true,
                "type": "sub",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1052",
                "name": "set req.http.Fastly-Cachetype = \"HIT\";",
                "parent": "1050",
                "compound": false,
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1053",
                "name": "set req.http.Fastly-Tmp-Obj-TTL = obj.ttl;\nset req.http.Fastly-Tmp-Obj-Grace = obj.grace;",
                "parent": "1050",
                "compound": false,
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1054",
                "name": "if (!obj.cacheable) [...] ",
                "parent": "1050",
                "compound": true,
                "type": "parent",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1055",
                "name": "if (!obj.cacheable)",
                "parent": "1054",
                "compound": false,
                "type": "conditional",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1056",
                "name": "return(pass);",
                "parent": "1054",
                "compound": false,
                "type": "terminal",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1057",
                "name": "#--FASTLY HIT END\n#Set a header here to capture the number of request headers. This (or the top of vcl_miss/vcl_pass) seems to be where this figure is highest at present. There's still no guarantee this is the peak count though.\n#_After_ the Fastly boilerplate in hit, as that's likely to add headers\n#Note that this will only actually work for cache hits on the edge node. If the cache hit is on a cluster peer, this header will get lost when control passes back to the edge. There's no way to pass any info back in that scenario.\nset req.http.x-log:req-headers-count = std.count(req.headers);",
                "parent": "1050",
                "compound": false,
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1058",
                "name": "return(deliver);",
                "parent": "1050",
                "compound": false,
                "type": "terminal",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1059",
                "source": "1053",
                "target": "1052",
                "type": "edge",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1060",
                "source": "1055",
                "target": "1056",
                "name": "true",
                "type": "edge",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1061",
                "source": "1057",
                "target": "1055",
                "type": "edge",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1062",
                "source": "1052",
                "target": "1057",
                "type": "edge",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1063",
                "source": "1055",
                "target": "1058",
                "type": "edge",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1064",
                "source": "1051",
                "target": "1053",
                "type": "edge",
                "root": "1050"
            }
        },
        {
            "data": {
                "id": "1066",
                "name": "sub vcl_log",
                "parent": "1065",
                "compound": false,
                "type": "start",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1065",
                "name": "sub vcl_log",
                "compound": true,
                "type": "sub",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1067",
                "name": "if( fastly.ff.visits_this_service == 0 ) [...] ",
                "parent": "1065",
                "compound": true,
                "type": "parent",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1068",
                "name": "if( fastly.ff.visits_this_service == 0 )",
                "parent": "1067",
                "compound": false,
                "type": "conditional",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1069",
                "name": "log {\"syslog \"} req.service_id {\" media-logs-s3 :: \"} {\"\"\"} time.start.sec {\"\" \"\"} client.ip {\"\" \"\"} if(req.http.media:selected-shield, req.http.media:selected-shield, \"\") {\"\" \"\"} if(req.http.media:selected-backend, req.http.media:selected-backend, \"\") {\"\" \"\"} req.backend.name {\"\" \"\"} if(req.http.x-log:backend-name, req.http.x-log:backend-name, \"\") {\"\" \"\"} cstr_escape(if(req.http.x-log:origin-host-header, req.http.x-log:origin-host-header, \"\")) {\"\" \"\"} cstr_escape(req.http.host) {\"\" \"\"} req.request {\"\" \"\"} if(req.http.X-BBC-Edge-Scheme, req.http.X-BBC-Edge-Scheme, \"\") {\"\" \"\"} req.url.path {\"\" \"\"} req.proto {\"\" \"\"} resp.status {\"\" \"\"} resp.response {\"\" \"\"} if(req.http.x-log:backend-status-code, req.http.x-log:backend-status-code, \"\") {\"\" \"\"} if(req.http.x-log:backend-status-msg, req.http.x-log:backend-status-msg, \"\") {\"\" \"\"} resp.bytes_written {\"\" \"\"} resp.body_bytes_written {\"\" \"\"} resp.completed {\"\" \"\"} if(req.http.Range, cstr_escape(req.http.Range), \"\") {\"\" \"\"} if(resp.http.Content-Length, resp.http.Content-Length, \"\") {\"\" \"\"} if(resp.http.Content-Type, resp.http.Content-Type, \"\") {\"\" \"\"} if(resp.http.Content-Encoding, resp.http.Content-Encoding, \"\") {\"\" \"\"} cstr_escape(req.http.Referer) {\"\" \"\"} if(req.http.User-Agent, cstr_escape(req.http.User-Agent), \"\") {\"\" \"\"} time.start.msec {\"\" \"\"} time.to_first_byte {\"\" \"\"} time.elapsed.usec {\"\" \"\"} if (req.http.X-BBC-Edge-Country ~ \"^[A-Za-z]{2}$\", req.http.X-BBC-Edge-Country, client.geo.country_code) {\"\" \"\"} if (req.http.X-Ip_is_uk_combined ~ \"(?i)^(?:yes|no)$\", req.http.X-Ip_is_uk_combined, if(client.geo.country_code ~ \"(?i)^(?:gb|gg|je|im)\", \"yes\", \"no\")) {\"\" \"\"} if(resp.http.X-Cache, resp.http.X-Cache, \"\") {\"\" \"\"} if(resp.http.X-Fastly-Cache-Reason, resp.http.X-Fastly-Cache-Reason, \"\") {\"\" \"\"} if(resp.http.Age, resp.http.Age, \"\") {\"\" \"\"} if(resp.http.Cache-Control, resp.http.Cache-Control, \"\") {\"\" \"\"} server.hostname {\"\" \"\"} server.datacenter {\"\" \"\"} if(resp.http.X-Served-By, resp.http.X-Served-By, \"\") {\"\" \"\"} tls.client.protocol {\"\" \"\"} tls.client.cipher {\"\" \"\"} tls.client.servername {\"\" \"\"} if(req.http.x-log:backend-ip, req.http.x-log:backend-ip, \"\") {\"\" \"\"} if(req.http.x-log:backend-src-ip, req.http.x-log:backend-src-ip, \"\") {\"\" \"\"} if(req.http.x-log:backend-requests, req.http.x-log:backend-requests, \"\") {\"\" \"\"} if(req.http.x-log:backend-cwnd, req.http.x-log:backend-cwnd, \"\") {\"\" \"\"} server.ip {\"\" \"\"} req.restarts {\"\" \"\"} if(req.http.X-BBC-Request-ID, req.http.X-BBC-Request-ID, \"\") {\"\" \"\"} if(req.http.x-vcl-version-mismatch, req.http.x-vcl-version-mismatch, \"\") {\"\" \"\"} req.vcl.version {\"\" \"\"} if(req.http.x-log:original-status-code, req.http.x-log:original-status-code, \"\") {\"\" \"\"} if(req.http.x-log:original-status-msg, req.http.x-log:original-status-msg, \"\") {\"\" \"\"} if(req.http.X-Ip_Asn, req.http.X-Ip_Asn, client.as.number) {\"\" \"\"} if(req.http.X-Ip_asn-name, req.http.X-Ip_asn-name, client.as.name) {\"\" \"\"} if(req.http.X-Ip_carrier, req.http.X-Ip_carrier, client.as.name) {\"\" \"\"} req.http.x-log:fetch-node {\"\" \"\"} req.http.x-log:shield-deliver-node {\"\" \"\"} req.http.x-log:shield-fetch-node {\"\" \"\"} if(fastly_info.state, fastly_info.state, \"\") {\"\" \"\"} client.socket.ploss {\"\" \"\"} client.socket.tcpi_total_retrans {\"\" \"\"} client.socket.tcpi_segs_out {\"\" \"\"} client.socket.tcpi_data_segs_out {\"\" \"\"} client.port {\"\" \"\"} req.digest {\"\"\"};\n\n# gcs media_logs_gcs\nlog {\"syslog \"} req.service_id {\" media-logs-gcs :: \"} {\"\"\"} time.start.sec {\"\" \"\"} client.ip {\"\" \"\"} if(req.http.media:selected-shield, req.http.media:selected-shield, \"\") {\"\" \"\"} if(req.http.media:selected-backend, req.http.media:selected-backend, \"\") {\"\" \"\"} req.backend.name {\"\" \"\"} if(req.http.x-log:backend-name, req.http.x-log:backend-name, \"\") {\"\" \"\"} cstr_escape(if(req.http.x-log:origin-host-header, req.http.x-log:origin-host-header, \"\")) {\"\" \"\"} cstr_escape(req.http.host) {\"\" \"\"} req.request {\"\" \"\"} if(req.http.X-BBC-Edge-Scheme, req.http.X-BBC-Edge-Scheme, \"\") {\"\" \"\"} req.url.path {\"\" \"\"} req.proto {\"\" \"\"} resp.status {\"\" \"\"} resp.response {\"\" \"\"} if(req.http.x-log:backend-status-code, req.http.x-log:backend-status-code, \"\") {\"\" \"\"} if(req.http.x-log:backend-status-msg, req.http.x-log:backend-status-msg, \"\") {\"\" \"\"} resp.bytes_written {\"\" \"\"} resp.body_bytes_written {\"\" \"\"} resp.completed {\"\" \"\"} if(req.http.Range, cstr_escape(req.http.Range), \"\") {\"\" \"\"} if(resp.http.Content-Length, resp.http.Content-Length, \"\") {\"\" \"\"} if(resp.http.Content-Type, resp.http.Content-Type, \"\") {\"\" \"\"} if(resp.http.Content-Encoding, resp.http.Content-Encoding, \"\") {\"\" \"\"} cstr_escape(req.http.Referer) {\"\" \"\"} if(req.http.User-Agent, cstr_escape(req.http.User-Agent), \"\") {\"\" \"\"} time.start.msec {\"\" \"\"} time.to_first_byte {\"\" \"\"} time.elapsed.usec {\"\" \"\"} if (req.http.X-BBC-Edge-Country ~ \"^[A-Za-z]{2}$\", req.http.X-BBC-Edge-Country, client.geo.country_code) {\"\" \"\"} if (req.http.X-Ip_is_uk_combined ~ \"(?i)^(?:yes|no)$\", req.http.X-Ip_is_uk_combined, if(client.geo.country_code ~ \"(?i)^(?:gb|gg|je|im)\", \"yes\", \"no\")) {\"\" \"\"} if(resp.http.X-Cache, resp.http.X-Cache, \"\") {\"\" \"\"} if(resp.http.X-Fastly-Cache-Reason, resp.http.X-Fastly-Cache-Reason, \"\") {\"\" \"\"} if(resp.http.Age, resp.http.Age, \"\") {\"\" \"\"} if(resp.http.Cache-Control, resp.http.Cache-Control, \"\") {\"\" \"\"} server.hostname {\"\" \"\"} server.datacenter {\"\" \"\"} if(resp.http.X-Served-By, resp.http.X-Served-By, \"\") {\"\" \"\"} tls.client.protocol {\"\" \"\"} tls.client.cipher {\"\" \"\"} tls.client.servername {\"\" \"\"} if(req.http.x-log:backend-ip, req.http.x-log:backend-ip, \"\") {\"\" \"\"} if(req.http.x-log:backend-src-ip, req.http.x-log:backend-src-ip, \"\") {\"\" \"\"} if(req.http.x-log:backend-requests, req.http.x-log:backend-requests, \"\") {\"\" \"\"} if(req.http.x-log:backend-cwnd, req.http.x-log:backend-cwnd, \"\") {\"\" \"\"} server.ip {\"\" \"\"} req.restarts {\"\" \"\"} if(req.http.X-BBC-Request-ID, req.http.X-BBC-Request-ID, \"\") {\"\" \"\"} if(req.http.x-vcl-version-mismatch, req.http.x-vcl-version-mismatch, \"\") {\"\" \"\"} req.vcl.version {\"\" \"\"} if(req.http.x-log:original-status-code, req.http.x-log:original-status-code, \"\") {\"\" \"\"} if(req.http.x-log:original-status-msg, req.http.x-log:original-status-msg, \"\") {\"\" \"\"} if(req.http.X-Ip_Asn, req.http.X-Ip_Asn, client.as.number) {\"\" \"\"} if(req.http.X-Ip_asn-name, req.http.X-Ip_asn-name, client.as.name) {\"\" \"\"} if(req.http.X-Ip_carrier, req.http.X-Ip_carrier, client.as.name) {\"\" \"\"} req.http.x-log:fetch-node {\"\" \"\"} req.http.x-log:shield-deliver-node {\"\" \"\"} req.http.x-log:shield-fetch-node {\"\" \"\"} if(fastly_info.state, fastly_info.state, \"\") {\"\" \"\"} client.socket.ploss {\"\" \"\"} client.socket.tcpi_total_retrans {\"\" \"\"} client.socket.tcpi_segs_out {\"\" \"\"} client.socket.tcpi_data_segs_out {\"\" \"\"} client.port {\"\" \"\"} req.digest {\"\"\"};",
                "parent": "1067",
                "compound": false,
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1070",
                "name": "if( req.http.media:is-shield == \"1\" ) [...] ",
                "parent": "1065",
                "compound": true,
                "type": "parent",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1071",
                "name": "if( req.http.media:is-shield == \"1\" )",
                "parent": "1070",
                "compound": false,
                "type": "conditional",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1072",
                "name": "log {\"syslog \"} req.service_id {\" media-shield-logs-gcs :: \"} {\"\"\"} time.start.sec {\"\" \"\"} client.ip {\"\" \"\"} if(req.http.media:selected-shield, req.http.media:selected-shield, \"\") {\"\" \"\"} if(req.http.media:selected-backend, req.http.media:selected-backend, \"\") {\"\" \"\"} if(resp.http.x-log:backend-name, resp.http.x-log:backend-name, \"\") {\"\" \"\"} cstr_escape(req.http.host) {\"\" \"\"} req.request {\"\" \"\"} if(req.http.X-BBC-Edge-Scheme, req.http.X-BBC-Edge-Scheme, \"\") {\"\" \"\"} req.url.path {\"\" \"\"} req.proto {\"\" \"\"} resp.status {\"\" \"\"} resp.response {\"\" \"\"} resp.bytes_written {\"\" \"\"} resp.body_bytes_written {\"\" \"\"} resp.completed {\"\" \"\"} if(req.http.Range, cstr_escape(req.http.Range), \"\") {\"\" \"\"} if(resp.http.Content-Length, resp.http.Content-Length, \"\") {\"\" \"\"} if(resp.http.Content-Type, resp.http.Content-Type, \"\") {\"\" \"\"} if(resp.http.Content-Encoding, resp.http.Content-Encoding, \"\") {\"\" \"\"} time.start.msec {\"\" \"\"} time.to_first_byte {\"\" \"\"} time.elapsed.usec {\"\" \"\"} if(resp.http.X-Cache, resp.http.X-Cache, \"\") {\"\" \"\"} if(resp.http.X-Fastly-Cache-Reason, resp.http.X-Fastly-Cache-Reason, \"\") {\"\" \"\"} if(resp.http.Age, resp.http.Age, \"\") {\"\" \"\"} if(resp.http.Cache-Control, resp.http.Cache-Control, \"\") {\"\" \"\"} server.hostname {\"\" \"\"} server.datacenter {\"\" \"\"} if(resp.http.X-Served-By, resp.http.X-Served-By, \"\") {\"\" \"\"} resp.http.x-log:backend-ip {\"\" \"\"} resp.http.x-log:backend-src-ip {\"\" \"\"} if(resp.http.x-log:backend-requests, resp.http.x-log:backend-requests, \"\") {\"\" \"\"} if(resp.http.x-log:backend-cwnd, resp.http.x-log:backend-cwnd, \"\") {\"\" \"\"} server.ip {\"\" \"\"} req.restarts {\"\" \"\"} if(req.http.X-BBC-Request-ID, req.http.X-BBC-Request-ID, \"\") {\"\" \"\"} if(req.http.x-vcl-version-mismatch, req.http.x-vcl-version-mismatch, \"\") {\"\" \"\"} req.vcl.version {\"\" \"\"} if(req.http.x-log:original-status-code, req.http.x-log:original-status-code, \"\") {\"\" \"\"} if(req.http.x-log:original-status-msg, req.http.x-log:original-status-msg, \"\") {\"\" \"\"} req.http.x-log:fetch-node {\"\" \"\"} if(fastly_info.state, fastly_info.state, \"\") {\"\" \"\"} req.digest {\"\" \"\"} req.http.Fastly-FF {\"\" \"\"} client.socket.ploss {\"\" \"\"} client.socket.tcpi_total_retrans {\"\" \"\"} client.socket.tcpi_segs_out {\"\" \"\"} client.socket.tcpi_data_segs_out {\"\" \"\"} client.port {\"\"\"};",
                "parent": "1070",
                "compound": false,
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1073",
                "name": "# Response Condition: Is Media Shield Prio: 1",
                "parent": "1065",
                "compound": false,
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1074",
                "name": "if( false ) [...] ",
                "parent": "1065",
                "compound": true,
                "type": "parent",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1075",
                "name": "if( false )",
                "parent": "1074",
                "compound": false,
                "type": "conditional",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1076",
                "name": "log {\"syslog \"} req.service_id {\" geo-logs-s3 :: \"} {\"\"defined-in-main-vcl\"\"};\n\n# gcs geo_logs_gcs\nlog {\"syslog \"} req.service_id {\" geo-logs-gcs :: \"} {\"\"defined-in-main-vcl\"\"};",
                "parent": "1074",
                "compound": false,
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1077",
                "name": "# Response Condition: Always false Prio: 10",
                "parent": "1065",
                "compound": false,
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1078",
                "name": "#--FASTLY LOG END",
                "parent": "1065",
                "compound": false,
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1079",
                "name": "end",
                "parent": "1065",
                "compound": false,
                "type": "terminal",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1080",
                "source": "1068",
                "target": "1069",
                "name": "true",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1081",
                "source": "1071",
                "target": "1072",
                "name": "true",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1082",
                "source": "1073",
                "target": "1071",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1083",
                "source": "1069",
                "target": "1073",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1084",
                "source": "1068",
                "target": "1073",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1085",
                "source": "1075",
                "target": "1076",
                "name": "true",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1086",
                "source": "1077",
                "target": "1075",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1087",
                "source": "1072",
                "target": "1077",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1088",
                "source": "1071",
                "target": "1077",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1089",
                "source": "1076",
                "target": "1078",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1090",
                "source": "1075",
                "target": "1078",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1091",
                "source": "1066",
                "target": "1068",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1092",
                "source": "1078",
                "target": "1079",
                "type": "edge",
                "root": "1065"
            }
        },
        {
            "data": {
                "id": "1094",
                "name": "sub vcl_miss",
                "parent": "1093",
                "compound": false,
                "type": "start",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1093",
                "name": "sub vcl_miss",
                "compound": true,
                "type": "sub",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1095",
                "name": "if (req.http.Fastly-Check-SHA1) [...] ",
                "parent": "1093",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1096",
                "name": "if (req.http.Fastly-Check-SHA1)",
                "parent": "1095",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1097",
                "name": "error 550 \"Doesnt exist\";",
                "parent": "1095",
                "compound": false,
                "type": "terminal",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1098",
                "name": "if (req.http.Fastly-FF) [...] ",
                "parent": "1093",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1099",
                "name": "if (req.http.Fastly-FF)",
                "parent": "1098",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1100",
                "name": "set bereq.http.Fastly-Client = \"1\";",
                "parent": "1098",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1101",
                "name": "unset bereq.http.Fastly-Original-Cookie;\nunset bereq.http.Fastly-Original-URL;\nunset bereq.http.Fastly-Vary-String;\nunset bereq.http.X-Varnish-Client;",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1102",
                "name": "{\n# do not send this to the backend",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1103",
                "name": "if (req.http.Fastly-Temp-XFF) [...] ",
                "parent": "1093",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1104",
                "name": "if (req.http.Fastly-Temp-XFF)",
                "parent": "1103",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1105",
                "name": "if (req.http.Fastly-Temp-XFF == \"\") [...] ",
                "parent": "1103",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1106",
                "name": "if (req.http.Fastly-Temp-XFF == \"\")",
                "parent": "1105",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1107",
                "name": "unset bereq.http.X-Forwarded-For;",
                "parent": "1105",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1108",
                "name": "set bereq.http.X-Forwarded-For = req.http.Fastly-Temp-XFF;",
                "parent": "1105",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1109",
                "name": "# unset bereq.http.Fastly-Temp-XFF;",
                "parent": "1103",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1110",
                "name": "#--FASTLY BEREQ BEGIN",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1111",
                "name": "#--FASTLY BEREQ END\n\n\n#;\n\nset req.http.Fastly-Cachetype = \"MISS\";",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1112",
                "name": "set req.http.x-log:req-headers-count = std.count(bereq.headers);\n#--FASTLY MISS BEGIN\n\n\n# this is not a hit after all, clean up these set in vcl_hit\nunset req.http.Fastly-Tmp-Obj-TTL;\nunset req.http.Fastly-Tmp-Obj-Grace;",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1113",
                "name": "if(fastly.ff.visits_this_service > 0) { // Only do this if it's a clustering or shield request. [...] ",
                "parent": "1093",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1114",
                "name": "if(fastly.ff.visits_this_service > 0) { // Only do this if it's a clustering or shield request.",
                "parent": "1113",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1115",
                "name": "if(std.atoi(req.http.x-edge-vcl-version) != var.vcl_version) [...] ",
                "parent": "1113",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1116",
                "name": "if(std.atoi(req.http.x-edge-vcl-version) != var.vcl_version)",
                "parent": "1115",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1117",
                "name": "if (table.lookup(vcl_mismatch_detection, \"enabled\")==\"yes\") [...] ",
                "parent": "1115",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1118",
                "name": "if (table.lookup(vcl_mismatch_detection, \"enabled\")==\"yes\")",
                "parent": "1117",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1119",
                "name": "error 621;",
                "parent": "1117",
                "compound": false,
                "type": "terminal",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1120",
                "name": "declare local var.vcl_version INTEGER;\nset var.vcl_version = req.vcl.version;",
                "parent": "1113",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1121",
                "name": "#--FASTLY MISS END\n\n//Check for VCL version mismatches between edge and fetch / shield nodes",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1122",
                "name": "if (time.elapsed > 4s) [...] ",
                "parent": "1093",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1123",
                "name": "if (time.elapsed > 4s)",
                "parent": "1122",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1124",
                "name": "error 503 \"Request Too Old\";",
                "parent": "1122",
                "compound": false,
                "type": "terminal",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1125",
                "name": "#If the request is already more than N seconds old by the time we get here, it means it's likely been stuck in a request collapsing queue for a while, which suggests the origin won't yield a cacheable response (so is probably failing). We should bail out now, which should help flush the queue. If this was the first try, a restart will be triggered to try the backup origin.\n#NB: this is imperfect, because we only get to check this when vcl_miss runs. So it won't break a request out that's still _in_ the queue. Also, it looks like vcl_miss never runs on a delivery node when clustering is in play (it runs on the fetch node instead). So requests can be stuck for a long time on the delivery node, as the time.elapsed counter starts again when the requests goes to the fetch node.\n#TODO: What's the most appropriate timeout here?",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1126",
                "name": "if (req.backend.is_shield) [...] ",
                "parent": "1093",
                "compound": true,
                "type": "parent",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1127",
                "name": "if (req.backend.is_shield)",
                "parent": "1126",
                "compound": false,
                "type": "conditional",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1128",
                "name": "set bereq.first_byte_timeout = 2500ms;\nset bereq.between_bytes_timeout = 1200ms;",
                "parent": "1126",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1129",
                "name": "#We don't get to specify these timeouts for shield backends the normal way, so we have to set them here.\n#We're setting these to slightly higher than the origin timeouts, so that the shield POP has a chance to hit its timeout and try the backup origin, so that we can cache the response against the \"primary\" cache key here. The slight downside is a potentially longer wait before giving up on the primary shield.",
                "parent": "1093",
                "compound": false,
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1130",
                "name": "call prepare_backend_request_headers;\n\nreturn(fetch);",
                "parent": "1093",
                "compound": false,
                "type": "terminal",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1131",
                "source": "1096",
                "target": "1097",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1132",
                "source": "1099",
                "target": "1100",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1133",
                "source": "1102",
                "target": "1101",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1134",
                "source": "1100",
                "target": "1102",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1135",
                "source": "1099",
                "target": "1102",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1136",
                "source": "1106",
                "target": "1107",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1137",
                "source": "1106",
                "target": "1108",
                "name": "false",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1138",
                "source": "1107",
                "target": "1109",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1139",
                "source": "1108",
                "target": "1109",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1140",
                "source": "1104",
                "target": "1106",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1141",
                "source": "1101",
                "target": "1104",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1142",
                "source": "1110",
                "target": "1102",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1143",
                "source": "1096",
                "target": "1110",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1144",
                "source": "1109",
                "target": "1111",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1145",
                "source": "1104",
                "target": "1111",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1146",
                "source": "1112",
                "target": "1096",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1147",
                "source": "1118",
                "target": "1119",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1148",
                "source": "1116",
                "target": "1118",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1149",
                "source": "1120",
                "target": "1116",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1150",
                "source": "1114",
                "target": "1120",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1151",
                "source": "1121",
                "target": "1114",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1152",
                "source": "1111",
                "target": "1121",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1153",
                "source": "1123",
                "target": "1124",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1154",
                "source": "1125",
                "target": "1123",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1155",
                "source": "1118",
                "target": "1125",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1156",
                "source": "1116",
                "target": "1125",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1157",
                "source": "1114",
                "target": "1125",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1158",
                "source": "1127",
                "target": "1128",
                "name": "true",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1159",
                "source": "1129",
                "target": "1127",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1160",
                "source": "1123",
                "target": "1129",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1161",
                "source": "1128",
                "target": "1130",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1162",
                "source": "1127",
                "target": "1130",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1163",
                "source": "1094",
                "target": "1112",
                "type": "edge",
                "root": "1093"
            }
        },
        {
            "data": {
                "id": "1165",
                "name": "sub vcl_pass",
                "parent": "1164",
                "compound": false,
                "type": "start",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1164",
                "name": "sub vcl_pass",
                "compound": true,
                "type": "sub",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1166",
                "name": "if (req.http.Fastly-FF) [...] ",
                "parent": "1164",
                "compound": true,
                "type": "parent",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1167",
                "name": "if (req.http.Fastly-FF)",
                "parent": "1166",
                "compound": false,
                "type": "conditional",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1168",
                "name": "set bereq.http.Fastly-Client = \"1\";",
                "parent": "1166",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1169",
                "name": "unset bereq.http.Fastly-Original-Cookie;\nunset bereq.http.Fastly-Original-URL;\nunset bereq.http.Fastly-Vary-String;\nunset bereq.http.X-Varnish-Client;",
                "parent": "1164",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1170",
                "name": "{\n# do not send this to the backend",
                "parent": "1164",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1171",
                "name": "if (req.http.Fastly-Temp-XFF) [...] ",
                "parent": "1164",
                "compound": true,
                "type": "parent",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1172",
                "name": "if (req.http.Fastly-Temp-XFF)",
                "parent": "1171",
                "compound": false,
                "type": "conditional",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1173",
                "name": "if (req.http.Fastly-Temp-XFF == \"\") [...] ",
                "parent": "1171",
                "compound": true,
                "type": "parent",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1174",
                "name": "if (req.http.Fastly-Temp-XFF == \"\")",
                "parent": "1173",
                "compound": false,
                "type": "conditional",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1175",
                "name": "unset bereq.http.X-Forwarded-For;",
                "parent": "1173",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1176",
                "name": "set bereq.http.X-Forwarded-For = req.http.Fastly-Temp-XFF;",
                "parent": "1173",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1177",
                "name": "# unset bereq.http.Fastly-Temp-XFF;",
                "parent": "1171",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1178",
                "name": "#--FASTLY BEREQ END\n\n\n#;\nset req.http.Fastly-Cachetype = \"PASS\";",
                "parent": "1164",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1179",
                "name": "set req.http.x-log:req-headers-count = std.count(bereq.headers);\n#--FASTLY PASS BEGIN\n\n\n{\n\n#--FASTLY BEREQ BEGIN",
                "parent": "1164",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1180",
                "name": "if(fastly.ff.visits_this_service > 0) { // Only do this if it's a clustering or shield request. [...] ",
                "parent": "1164",
                "compound": true,
                "type": "parent",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1181",
                "name": "if(fastly.ff.visits_this_service > 0) { // Only do this if it's a clustering or shield request.",
                "parent": "1180",
                "compound": false,
                "type": "conditional",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1182",
                "name": "if(std.atoi(req.http.x-edge-vcl-version) != var.vcl_version) [...] ",
                "parent": "1180",
                "compound": true,
                "type": "parent",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1183",
                "name": "if(std.atoi(req.http.x-edge-vcl-version) != var.vcl_version)",
                "parent": "1182",
                "compound": false,
                "type": "conditional",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1184",
                "name": "if (table.lookup(vcl_mismatch_detection, \"enabled\")==\"yes\") [...] ",
                "parent": "1182",
                "compound": true,
                "type": "parent",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1185",
                "name": "if (table.lookup(vcl_mismatch_detection, \"enabled\")==\"yes\")",
                "parent": "1184",
                "compound": false,
                "type": "conditional",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1186",
                "name": "error 621;",
                "parent": "1184",
                "compound": false,
                "type": "terminal",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1187",
                "name": "declare local var.vcl_version INTEGER;\nset var.vcl_version = req.vcl.version;",
                "parent": "1180",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1188",
                "name": "#--FASTLY PASS END\n//Check for VCL version mismatches between edge and fetch / shield nodes",
                "parent": "1164",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1189",
                "name": "call prepare_backend_request_headers;",
                "parent": "1164",
                "compound": false,
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1190",
                "name": "end",
                "parent": "1164",
                "compound": false,
                "type": "terminal",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1191",
                "source": "1167",
                "target": "1168",
                "name": "true",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1192",
                "source": "1170",
                "target": "1169",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1193",
                "source": "1168",
                "target": "1170",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1194",
                "source": "1167",
                "target": "1170",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1195",
                "source": "1174",
                "target": "1175",
                "name": "true",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1196",
                "source": "1174",
                "target": "1176",
                "name": "false",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1197",
                "source": "1175",
                "target": "1177",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1198",
                "source": "1176",
                "target": "1177",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1199",
                "source": "1172",
                "target": "1174",
                "name": "true",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1200",
                "source": "1169",
                "target": "1172",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1201",
                "source": "1177",
                "target": "1178",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1202",
                "source": "1172",
                "target": "1178",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1203",
                "source": "1179",
                "target": "1178",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1204",
                "source": "1185",
                "target": "1186",
                "name": "true",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1205",
                "source": "1183",
                "target": "1185",
                "name": "true",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1206",
                "source": "1187",
                "target": "1183",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1207",
                "source": "1181",
                "target": "1187",
                "name": "true",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1208",
                "source": "1188",
                "target": "1181",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1209",
                "source": "1178",
                "target": "1188",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1210",
                "source": "1185",
                "target": "1189",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1211",
                "source": "1183",
                "target": "1189",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1212",
                "source": "1181",
                "target": "1189",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1213",
                "source": "1165",
                "target": "1179",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1214",
                "source": "1189",
                "target": "1190",
                "type": "edge",
                "root": "1164"
            }
        },
        {
            "data": {
                "id": "1216",
                "name": "sub vcl_recv",
                "parent": "1215",
                "compound": false,
                "type": "start",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1215",
                "name": "sub vcl_recv",
                "compound": true,
                "type": "sub",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1217",
                "name": "if(fastly.ff.visits_this_service > 0) { // Only do this if it's a shield request. [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1218",
                "name": "if(fastly.ff.visits_this_service > 0) { // Only do this if it's a shield request.",
                "parent": "1217",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1219",
                "name": "if(std.atoi(req.http.x-edge-vcl-version) != var.vcl_version) [...] ",
                "parent": "1217",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1220",
                "name": "if(std.atoi(req.http.x-edge-vcl-version) != var.vcl_version)",
                "parent": "1219",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1221",
                "name": "if (table.lookup(vcl_mismatch_detection, \"enabled\")==\"yes\") [...] ",
                "parent": "1219",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1222",
                "name": "if (table.lookup(vcl_mismatch_detection, \"enabled\")==\"yes\")",
                "parent": "1221",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1223",
                "name": "error 621;",
                "parent": "1221",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1224",
                "name": "declare local var.vcl_version INTEGER;\nset var.vcl_version = req.vcl.version;",
                "parent": "1217",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1225",
                "name": "unset req.http.x-log:req-headers-count;\n//Check for VCL version mismatches between edge and shield nodes",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1226",
                "name": "if (fastly.ff.visits_this_service == 0 && req.restarts == 0) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1227",
                "name": "if (fastly.ff.visits_this_service == 0 && req.restarts == 0)",
                "parent": "1226",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1228",
                "name": "if( fastly_info.edge.is_tls ) [...] ",
                "parent": "1226",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1229",
                "name": "if( fastly_info.edge.is_tls )",
                "parent": "1228",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1230",
                "name": "set req.http.X-BBC-Edge-Scheme = \"https\";",
                "parent": "1228",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1231",
                "name": "set req.http.X-BBC-Edge-Scheme = \"http\";",
                "parent": "1228",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1232",
                "name": "set req.http.X-BBC-Edge-Client-IP = client.ip;\n#Unset x-original, which we'll use for storing details about the original request\nunset req.http.x-original;\n#Unset the \"geo\" header, which we'll use for storing things related to geoip lookups\nunset req.http.geo;\n#Unset the \"media\" header, which we'll use for storing things related to media backends\nunset req.http.media;\n#Unset the \"x-log\" header, which we'll use for storing things for logging\nunset req.http.x-log;\n#Initialise \"geo:done\" if we're not in a restart\nset req.http.geo:done = \"0\";\n#Initialise the \"geo:restarted\" header to say that geoip hasn't restarted (yet)\nset req.http.geo:restarted = \"0\";\n#Initialise the \"media:restarted\" header to say that the media request has restarted (yet)\nset req.http.media:restarted = \"0\";\n#Initialise the \"x-edge-vcl-version\" header and \"x-vcl-version-mismatch\", these will be used for checking for VCL version mismatches between edge and fetch nodes\nset req.http.x-edge-vcl-version = req.vcl.version;\nunset req.http.x-vcl-version-mismatch; // To prevent tampering.\n#Set a header to indicate the incoming protocol",
                "parent": "1226",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1233",
                "name": "#Normalise URL: (This isn't robust enough to use for general purpose, because, eg, it'll also mess with the query string. Should be good enough for media though, where URLs are less variable).\n#Remove double slashes\nset req.url = regsuball(req.url, \"/{2,}\", \"/\");\n#Remove dot-slash\nset req.url = regsuball(req.url, \"/(\\./)+\", \"/\");\n/*\n#commented out this bit for now, as this isn't a very good solution and might cause confusion. Would prefer to have Fastly implement something to take care of this.\n#Normalise dot-dot-slash. Need to see if we can do this properly (the below doesn't work very well, because it can't handle multiple ../ instances - to do that, we need to be able to remove the equivalent number of preceeding path elements, which is tricky)\nset req.url = regsuball(req.url, \"/[^/]+/\\.\\./\", \"/\");\n*/\n#Remove leading dot-dot-slash\nset req.url = regsuball(req.url, \"^/(\\.\\./)+\", \"/\");\n\n#Set a header to indicate the file type, so we can, eg, set different TTLs for manifests vs segments\nset req.http.media:file_type = table.lookup(file_types, req.url.ext, \"other\");\n\n#Add request ID header for tracing purposes - doing this here so that it's consistent between restarts\nset req.http.X-BBC-Request-ID = randomstr(32, \"1234567890abcdef\");",
                "parent": "1226",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1234",
                "name": "#unset these headers, as we don't use them\nunset req.http.Fastly-Client-IP;\nunset req.http.fastly-ssl;\nunset req.http.Fastly-Orig-Host;\nunset req.http.x-forwarded-host;\n\n#Things to only do on the first time through, ie before any restarts happen and when not on a shield node",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1235",
                "name": "if (req.restarts == 0) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1236",
                "name": "if (req.restarts == 0)",
                "parent": "1235",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1237",
                "name": "if (!req.http.X-Timer) [...] ",
                "parent": "1235",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1238",
                "name": "if (!req.http.X-Timer)",
                "parent": "1237",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1239",
                "name": "set req.http.X-Timer = \"S\" time.start.sec \".\" time.start.usec_frac;",
                "parent": "1237",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1240",
                "name": "set req.http.X-Timer = req.http.X-Timer \",VS0\";",
                "parent": "1235",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1241",
                "name": "#--FASTLY RECV BEGIN",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1242",
                "name": "if( table.contains(user_agent_block_list, req.http.User-Agent) ) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1243",
                "name": "if( table.contains(user_agent_block_list, req.http.User-Agent) )",
                "parent": "1242",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1244",
                "name": "error 900 \"Fastly Internal\";",
                "parent": "1242",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1245",
                "name": "declare local var.fastly_req_do_shield BOOL;\nset var.fastly_req_do_shield = (req.restarts == 0);\n\n\n# default conditions\nset req.backend = F_geo_us_east_443;\n\n# Header rewrite Origin PSK : 100\n\n\nset req.http.X-BBC-Fastly-PSK-save-for-later = \"hjndacu0qs4rw705225qq13cgqyluhq1\";\n\n\n\n\n# end default conditions\n\n\n\n# Request Condition: User Agent block list Prio: 3",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1246",
                "name": "if (req.backend == F_geo_us_east_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1247",
                "name": "if (req.backend == F_geo_us_east_443 && var.fastly_req_do_shield)",
                "parent": "1246",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1248",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_chi_il_us, F_geo_us_east_443);",
                "parent": "1246",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1249",
                "name": "#end condition\n\n#do shield here F_geo_us_east_443 > ssl_shield_chi_il_us;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1250",
                "name": "if (req.backend == F_vs_cmaf_pushb_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1251",
                "name": "if (req.backend == F_vs_cmaf_pushb_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1250",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1252",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_cmaf_pushb_uk_backup_443);",
                "parent": "1250",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1253",
                "name": "#do shield here F_vs_cmaf_pushb_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1254",
                "name": "if (req.backend == F_vs_hls_pushb_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1255",
                "name": "if (req.backend == F_vs_hls_pushb_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1254",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1256",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_hls_pushb_uk_backup_443);",
                "parent": "1254",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1257",
                "name": "#do shield here F_vs_hls_pushb_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1258",
                "name": "if (req.backend == F_vs_cmaf_pushb_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1259",
                "name": "if (req.backend == F_vs_cmaf_pushb_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1258",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1260",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_cmaf_pushb_uk_primary_443);",
                "parent": "1258",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1261",
                "name": "#do shield here F_vs_cmaf_pushb_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1262",
                "name": "if (req.backend == F_vs_hls_pushb_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1263",
                "name": "if (req.backend == F_vs_hls_pushb_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1262",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1264",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_hls_pushb_uk_primary_443);",
                "parent": "1262",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1265",
                "name": "#do shield here F_vs_hls_pushb_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1266",
                "name": "if (req.backend == F_ve_uhd_push_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1267",
                "name": "if (req.backend == F_ve_uhd_push_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1266",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1268",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_uhd_push_uk_backup_443);",
                "parent": "1266",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1269",
                "name": "#do shield here F_ve_uhd_push_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1270",
                "name": "if (req.backend == F_ve_uhd_push_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1271",
                "name": "if (req.backend == F_ve_uhd_push_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1270",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1272",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_uhd_push_uk_primary_443);",
                "parent": "1270",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1273",
                "name": "#do shield here F_ve_uhd_push_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1274",
                "name": "if (req.backend == F_ve_hls_pushb_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1275",
                "name": "if (req.backend == F_ve_hls_pushb_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1274",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1276",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_hls_pushb_uk_primary_443);",
                "parent": "1274",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1277",
                "name": "#do shield here F_ve_hls_pushb_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1278",
                "name": "if (req.backend == F_vs_hls_push_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1279",
                "name": "if (req.backend == F_vs_hls_push_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1278",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1280",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_hls_push_uk_backup_443);",
                "parent": "1278",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1281",
                "name": "#do shield here F_vs_hls_push_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1282",
                "name": "if (req.backend == F_vs_hls_push_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1283",
                "name": "if (req.backend == F_vs_hls_push_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1282",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1284",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_hls_push_ww_backup_443);",
                "parent": "1282",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1285",
                "name": "#do shield here F_vs_hls_push_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1286",
                "name": "if (req.backend == F_vs_hls_push_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1287",
                "name": "if (req.backend == F_vs_hls_push_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1286",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1288",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_hls_push_ww_primary_443);",
                "parent": "1286",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1289",
                "name": "#do shield here F_vs_hls_push_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1290",
                "name": "if (req.backend == F_ve_cmaf_push_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1291",
                "name": "if (req.backend == F_ve_cmaf_push_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1290",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1292",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_cmaf_push_uk_backup_443);",
                "parent": "1290",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1293",
                "name": "#do shield here F_ve_cmaf_push_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1294",
                "name": "if (req.backend == F_ve_hls_pushb_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1295",
                "name": "if (req.backend == F_ve_hls_pushb_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1294",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1296",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_hls_pushb_uk_backup_443);",
                "parent": "1294",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1297",
                "name": "#do shield here F_ve_hls_pushb_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1298",
                "name": "if (req.backend == F_ve_hls_pushb_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1299",
                "name": "if (req.backend == F_ve_hls_pushb_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1298",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1300",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_hls_pushb_ww_primary_443);",
                "parent": "1298",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1301",
                "name": "#do shield here F_ve_hls_pushb_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1302",
                "name": "if (req.backend == F_ve_uhd_pushb_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1303",
                "name": "if (req.backend == F_ve_uhd_pushb_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1302",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1304",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_uhd_pushb_uk_backup_443);",
                "parent": "1302",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1305",
                "name": "#do shield here F_ve_uhd_pushb_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1306",
                "name": "if (req.backend == F_ve_cmaf_pushb_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1307",
                "name": "if (req.backend == F_ve_cmaf_pushb_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1306",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1308",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_cmaf_pushb_ww_primary_443);",
                "parent": "1306",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1309",
                "name": "#do shield here F_ve_cmaf_pushb_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1310",
                "name": "if (req.backend == F_ve_hls_push_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1311",
                "name": "if (req.backend == F_ve_hls_push_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1310",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1312",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_hls_push_ww_primary_443);",
                "parent": "1310",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1313",
                "name": "#do shield here F_ve_hls_push_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1314",
                "name": "if (req.backend == F_vs_cmaf_pushb_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1315",
                "name": "if (req.backend == F_vs_cmaf_pushb_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1314",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1316",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_cmaf_pushb_ww_backup_443);",
                "parent": "1314",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1317",
                "name": "#do shield here F_vs_cmaf_pushb_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1318",
                "name": "if (req.backend == F_vs_cmaf_pushb_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1319",
                "name": "if (req.backend == F_vs_cmaf_pushb_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1318",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1320",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_cmaf_pushb_ww_primary_443);",
                "parent": "1318",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1321",
                "name": "#do shield here F_vs_cmaf_pushb_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1322",
                "name": "if (req.backend == F_ve_cmaf_pushb_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1323",
                "name": "if (req.backend == F_ve_cmaf_pushb_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1322",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1324",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_cmaf_pushb_uk_primary_443);",
                "parent": "1322",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1325",
                "name": "#do shield here F_ve_cmaf_pushb_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1326",
                "name": "if (req.backend == F_ve_cmaf_push_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1327",
                "name": "if (req.backend == F_ve_cmaf_push_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1326",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1328",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_cmaf_push_ww_primary_443);",
                "parent": "1326",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1329",
                "name": "#do shield here F_ve_cmaf_push_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1330",
                "name": "if (req.backend == F_vs_cmaf_push_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1331",
                "name": "if (req.backend == F_vs_cmaf_push_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1330",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1332",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_cmaf_push_ww_backup_443);",
                "parent": "1330",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1333",
                "name": "#do shield here F_vs_cmaf_push_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1334",
                "name": "if (req.backend == F_vs_hls_pushb_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1335",
                "name": "if (req.backend == F_vs_hls_pushb_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1334",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1336",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_hls_pushb_ww_backup_443);",
                "parent": "1334",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1337",
                "name": "#do shield here F_vs_hls_pushb_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1338",
                "name": "if (req.backend == F_ve_cmaf_pushb_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1339",
                "name": "if (req.backend == F_ve_cmaf_pushb_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1338",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1340",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_cmaf_pushb_ww_backup_443);",
                "parent": "1338",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1341",
                "name": "#do shield here F_ve_cmaf_pushb_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1342",
                "name": "if (req.backend == F_ve_cmaf_push_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1343",
                "name": "if (req.backend == F_ve_cmaf_push_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1342",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1344",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_cmaf_push_uk_primary_443);",
                "parent": "1342",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1345",
                "name": "#do shield here F_ve_cmaf_push_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1346",
                "name": "if (req.backend == F_ve_hls_pushb_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1347",
                "name": "if (req.backend == F_ve_hls_pushb_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1346",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1348",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_hls_pushb_ww_backup_443);",
                "parent": "1346",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1349",
                "name": "#do shield here F_ve_hls_pushb_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1350",
                "name": "if (req.backend == F_vs_cmaf_push_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1351",
                "name": "if (req.backend == F_vs_cmaf_push_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1350",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1352",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_vs_cmaf_push_uk_backup_443);",
                "parent": "1350",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1353",
                "name": "#do shield here F_vs_cmaf_push_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1354",
                "name": "if (req.backend == F_ve_hls_push_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1355",
                "name": "if (req.backend == F_ve_hls_push_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1354",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1356",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_hls_push_ww_backup_443);",
                "parent": "1354",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1357",
                "name": "#do shield here F_ve_hls_push_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1358",
                "name": "if (req.backend == F_vs_hls_push_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1359",
                "name": "if (req.backend == F_vs_hls_push_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1358",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1360",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_hls_push_uk_primary_443);",
                "parent": "1358",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1361",
                "name": "#do shield here F_vs_hls_push_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1362",
                "name": "if (req.backend == F_ve_cmaf_pushb_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1363",
                "name": "if (req.backend == F_ve_cmaf_pushb_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1362",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1364",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_cmaf_pushb_uk_backup_443);",
                "parent": "1362",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1365",
                "name": "#do shield here F_ve_cmaf_pushb_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1366",
                "name": "if (req.backend == F_ve_hls_push_uk_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1367",
                "name": "if (req.backend == F_ve_hls_push_uk_backup_443 && var.fastly_req_do_shield)",
                "parent": "1366",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1368",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_hls_push_uk_backup_443);",
                "parent": "1366",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1369",
                "name": "#do shield here F_ve_hls_push_uk_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1370",
                "name": "if (req.backend == F_ve_hls_push_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1371",
                "name": "if (req.backend == F_ve_hls_push_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1370",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1372",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_hls_push_uk_primary_443);",
                "parent": "1370",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1373",
                "name": "#do shield here F_ve_hls_push_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1374",
                "name": "if (req.backend == F_ve_uhd_pushb_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1375",
                "name": "if (req.backend == F_ve_uhd_pushb_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1374",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1376",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_ve_uhd_pushb_uk_primary_443);",
                "parent": "1374",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1377",
                "name": "#do shield here F_ve_uhd_pushb_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1378",
                "name": "if (req.backend == F_ve_cmaf_push_ww_backup_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1379",
                "name": "if (req.backend == F_ve_cmaf_push_ww_backup_443 && var.fastly_req_do_shield)",
                "parent": "1378",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1380",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_ve_cmaf_push_ww_backup_443);",
                "parent": "1378",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1381",
                "name": "#do shield here F_ve_cmaf_push_ww_backup_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1382",
                "name": "if (req.backend == F_vs_cmaf_push_uk_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1383",
                "name": "if (req.backend == F_vs_cmaf_push_uk_primary_443 && var.fastly_req_do_shield)",
                "parent": "1382",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1384",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_cmaf_push_uk_primary_443);",
                "parent": "1382",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1385",
                "name": "#do shield here F_vs_cmaf_push_uk_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1386",
                "name": "if (req.backend == F_vs_cmaf_push_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1387",
                "name": "if (req.backend == F_vs_cmaf_push_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1386",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1388",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_cmaf_push_ww_primary_443);",
                "parent": "1386",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1389",
                "name": "#do shield here F_vs_cmaf_push_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1390",
                "name": "if (req.backend == F_vs_hls_pushb_ww_primary_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1391",
                "name": "if (req.backend == F_vs_hls_pushb_ww_primary_443 && var.fastly_req_do_shield)",
                "parent": "1390",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1392",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_city_uk, F_vs_hls_pushb_ww_primary_443);",
                "parent": "1390",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1393",
                "name": "#do shield here F_vs_hls_pushb_ww_primary_443 > ssl_shield_london_city_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1394",
                "name": "if (req.backend == F_geo_london_443 && var.fastly_req_do_shield) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1395",
                "name": "if (req.backend == F_geo_london_443 && var.fastly_req_do_shield)",
                "parent": "1394",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1396",
                "name": "set req.backend = fastly.try_select_shield(ssl_shield_london_uk, F_geo_london_443);",
                "parent": "1394",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1397",
                "name": "#do shield here F_geo_london_443 > ssl_shield_london_uk;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1398",
                "name": "if (fastly.ff.visits_this_service > 0 && req.http.geo:done == \"1\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1399",
                "name": "if (fastly.ff.visits_this_service > 0 && req.http.geo:done == \"1\")",
                "parent": "1398",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1400",
                "name": "set req.http.media:is-shield = \"1\";",
                "parent": "1398",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1401",
                "name": "#--FASTLY RECV END\n\n#If this is >0 in vcl_recv, then we must be on a \"shield\" node. We set this here so that we can stil tell whether we're on a shield POP even once we reach a cluster node",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1402",
                "name": "if (req.restarts == 1 && req.http.geo:done == \"0\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1403",
                "name": "if (req.restarts == 1 && req.http.geo:done == \"0\")",
                "parent": "1402",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1404",
                "name": "set req.http.geo:restarted = \"1\";",
                "parent": "1402",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1405",
                "name": "#Apply request method filtering where relevant. We're doing this _before_ the geoip lookup, because this filter will block requests outright. There's no need to do a geoip lookup if the request is being rejected.\ncall method_filter;\n\n#We have to set this here because if we need to restart in vcl_fetch, any header modifications will be lost when clustering is enabled\n#If we restarted due to vcl mismatch, we're still going to count that as a geo restart to keep the restart count down",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1406",
                "name": "if ( [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1407",
                "name": "if (",
                "parent": "1406",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1408",
                "name": "set req.http.media:restarted = \"1\";",
                "parent": "1406",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1409",
                "name": "/* Commenting this out for now, since we don't allow any serve staling in vcl_fetch anyway, _except_ for if we're retrying the primary after a previous error, in which case we want the stale error anyway\n#If we're on a shield node, we don't want to use stale content for HLS manifests, because the edge will do that for end-users. Serving stale on a shield will make out-of-date responses more likely.\nif (req.http.media:is-shield == \"1\" && req.http.media:file_type == \"manifest\") {\nset req.max_stale_while_revalidate = 0s;\nset req.max_stale_if_error = 0s;\n}\n*/\n\n#We have to set this here because if we need to restart in vcl_fetch, any header modifications will be lost when clustering is enabled",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1410",
                "name": "if(req.restarts > 0 && (req.http.x-vcl-version-mismatch == \"1\")) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1411",
                "name": "if(req.restarts > 0 && (req.http.x-vcl-version-mismatch == \"1\"))",
                "parent": "1410",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1412",
                "name": "unset req.http.Fastly-Force-Shield;\nset req.http.Fastly-No-Shield = \"1\";",
                "parent": "1410",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1413",
                "name": "//Making sure clustering is enabled when appropriate, otherwise this can be disabled by a client request header, and is also disabled by default after a restart.\n//Make sure change changes to this logic are replicated in vcl_hash\nset req.http.Fastly-Force-Shield = \"1\";\nunset req.http.Fastly-No-Shield;\n\n//If there was a VCL version mismatch between edge and fetch nodes, turn clustering off to avoid Bad Things happening\n//Make sure change changes to this logic are replicated in vcl_hash",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1414",
                "name": "if (req.http.geo:done == \"0\" && req.restarts < 2 && req.request != \"FASTLYPURGE\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1415",
                "name": "if (req.http.geo:done == \"0\" && req.restarts < 2 && req.request != \"FASTLYPURGE\")",
                "parent": "1414",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1416",
                "name": "if(req.restarts == 0) [...] ",
                "parent": "1414",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1417",
                "name": "if(req.restarts == 0)",
                "parent": "1416",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1418",
                "name": "set req.http.x-original:req-url = req.url;\n#Would like to be able to swap to HEAD method here but Fastly will switch that back to GET for the origin request anyway. Instead, we have to change the method in vcl_miss/vcl_pass\n#IMPORTANT: In order for POST and PUT requests to work, Fastly have to have enabled the \"request body pragma\" setting on the service this is deployed to, otherwise the request body will be lost after the restart.\n#(https://docs.fastly.com/en/guides/using-get-instead-of-head-for-command-line-caching-tests#default-caching-behavior-of-http-verbs)\nset req.http.x-original:method = req.request;\nset req.http.x-original:host = req.http.host;\n#We'll unset the \"range\" header when we set up the geoip backend, so as to avoid confusing the cache if the client asked for an impossible byte range\nset req.http.x-original:range = req.http.range;\n#We'll unset if-modified-since / if-none-match etc to avoid confusing 304s\nset req.http.x-original:if-modified-since = req.http.if-modified-since;\nset req.http.x-original:if-none-match = req.http.if-none-match;\nset req.http.x-original:if-match = req.http.if-match;\nset req.http.x-original:if-unmodified-since = req.http.if-unmodified-since;",
                "parent": "1416",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1419",
                "name": "if (req.http.x-original:req-url == \"/geoip-status\") [...] ",
                "parent": "1414",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1420",
                "name": "if (req.http.x-original:req-url == \"/geoip-status\")",
                "parent": "1419",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1421",
                "name": "set req.http.geo:done = \"1\";\n#Set the request URL, method and other headers back to the original ones, rather than the geoip ones\ncall set_request_back_to_original;\n#Set this here, because we're not going to reach vcl_(hit|miss|pass), where this normally gets set\nset req.http.x-log:req-headers-count = std.count(req.headers);\nerror 601;",
                "parent": "1419",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1422",
                "name": "#Set origin and URL to the geoip ones\ncall set_geo_backend;\n#If this was a request for the geoip status page, bail out to error here to return the synthetic response",
                "parent": "1414",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1423",
                "name": "#Set this for logging purposes - we'll unset it later before contacting the origin\nset req.http.x-log:backend-name = req.backend;\nreturn(lookup);",
                "parent": "1414",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1424",
                "name": "if (req.http.X-Country !~ \"^[A-Za-z]{2}$\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1425",
                "name": "if (req.http.X-Country !~ \"^[A-Za-z]{2}$\")",
                "parent": "1424",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1426",
                "name": "if (client.geo.country_code ~ \"^[A-Za-z]{2}$\") [...] ",
                "parent": "1424",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1427",
                "name": "if (client.geo.country_code ~ \"^[A-Za-z]{2}$\")",
                "parent": "1426",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1428",
                "name": "set req.http.X-Country = std.tolower(client.geo.country_code);\nset req.http.X-BBC-Edge-Country = req.http.X-Country;",
                "parent": "1426",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1429",
                "name": "set req.http.X-Country = \"**\";\nset req.http.X-BBC-Edge-Country = \"**\";",
                "parent": "1426",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1430",
                "name": "#FAIL-SAFE in case the geoip lookup failed or resulted in nonsense, or the headers didn't get set",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1431",
                "name": "if (req.http.X-Ip_is_uk_combined != \"no\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1432",
                "name": "if (req.http.X-Ip_is_uk_combined != \"no\")",
                "parent": "1431",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1433",
                "name": "set req.http.X-Ip_is_uk_combined = \"yes\";\nset req.http.X-BBC-Edge-IsUK = \"yes\";",
                "parent": "1431",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1434",
                "name": "#Fail \"open\" on this one (so we default to allowing playback if the geoip request failed)",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1435",
                "name": "if (req.http.X-Ip_is_advertise_combined != \"yes\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1436",
                "name": "if (req.http.X-Ip_is_advertise_combined != \"yes\")",
                "parent": "1435",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1437",
                "name": "set req.http.X-Ip_is_advertise_combined = \"no\";",
                "parent": "1435",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1438",
                "name": "if (req.http.X-Ip_is_eu_combined != \"yes\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1439",
                "name": "if (req.http.X-Ip_is_eu_combined != \"yes\")",
                "parent": "1438",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1440",
                "name": "set req.http.X-Ip_is_eu_combined = \"no\";",
                "parent": "1438",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1441",
                "name": "if (req.url == \"/origin-status\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1442",
                "name": "if (req.url == \"/origin-status\")",
                "parent": "1441",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1443",
                "name": "set req.http.x-log:req-headers-count = std.count(req.headers);\nerror 603;",
                "parent": "1441",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1444",
                "name": "#END FAIL-SAFE\n\n#Set the request URL, method and other headers back to the original ones, rather than the geoip ones\ncall set_request_back_to_original;\n\n#Just in case this didn't get set (eg if we didn't actually succeed on any geoip lookups)\nset req.http.geo:done = \"1\";\n\n# Set the backend\ncall set_backend;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1445",
                "name": "if (req.url ~ \"/geowmi/?$\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1446",
                "name": "if (req.url ~ \"/geowmi/?$\")",
                "parent": "1445",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1447",
                "name": "error 602;",
                "parent": "1445",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1448",
                "name": "#Set this for logging purposes - we'll unset it later before contacting the origin (at time of writing, this isn't actually used on the main request, but re-setting it here to avoid confusion)\nset req.http.x-log:backend-name = req.backend;\n\n#Apply query string filtering where relevant\ncall qs_filter;",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1449",
                "name": "if (req.method == \"OPTIONS\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1450",
                "name": "if (req.method == \"OPTIONS\")",
                "parent": "1449",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1451",
                "name": "set req.method = \"GET\";\nset req.http.media:options = \"1\";",
                "parent": "1449",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1452",
                "name": "#Special handling for OPTIONS https://developer.fastly.com/solutions/examples/support-caching-of-options-requests",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1453",
                "name": "if (req.request == \"FASTLYPURGE\" && req.http.X-BBC-Edge-Client-IP !~ purge_acl) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1454",
                "name": "if (req.request == \"FASTLYPURGE\" && req.http.X-BBC-Edge-Client-IP !~ purge_acl)",
                "parent": "1453",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1455",
                "name": "error 405;",
                "parent": "1453",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1456",
                "name": "#For purge requests, check it's from an allowed IP first...",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1457",
                "name": "if (req.request == \"FASTLYPURGE\") [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1458",
                "name": "if (req.request == \"FASTLYPURGE\")",
                "parent": "1457",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1459",
                "name": "if (!table.contains(purge_acl, req.http.X-Fastly-Purge-Key)) [...] ",
                "parent": "1457",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1460",
                "name": "if (!table.contains(purge_acl, req.http.X-Fastly-Purge-Key))",
                "parent": "1459",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1461",
                "name": "error 405;",
                "parent": "1459",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1462",
                "name": "return(lookup);",
                "parent": "1457",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1463",
                "name": "#...and then check the correct \"X-Fastly-Purge-Key\" was given",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1464",
                "name": "if (fastly.ff.visits_this_service == 0) [...] ",
                "parent": "1215",
                "compound": true,
                "type": "parent",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1465",
                "name": "if (fastly.ff.visits_this_service == 0)",
                "parent": "1464",
                "compound": false,
                "type": "conditional",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1466",
                "name": "call enforce_geo_check;",
                "parent": "1464",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1467",
                "name": "#Geo check at the edge",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1468",
                "name": "#Request filtering\ncall request_filter;\n\nreturn(lookup);",
                "parent": "1215",
                "compound": false,
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1469",
                "name": "end",
                "parent": "1215",
                "compound": false,
                "type": "terminal",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1470",
                "source": "1222",
                "target": "1223",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1471",
                "source": "1220",
                "target": "1222",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1472",
                "source": "1224",
                "target": "1220",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1473",
                "source": "1218",
                "target": "1224",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1474",
                "source": "1225",
                "target": "1218",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1475",
                "source": "1229",
                "target": "1230",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1476",
                "source": "1229",
                "target": "1231",
                "name": "false",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1477",
                "source": "1232",
                "target": "1229",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1478",
                "source": "1230",
                "target": "1233",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1479",
                "source": "1231",
                "target": "1233",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1480",
                "source": "1227",
                "target": "1232",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1481",
                "source": "1234",
                "target": "1227",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1482",
                "source": "1222",
                "target": "1234",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1483",
                "source": "1220",
                "target": "1234",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1484",
                "source": "1218",
                "target": "1234",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1485",
                "source": "1238",
                "target": "1239",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1486",
                "source": "1239",
                "target": "1240",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1487",
                "source": "1238",
                "target": "1240",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1488",
                "source": "1236",
                "target": "1238",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1489",
                "source": "1241",
                "target": "1236",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1490",
                "source": "1233",
                "target": "1241",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1491",
                "source": "1227",
                "target": "1241",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1492",
                "source": "1243",
                "target": "1244",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1493",
                "source": "1245",
                "target": "1243",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1494",
                "source": "1240",
                "target": "1245",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1495",
                "source": "1236",
                "target": "1245",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1496",
                "source": "1247",
                "target": "1248",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1497",
                "source": "1249",
                "target": "1247",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1498",
                "source": "1243",
                "target": "1249",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1499",
                "source": "1251",
                "target": "1252",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1500",
                "source": "1253",
                "target": "1251",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1501",
                "source": "1248",
                "target": "1253",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1502",
                "source": "1247",
                "target": "1253",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1503",
                "source": "1255",
                "target": "1256",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1504",
                "source": "1257",
                "target": "1255",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1505",
                "source": "1252",
                "target": "1257",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1506",
                "source": "1251",
                "target": "1257",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1507",
                "source": "1259",
                "target": "1260",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1508",
                "source": "1261",
                "target": "1259",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1509",
                "source": "1256",
                "target": "1261",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1510",
                "source": "1255",
                "target": "1261",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1511",
                "source": "1263",
                "target": "1264",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1512",
                "source": "1265",
                "target": "1263",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1513",
                "source": "1260",
                "target": "1265",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1514",
                "source": "1259",
                "target": "1265",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1515",
                "source": "1267",
                "target": "1268",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1516",
                "source": "1269",
                "target": "1267",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1517",
                "source": "1264",
                "target": "1269",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1518",
                "source": "1263",
                "target": "1269",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1519",
                "source": "1271",
                "target": "1272",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1520",
                "source": "1273",
                "target": "1271",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1521",
                "source": "1268",
                "target": "1273",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1522",
                "source": "1267",
                "target": "1273",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1523",
                "source": "1275",
                "target": "1276",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1524",
                "source": "1277",
                "target": "1275",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1525",
                "source": "1272",
                "target": "1277",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1526",
                "source": "1271",
                "target": "1277",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1527",
                "source": "1279",
                "target": "1280",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1528",
                "source": "1281",
                "target": "1279",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1529",
                "source": "1276",
                "target": "1281",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1530",
                "source": "1275",
                "target": "1281",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1531",
                "source": "1283",
                "target": "1284",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1532",
                "source": "1285",
                "target": "1283",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1533",
                "source": "1280",
                "target": "1285",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1534",
                "source": "1279",
                "target": "1285",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1535",
                "source": "1287",
                "target": "1288",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1536",
                "source": "1289",
                "target": "1287",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1537",
                "source": "1284",
                "target": "1289",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1538",
                "source": "1283",
                "target": "1289",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1539",
                "source": "1291",
                "target": "1292",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1540",
                "source": "1293",
                "target": "1291",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1541",
                "source": "1288",
                "target": "1293",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1542",
                "source": "1287",
                "target": "1293",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1543",
                "source": "1295",
                "target": "1296",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1544",
                "source": "1297",
                "target": "1295",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1545",
                "source": "1292",
                "target": "1297",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1546",
                "source": "1291",
                "target": "1297",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1547",
                "source": "1299",
                "target": "1300",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1548",
                "source": "1301",
                "target": "1299",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1549",
                "source": "1296",
                "target": "1301",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1550",
                "source": "1295",
                "target": "1301",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1551",
                "source": "1303",
                "target": "1304",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1552",
                "source": "1305",
                "target": "1303",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1553",
                "source": "1300",
                "target": "1305",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1554",
                "source": "1299",
                "target": "1305",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1555",
                "source": "1307",
                "target": "1308",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1556",
                "source": "1309",
                "target": "1307",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1557",
                "source": "1304",
                "target": "1309",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1558",
                "source": "1303",
                "target": "1309",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1559",
                "source": "1311",
                "target": "1312",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1560",
                "source": "1313",
                "target": "1311",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1561",
                "source": "1308",
                "target": "1313",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1562",
                "source": "1307",
                "target": "1313",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1563",
                "source": "1315",
                "target": "1316",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1564",
                "source": "1317",
                "target": "1315",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1565",
                "source": "1312",
                "target": "1317",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1566",
                "source": "1311",
                "target": "1317",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1567",
                "source": "1319",
                "target": "1320",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1568",
                "source": "1321",
                "target": "1319",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1569",
                "source": "1316",
                "target": "1321",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1570",
                "source": "1315",
                "target": "1321",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1571",
                "source": "1323",
                "target": "1324",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1572",
                "source": "1325",
                "target": "1323",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1573",
                "source": "1320",
                "target": "1325",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1574",
                "source": "1319",
                "target": "1325",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1575",
                "source": "1327",
                "target": "1328",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1576",
                "source": "1329",
                "target": "1327",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1577",
                "source": "1324",
                "target": "1329",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1578",
                "source": "1323",
                "target": "1329",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1579",
                "source": "1331",
                "target": "1332",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1580",
                "source": "1333",
                "target": "1331",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1581",
                "source": "1328",
                "target": "1333",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1582",
                "source": "1327",
                "target": "1333",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1583",
                "source": "1335",
                "target": "1336",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1584",
                "source": "1337",
                "target": "1335",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1585",
                "source": "1332",
                "target": "1337",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1586",
                "source": "1331",
                "target": "1337",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1587",
                "source": "1339",
                "target": "1340",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1588",
                "source": "1341",
                "target": "1339",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1589",
                "source": "1336",
                "target": "1341",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1590",
                "source": "1335",
                "target": "1341",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1591",
                "source": "1343",
                "target": "1344",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1592",
                "source": "1345",
                "target": "1343",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1593",
                "source": "1340",
                "target": "1345",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1594",
                "source": "1339",
                "target": "1345",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1595",
                "source": "1347",
                "target": "1348",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1596",
                "source": "1349",
                "target": "1347",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1597",
                "source": "1344",
                "target": "1349",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1598",
                "source": "1343",
                "target": "1349",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1599",
                "source": "1351",
                "target": "1352",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1600",
                "source": "1353",
                "target": "1351",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1601",
                "source": "1348",
                "target": "1353",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1602",
                "source": "1347",
                "target": "1353",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1603",
                "source": "1355",
                "target": "1356",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1604",
                "source": "1357",
                "target": "1355",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1605",
                "source": "1352",
                "target": "1357",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1606",
                "source": "1351",
                "target": "1357",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1607",
                "source": "1359",
                "target": "1360",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1608",
                "source": "1361",
                "target": "1359",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1609",
                "source": "1356",
                "target": "1361",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1610",
                "source": "1355",
                "target": "1361",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1611",
                "source": "1363",
                "target": "1364",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1612",
                "source": "1365",
                "target": "1363",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1613",
                "source": "1360",
                "target": "1365",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1614",
                "source": "1359",
                "target": "1365",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1615",
                "source": "1367",
                "target": "1368",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1616",
                "source": "1369",
                "target": "1367",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1617",
                "source": "1364",
                "target": "1369",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1618",
                "source": "1363",
                "target": "1369",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1619",
                "source": "1371",
                "target": "1372",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1620",
                "source": "1373",
                "target": "1371",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1621",
                "source": "1368",
                "target": "1373",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1622",
                "source": "1367",
                "target": "1373",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1623",
                "source": "1375",
                "target": "1376",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1624",
                "source": "1377",
                "target": "1375",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1625",
                "source": "1372",
                "target": "1377",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1626",
                "source": "1371",
                "target": "1377",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1627",
                "source": "1379",
                "target": "1380",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1628",
                "source": "1381",
                "target": "1379",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1629",
                "source": "1376",
                "target": "1381",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1630",
                "source": "1375",
                "target": "1381",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1631",
                "source": "1383",
                "target": "1384",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1632",
                "source": "1385",
                "target": "1383",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1633",
                "source": "1380",
                "target": "1385",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1634",
                "source": "1379",
                "target": "1385",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1635",
                "source": "1387",
                "target": "1388",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1636",
                "source": "1389",
                "target": "1387",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1637",
                "source": "1384",
                "target": "1389",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1638",
                "source": "1383",
                "target": "1389",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1639",
                "source": "1391",
                "target": "1392",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1640",
                "source": "1393",
                "target": "1391",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1641",
                "source": "1388",
                "target": "1393",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1642",
                "source": "1387",
                "target": "1393",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1643",
                "source": "1395",
                "target": "1396",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1644",
                "source": "1397",
                "target": "1395",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1645",
                "source": "1392",
                "target": "1397",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1646",
                "source": "1391",
                "target": "1397",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1647",
                "source": "1399",
                "target": "1400",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1648",
                "source": "1401",
                "target": "1399",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1649",
                "source": "1396",
                "target": "1401",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1650",
                "source": "1395",
                "target": "1401",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1651",
                "source": "1403",
                "target": "1404",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1652",
                "source": "1405",
                "target": "1403",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1653",
                "source": "1400",
                "target": "1405",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1654",
                "source": "1399",
                "target": "1405",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1655",
                "source": "1407",
                "target": "1408",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1656",
                "source": "1409",
                "target": "1407",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1657",
                "source": "1404",
                "target": "1409",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1658",
                "source": "1403",
                "target": "1409",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1659",
                "source": "1411",
                "target": "1412",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1660",
                "source": "1413",
                "target": "1411",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1661",
                "source": "1408",
                "target": "1413",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1662",
                "source": "1407",
                "target": "1413",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1663",
                "source": "1417",
                "target": "1418",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1664",
                "source": "1420",
                "target": "1421",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1665",
                "source": "1422",
                "target": "1420",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1666",
                "source": "1418",
                "target": "1422",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1667",
                "source": "1417",
                "target": "1422",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1668",
                "source": "1421",
                "target": "1423",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1669",
                "source": "1420",
                "target": "1423",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1670",
                "source": "1415",
                "target": "1417",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1671",
                "source": "1412",
                "target": "1415",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1672",
                "source": "1411",
                "target": "1415",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1673",
                "source": "1427",
                "target": "1428",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1674",
                "source": "1427",
                "target": "1429",
                "name": "false",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1675",
                "source": "1425",
                "target": "1427",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1676",
                "source": "1430",
                "target": "1425",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1677",
                "source": "1423",
                "target": "1430",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1678",
                "source": "1415",
                "target": "1430",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1679",
                "source": "1432",
                "target": "1433",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1680",
                "source": "1434",
                "target": "1432",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1681",
                "source": "1428",
                "target": "1434",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1682",
                "source": "1429",
                "target": "1434",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1683",
                "source": "1425",
                "target": "1434",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1684",
                "source": "1436",
                "target": "1437",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1685",
                "source": "1433",
                "target": "1436",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1686",
                "source": "1432",
                "target": "1436",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1687",
                "source": "1439",
                "target": "1440",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1688",
                "source": "1437",
                "target": "1439",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1689",
                "source": "1436",
                "target": "1439",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1690",
                "source": "1442",
                "target": "1443",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1691",
                "source": "1444",
                "target": "1442",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1692",
                "source": "1440",
                "target": "1444",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1693",
                "source": "1439",
                "target": "1444",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1694",
                "source": "1446",
                "target": "1447",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1695",
                "source": "1448",
                "target": "1446",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1696",
                "source": "1442",
                "target": "1448",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1697",
                "source": "1450",
                "target": "1451",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1698",
                "source": "1452",
                "target": "1450",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1699",
                "source": "1446",
                "target": "1452",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1700",
                "source": "1454",
                "target": "1455",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1701",
                "source": "1456",
                "target": "1454",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1702",
                "source": "1451",
                "target": "1456",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1703",
                "source": "1450",
                "target": "1456",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1704",
                "source": "1460",
                "target": "1461",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1705",
                "source": "1460",
                "target": "1462",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1706",
                "source": "1458",
                "target": "1460",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1707",
                "source": "1463",
                "target": "1458",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1708",
                "source": "1454",
                "target": "1463",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1709",
                "source": "1465",
                "target": "1466",
                "name": "true",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1710",
                "source": "1467",
                "target": "1465",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1711",
                "source": "1458",
                "target": "1467",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1712",
                "source": "1466",
                "target": "1468",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1713",
                "source": "1465",
                "target": "1468",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1714",
                "source": "1216",
                "target": "1225",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1715",
                "source": "1468",
                "target": "1469",
                "type": "edge",
                "root": "1215"
            }
        },
        {
            "data": {
                "id": "1717",
                "name": "sub prepare_backend_request_headers",
                "parent": "1716",
                "compound": false,
                "type": "start",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1716",
                "name": "sub prepare_backend_request_headers",
                "compound": true,
                "type": "sub",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1718",
                "name": "if (req.http.geo:done == \"0\") [...] ",
                "parent": "1716",
                "compound": true,
                "type": "parent",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1719",
                "name": "if (req.http.geo:done == \"0\")",
                "parent": "1718",
                "compound": false,
                "type": "conditional",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1720",
                "name": "set bereq.method=\"HEAD\";",
                "parent": "1718",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1721",
                "name": "set bereq.http.geo:restarted = \"0\";\nset bereq.http.media:restarted = \"0\";",
                "parent": "1716",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1722",
                "name": "if (req.http.geo:done == \"1\") [...] ",
                "parent": "1716",
                "compound": true,
                "type": "parent",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1723",
                "name": "if (req.http.geo:done == \"1\")",
                "parent": "1722",
                "compound": false,
                "type": "conditional",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1724",
                "name": "if (req.http.media:options) [...] ",
                "parent": "1722",
                "compound": true,
                "type": "parent",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1725",
                "name": "if (req.http.media:options)",
                "parent": "1724",
                "compound": false,
                "type": "conditional",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1726",
                "name": "set bereq.request = \"OPTIONS\";",
                "parent": "1724",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1727",
                "name": "if (req.backend.is_origin) [...] ",
                "parent": "1716",
                "compound": true,
                "type": "parent",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1728",
                "name": "if (req.backend.is_origin)",
                "parent": "1727",
                "compound": false,
                "type": "conditional",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1729",
                "name": "if (req.http.geo:done == \"1\") [...] ",
                "parent": "1727",
                "compound": true,
                "type": "parent",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1730",
                "name": "if (req.http.geo:done == \"1\")",
                "parent": "1729",
                "compound": false,
                "type": "conditional",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1731",
                "name": "call set_origin_headers;",
                "parent": "1729",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1732",
                "name": "call set_geoip_origin_headers;",
                "parent": "1729",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1733",
                "name": "unset bereq.http.X-Varnish;\n#Unset geo and x-original as they're only needed within the VCL\nunset bereq.http.geo;\nunset bereq.http.media;\nunset bereq.http.x-original;\n#Remove x-edge-vcl-version and x-vcl-version-mismatch, which were used for tracking VCL version mismatches between edge and fetch nodes\nunset bereq.http.x-edge-vcl-version;\nunset bereq.http.x-vcl-version-mismatch;\n\n#Remove these, which are set by Fastly's boilterplate, as they make no sense to the origin\nunset bereq.http.Surrogate-Key;\nunset bereq.http.Surrogate-Control;\n\n#Unset some headers that were used for logging\nunset bereq.http.x-log;\nunset bereq.http.fastly-restarts;\n\n#Unset the header we used earlier to stash the Fastly-GTM PSK\nunset bereq.http.X-BBC-Fastly-PSK-save-for-later;\n\n#Set / modify / remove any headers that are required for the particular origin we're using (like authentication)\n#Unset this header, which was used for turning clustering back on after the restart (this is done here rather than above in case we enabled shielding later)\nunset bereq.http.Fastly-Force-Shield;",
                "parent": "1727",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1734",
                "name": "#Remove various headers before contacting the final origin",
                "parent": "1716",
                "compound": false,
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1735",
                "name": "end",
                "parent": "1716",
                "compound": false,
                "type": "terminal",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1736",
                "source": "1719",
                "target": "1720",
                "name": "true",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1737",
                "source": "1721",
                "target": "1719",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1738",
                "source": "1725",
                "target": "1726",
                "name": "true",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1739",
                "source": "1723",
                "target": "1725",
                "name": "true",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1740",
                "source": "1720",
                "target": "1723",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1741",
                "source": "1719",
                "target": "1723",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1742",
                "source": "1730",
                "target": "1731",
                "name": "true",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1743",
                "source": "1730",
                "target": "1732",
                "name": "false",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1744",
                "source": "1733",
                "target": "1730",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1745",
                "source": "1728",
                "target": "1733",
                "name": "true",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1746",
                "source": "1734",
                "target": "1728",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1747",
                "source": "1726",
                "target": "1734",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1748",
                "source": "1725",
                "target": "1734",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1749",
                "source": "1723",
                "target": "1734",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1750",
                "source": "1717",
                "target": "1721",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1751",
                "source": "1731",
                "target": "1735",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1752",
                "source": "1732",
                "target": "1735",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1753",
                "source": "1728",
                "target": "1735",
                "type": "edge",
                "root": "1716"
            }
        },
        {
            "data": {
                "id": "1755",
                "name": "sub set_request_back_to_original",
                "parent": "1754",
                "compound": false,
                "type": "start",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1754",
                "name": "sub set_request_back_to_original",
                "compound": true,
                "type": "sub",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1756",
                "name": "if (req.http.x-original) [...] ",
                "parent": "1754",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1757",
                "name": "if (req.http.x-original)",
                "parent": "1756",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1758",
                "name": "if (req.http.x-original:host && req.http.x-original:host != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1759",
                "name": "if (req.http.x-original:host && req.http.x-original:host != \"\")",
                "parent": "1758",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1760",
                "name": "set req.http.Host = req.http.x-original:host;",
                "parent": "1758",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1761",
                "name": "if (req.http.x-original:req-url && req.http.x-original:req-url != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1762",
                "name": "if (req.http.x-original:req-url && req.http.x-original:req-url != \"\")",
                "parent": "1761",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1763",
                "name": "set req.url = req.http.x-original:req-url;",
                "parent": "1761",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1764",
                "name": "unset req.http.x-original:host;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1765",
                "name": "if (req.http.x-original:method && req.http.x-original:method != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1766",
                "name": "if (req.http.x-original:method && req.http.x-original:method != \"\")",
                "parent": "1765",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1767",
                "name": "set req.request = req.http.x-original:method;",
                "parent": "1765",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1768",
                "name": "unset req.http.x-original:req-url;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1769",
                "name": "if (req.http.x-original:range && req.http.x-original:range != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1770",
                "name": "if (req.http.x-original:range && req.http.x-original:range != \"\")",
                "parent": "1769",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1771",
                "name": "set req.http.range = req.http.x-original:range;",
                "parent": "1769",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1772",
                "name": "unset req.http.x-original:method;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1773",
                "name": "if (req.http.x-original:if-modified-since && req.http.x-original:if-modified-since != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1774",
                "name": "if (req.http.x-original:if-modified-since && req.http.x-original:if-modified-since != \"\")",
                "parent": "1773",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1775",
                "name": "set req.http.if-modified-since = req.http.x-original:if-modified-since;",
                "parent": "1773",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1776",
                "name": "unset req.http.x-original:range;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1777",
                "name": "if (req.http.x-original:if-none-match && req.http.x-original:if-none-match != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1778",
                "name": "if (req.http.x-original:if-none-match && req.http.x-original:if-none-match != \"\")",
                "parent": "1777",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1779",
                "name": "set req.http.if-none-match = req.http.x-original:if-none-match;",
                "parent": "1777",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1780",
                "name": "unset req.http.x-original:if-modified-since;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1781",
                "name": "if (req.http.x-original:if-match && req.http.x-original:if-match != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1782",
                "name": "if (req.http.x-original:if-match && req.http.x-original:if-match != \"\")",
                "parent": "1781",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1783",
                "name": "set req.http.if-match = req.http.x-original:if-match;",
                "parent": "1781",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1784",
                "name": "unset req.http.x-original:if-none-match;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1785",
                "name": "if (req.http.x-original:if-unmodified-since && req.http.x-original:if-unmodified-since != \"\") [...] ",
                "parent": "1756",
                "compound": true,
                "type": "parent",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1786",
                "name": "if (req.http.x-original:if-unmodified-since && req.http.x-original:if-unmodified-since != \"\")",
                "parent": "1785",
                "compound": false,
                "type": "conditional",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1787",
                "name": "set req.http.if-unmodified-since = req.http.x-original:if-unmodified-since;",
                "parent": "1785",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1788",
                "name": "unset req.http.x-original:if-match;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1789",
                "name": "unset req.http.x-original:if-unmodified-since;",
                "parent": "1756",
                "compound": false,
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1790",
                "name": "end",
                "parent": "1754",
                "compound": false,
                "type": "terminal",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1791",
                "source": "1759",
                "target": "1760",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1792",
                "source": "1762",
                "target": "1763",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1793",
                "source": "1764",
                "target": "1762",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1794",
                "source": "1760",
                "target": "1764",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1795",
                "source": "1759",
                "target": "1764",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1796",
                "source": "1766",
                "target": "1767",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1797",
                "source": "1768",
                "target": "1766",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1798",
                "source": "1763",
                "target": "1768",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1799",
                "source": "1762",
                "target": "1768",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1800",
                "source": "1770",
                "target": "1771",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1801",
                "source": "1772",
                "target": "1770",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1802",
                "source": "1767",
                "target": "1772",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1803",
                "source": "1766",
                "target": "1772",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1804",
                "source": "1774",
                "target": "1775",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1805",
                "source": "1776",
                "target": "1774",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1806",
                "source": "1771",
                "target": "1776",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1807",
                "source": "1770",
                "target": "1776",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1808",
                "source": "1778",
                "target": "1779",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1809",
                "source": "1780",
                "target": "1778",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1810",
                "source": "1775",
                "target": "1780",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1811",
                "source": "1774",
                "target": "1780",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1812",
                "source": "1782",
                "target": "1783",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1813",
                "source": "1784",
                "target": "1782",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1814",
                "source": "1779",
                "target": "1784",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1815",
                "source": "1778",
                "target": "1784",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1816",
                "source": "1786",
                "target": "1787",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1817",
                "source": "1788",
                "target": "1786",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1818",
                "source": "1783",
                "target": "1788",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1819",
                "source": "1782",
                "target": "1788",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1820",
                "source": "1787",
                "target": "1789",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1821",
                "source": "1786",
                "target": "1789",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1822",
                "source": "1757",
                "target": "1759",
                "name": "true",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1823",
                "source": "1755",
                "target": "1757",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1824",
                "source": "1789",
                "target": "1790",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1825",
                "source": "1757",
                "target": "1790",
                "type": "edge",
                "root": "1754"
            }
        },
        {
            "data": {
                "id": "1827",
                "name": "sub method_filter",
                "parent": "1826",
                "compound": false,
                "type": "start",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1826",
                "name": "sub method_filter",
                "compound": true,
                "type": "sub",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1828",
                "name": "if (req.method != \"HEAD\" && req.method != \"GET\" && req.method != \"OPTIONS\" && req.request != \"FASTLYPURGE\") [...] ",
                "parent": "1826",
                "compound": true,
                "type": "parent",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1829",
                "name": "if (req.method != \"HEAD\" && req.method != \"GET\" && req.method != \"OPTIONS\" && req.request != \"FASTLYPURGE\")",
                "parent": "1828",
                "compound": false,
                "type": "conditional",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1830",
                "name": "error 405;",
                "parent": "1828",
                "compound": false,
                "type": "terminal",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1831",
                "name": "end",
                "parent": "1826",
                "compound": false,
                "type": "terminal",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1832",
                "source": "1829",
                "target": "1830",
                "name": "true",
                "type": "edge",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1833",
                "source": "1827",
                "target": "1829",
                "type": "edge",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1834",
                "source": "1829",
                "target": "1831",
                "type": "edge",
                "root": "1826"
            }
        },
        {
            "data": {
                "id": "1836",
                "name": "sub qs_filter",
                "parent": "1835",
                "compound": false,
                "type": "start",
                "root": "1835"
            }
        },
        {
            "data": {
                "id": "1835",
                "name": "sub qs_filter",
                "compound": true,
                "type": "sub",
                "root": "1835"
            }
        },
        {
            "data": {
                "id": "1837",
                "name": "set req.url = querystring.remove(req.url);",
                "parent": "1835",
                "compound": false,
                "root": "1835"
            }
        },
        {
            "data": {
                "id": "1838",
                "name": "end",
                "parent": "1835",
                "compound": false,
                "type": "terminal",
                "root": "1835"
            }
        },
        {
            "data": {
                "id": "1839",
                "source": "1836",
                "target": "1837",
                "type": "edge",
                "root": "1835"
            }
        },
        {
            "data": {
                "id": "1840",
                "source": "1837",
                "target": "1838",
                "type": "edge",
                "root": "1835"
            }
        },
        {
            "data": {
                "id": "1842",
                "name": "sub enforce_geo_check",
                "parent": "1841",
                "compound": false,
                "type": "start",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1841",
                "name": "sub enforce_geo_check",
                "compound": true,
                "type": "sub",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1843",
                "name": "if (req.url !~ \"/geowmi/?$\") [...] ",
                "parent": "1841",
                "compound": true,
                "type": "parent",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1844",
                "name": "if (req.url !~ \"/geowmi/?$\")",
                "parent": "1843",
                "compound": false,
                "type": "conditional",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1845",
                "name": "if( req.http.host ~ \"(?i)^[^\\.]*-uk\\.(stage|live)\\..*\" ) [...] ",
                "parent": "1843",
                "compound": true,
                "type": "parent",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1846",
                "name": "if( req.http.host ~ \"(?i)^[^\\.]*-uk\\.(stage|live)\\..*\" )",
                "parent": "1845",
                "compound": false,
                "type": "conditional",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1847",
                "name": "if ((req.http.X-Ip_is_uk_combined != \"yes\" || req.http.X-BBC-Edge-Client-IP ~ ip_deny_list) && req.http.X-BBC-Edge-Client-IP !~ ip_allow_list) [...] ",
                "parent": "1845",
                "compound": true,
                "type": "parent",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1848",
                "name": "if ((req.http.X-Ip_is_uk_combined != \"yes\" || req.http.X-BBC-Edge-Client-IP ~ ip_deny_list) && req.http.X-BBC-Edge-Client-IP !~ ip_allow_list)",
                "parent": "1847",
                "compound": false,
                "type": "conditional",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1849",
                "name": "error 604;",
                "parent": "1847",
                "compound": false,
                "type": "terminal",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1850",
                "name": "end",
                "parent": "1841",
                "compound": false,
                "type": "terminal",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1851",
                "source": "1848",
                "target": "1849",
                "name": "true",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1852",
                "source": "1846",
                "target": "1848",
                "name": "true",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1853",
                "source": "1844",
                "target": "1846",
                "name": "true",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1854",
                "source": "1842",
                "target": "1844",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1855",
                "source": "1848",
                "target": "1850",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1856",
                "source": "1846",
                "target": "1850",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1857",
                "source": "1844",
                "target": "1850",
                "type": "edge",
                "root": "1841"
            }
        },
        {
            "data": {
                "id": "1859",
                "name": "sub request_filter",
                "parent": "1858",
                "compound": false,
                "type": "start",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1858",
                "name": "sub request_filter",
                "compound": true,
                "type": "sub",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1860",
                "name": "if( [...] ",
                "parent": "1858",
                "compound": true,
                "type": "parent",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1861",
                "name": "if(",
                "parent": "1860",
                "compound": false,
                "type": "conditional",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1862",
                "name": "error 606;",
                "parent": "1860",
                "compound": false,
                "type": "terminal",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1863",
                "name": "if( [...] ",
                "parent": "1858",
                "compound": true,
                "type": "parent",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1864",
                "name": "if(",
                "parent": "1863",
                "compound": false,
                "type": "conditional",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1865",
                "name": "error 607;",
                "parent": "1863",
                "compound": false,
                "type": "terminal",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1866",
                "name": "# Blocking BBC1 HD (TA-2248)",
                "parent": "1858",
                "compound": false,
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1867",
                "name": "if (req.url.path ~ \"/-\") [...] ",
                "parent": "1858",
                "compound": true,
                "type": "parent",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1868",
                "name": "if (req.url.path ~ \"/-\")",
                "parent": "1867",
                "compound": false,
                "type": "conditional",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1869",
                "name": "error 605;",
                "parent": "1867",
                "compound": false,
                "type": "terminal",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1870",
                "name": "# Blocking negative segment numbers (TA-2219). Technically this blocks more than that, but we're doing it this way for consistency with CloudFront, which has more limited path matching",
                "parent": "1858",
                "compound": false,
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1871",
                "name": "end",
                "parent": "1858",
                "compound": false,
                "type": "terminal",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1872",
                "source": "1861",
                "target": "1862",
                "name": "true",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1873",
                "source": "1864",
                "target": "1865",
                "name": "true",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1874",
                "source": "1866",
                "target": "1864",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1875",
                "source": "1861",
                "target": "1866",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1876",
                "source": "1868",
                "target": "1869",
                "name": "true",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1877",
                "source": "1870",
                "target": "1868",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1878",
                "source": "1864",
                "target": "1870",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1879",
                "source": "1859",
                "target": "1861",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1880",
                "source": "1868",
                "target": "1871",
                "type": "edge",
                "root": "1858"
            }
        },
        {
            "data": {
                "id": "1882",
                "name": "sub vcl_pipe",
                "parent": "1881",
                "compound": false,
                "type": "start",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1881",
                "name": "sub vcl_pipe",
                "compound": true,
                "type": "sub",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1883",
                "name": "if (req.http.Fastly-FF) [...] ",
                "parent": "1881",
                "compound": true,
                "type": "parent",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1884",
                "name": "if (req.http.Fastly-FF)",
                "parent": "1883",
                "compound": false,
                "type": "conditional",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1885",
                "name": "set bereq.http.Fastly-Client = \"1\";",
                "parent": "1883",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1886",
                "name": "unset bereq.http.Fastly-Original-Cookie;\nunset bereq.http.Fastly-Original-URL;\nunset bereq.http.Fastly-Vary-String;\nunset bereq.http.X-Varnish-Client;",
                "parent": "1881",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1887",
                "name": "{\n# do not send this to the backend",
                "parent": "1881",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1888",
                "name": "if (req.http.Fastly-Temp-XFF) [...] ",
                "parent": "1881",
                "compound": true,
                "type": "parent",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1889",
                "name": "if (req.http.Fastly-Temp-XFF)",
                "parent": "1888",
                "compound": false,
                "type": "conditional",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1890",
                "name": "if (req.http.Fastly-Temp-XFF == \"\") [...] ",
                "parent": "1888",
                "compound": true,
                "type": "parent",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1891",
                "name": "if (req.http.Fastly-Temp-XFF == \"\")",
                "parent": "1890",
                "compound": false,
                "type": "conditional",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1892",
                "name": "unset bereq.http.X-Forwarded-For;",
                "parent": "1890",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1893",
                "name": "set bereq.http.X-Forwarded-For = req.http.Fastly-Temp-XFF;",
                "parent": "1890",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1894",
                "name": "# unset bereq.http.Fastly-Temp-XFF;",
                "parent": "1888",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1895",
                "name": "#--FASTLY BEREQ END\n\n\n#;\nset req.http.Fastly-Cachetype = \"PIPE\";\nset bereq.http.connection = \"close\";",
                "parent": "1881",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1896",
                "name": "{\n\n\n#--FASTLY BEREQ BEGIN",
                "parent": "1881",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1897",
                "name": "#--FASTLY PIPE END",
                "parent": "1881",
                "compound": false,
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1898",
                "name": "end",
                "parent": "1881",
                "compound": false,
                "type": "terminal",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1899",
                "source": "1884",
                "target": "1885",
                "name": "true",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1900",
                "source": "1887",
                "target": "1886",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1901",
                "source": "1885",
                "target": "1887",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1902",
                "source": "1884",
                "target": "1887",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1903",
                "source": "1891",
                "target": "1892",
                "name": "true",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1904",
                "source": "1891",
                "target": "1893",
                "name": "false",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1905",
                "source": "1892",
                "target": "1894",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1906",
                "source": "1893",
                "target": "1894",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1907",
                "source": "1889",
                "target": "1891",
                "name": "true",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1908",
                "source": "1886",
                "target": "1889",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1909",
                "source": "1894",
                "target": "1895",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1910",
                "source": "1889",
                "target": "1895",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1911",
                "source": "1896",
                "target": "1895",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1912",
                "source": "1895",
                "target": "1897",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1913",
                "source": "1882",
                "target": "1896",
                "type": "edge",
                "root": "1881"
            }
        },
        {
            "data": {
                "id": "1914",
                "source": "1897",
                "target": "1898",
                "type": "edge",
                "root": "1881"
            }
        }
    ]
}